{
  "configurations" : [
    {
      "hdfs-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "NAMENODE:hdfs_namenode;DATANODE:hdfs_datanode;SECONDARY_NAMENODE:hdfs_secondarynamenode;JOURNALNODE:hdfs_journalnode;ZKFC:hdfs_zkfc;NFS_GATEWAY:hdfs_nfs3",
          "content" : "{  "input":[    {      "type":"hdfs_datanode",      "rowtype":"service",      "path":"{{default('/configurations/hadoop-env/hdfs_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}/hadoop-{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}-datanode-*.log"    },    {      "type":"hdfs_namenode",      "rowtype":"service",      "path":"{{default('/configurations/hadoop-env/hdfs_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}/hadoop-{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}-namenode-*.log"    },    {      "type":"hdfs_journalnode",      "rowtype":"service",      "path":"{{default('/configurations/hadoop-env/hdfs_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}/hadoop-{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}-journalnode-*.log"    },    {      "type":"hdfs_secondarynamenode",      "rowtype":"service",      "path":"{{default('/configurations/hadoop-env/hdfs_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}/hadoop-{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}-secondarynamenode-*.log"    },    {      "type":"hdfs_zkfc",      "rowtype":"service",      "path":"{{default('/configurations/hadoop-env/hdfs_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}/hadoop-{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}-zkfc-*.log"    },    {      "type":"hdfs_nfs3",      "rowtype":"service",      "path":"{{default('/configurations/hadoop-env/hdfs_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}/hadoop-{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}-nfs3-*.log"    },    {      "type":"hdfs_audit",      "rowtype":"audit",      "is_enabled":"true",      "add_fields":{        "logType":"HDFSAudit",        "enforcer":"hadoop-acl",        "repoType":"1",        "repo":"hdfs"      },      "path":"{{default('/configurations/hadoop-env/hdfs_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}/hdfs-audit.log"    }   ],  "filter":[    {      "filter":"grok",      "conditions":{        "fields":{          "type":[            "hdfs_datanode",            "hdfs_journalnode",            "hdfs_secondarynamenode",            "hdfs_namenode",            "hdfs_zkfc",            "hdfs_nfs3"          ]         }       },      "log4j_format":"%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n",      "multiline_pattern":"^(%{TIMESTAMP_ISO8601:logtime})",      "message_pattern":"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}%{JAVACLASS:logger_name}%{SPACE}\\\\(%{JAVAFILE:file}:%{JAVAMETHOD:method}\\\\(%{INT:line_number}\\\\)\\\\)%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}",      "post_map_values":{        "logtime":{          "map_date":{            "target_date_pattern":"yyyy-MM-dd HH:mm:ss,SSS"          }        }       }     },    {      "filter":"grok",      "conditions":{        "fields":{          "type":[            "hdfs_audit"          ]         }       },      "log4j_format":"%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n",      "multiline_pattern":"^(%{TIMESTAMP_ISO8601:evtTime})",      "message_pattern":"(?m)^%{TIMESTAMP_ISO8601:evtTime}%{SPACE}%{LOGLEVEL:level}%{SPACE}%{JAVACLASS:logger_name}:%{SPACE}%{GREEDYDATA:log_message}",      "post_map_values":{        "evtTime":{          "map_date":{            "target_date_pattern":"yyyy-MM-dd HH:mm:ss,SSS"          }         }       }     },    {      "filter":"keyvalue",      "sort_order":1,      "conditions":{        "fields":{          "type":[            "hdfs_audit"          ]         }       },      "source_field":"log_message",      "value_split":"=",      "field_split":"\\t",      "post_map_values":{        "src":{          "map_fieldname":{            "new_fieldname":"resource"          }         },        "ip":{          "map_fieldname":{            "new_fieldname":"cliIP"          }         },        "allowed":[          {            "map_fieldvalue":{              "pre_value":"true",              "post_value":"1"            }           },          {            "map_fieldvalue":{              "pre_value":"false",              "post_value":"0"            }           },          {            "map_fieldname":{              "new_fieldname":"result"            }           }         ],        "cmd":{          "map_fieldname":{            "new_fieldname":"action"          }         },        "proto":{          "map_fieldname":{            "new_fieldname":"cliType"          }         },        "callerContext":{          "map_fieldname":{            "new_fieldname":"req_caller_id"          }         }       }     },    {      "filter":"grok",      "sort_order":2,      "source_field":"ugi",      "remove_source_field":"false",      "conditions":{        "fields":{          "type":[            "hdfs_audit"          ]         }       },      "message_pattern":"%{USERNAME:p_user}.+auth:%{USERNAME:p_authType}.+via %{USERNAME:k_user}.+auth:%{USERNAME:k_authType}|%{USERNAME:user}.+auth:%{USERNAME:authType}|%{USERNAME:x_user}",      "post_map_values":{        "user":{          "map_fieldname":{            "new_fieldname":"reqUser"          }         },        "x_user":{          "map_fieldname":{            "new_fieldname":"reqUser"          }         },        "p_user":{          "map_fieldname":{            "new_fieldname":"reqUser"          }         },        "k_user":{          "map_fieldname":{            "new_fieldname":"proxyUsers"          }         },        "p_authType":{          "map_fieldname":{            "new_fieldname":"authType"          }         },        "k_authType":{          "map_fieldname":{            "new_fieldname":"proxyAuthType"          }         }       }     }   ] }",
          "service_name" : "HDFS"
        }
      }
    },
    {
      "hive-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "HIVE_METASTORE:hive_metastore;HIVE_SERVER:hive_hiveserver2;WEBHCAT_SERVER:webhcat_server",
          "content" : "{  "input":[    {      "type":"hive_hiveserver2",      "rowtype":"service",      "path":"{{default('/configurations/hive-env/hive_log_dir', '/var/log/hive')}}/hiveserver2.log"    },    {      "type":"hive_metastore",      "rowtype":"service",      "path":"{{default('/configurations/hive-env/hive_log_dir', '/var/log/hive')}}/hivemetastore.log"    },    {      "type": "webhcat_server",      "rowntype":"service",      "path":"{{default('configurations/hive-env/hcat_log_dir', '/var/log/webhcat')}}/webhcat.log"    }  ],  "filter":[    {      "filter":"grok",      "conditions":{        "fields":{          "type":[            "hive_hiveserver2",            "hive_metastore"          ]         }       },      "log4j_format":"%d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%n",      "multiline_pattern":"^(%{TIMESTAMP_ISO8601:logtime})",      "message_pattern":"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}\\\\[%{DATA:thread_name}\\\\]:%{SPACE}%{JAVACLASS:logger_name}%{SPACE}\\\\(%{JAVAFILE:file}:%{JAVAMETHOD:method}\\\\(%{INT:line_number}\\\\)\\\\)%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}",      "post_map_values":{        "logtime":{          "map_date":{            "target_date_pattern":"yyyy-MM-dd HH:mm:ss,SSS"          }         }       }     },    {      "filter":"grok",      "conditions":{        "fields":{          "type":[            "webhcat_server"          ]         }       },      "log4j_format":" %-5p | %d{DATE} | %c | %m%n",      "multiline_pattern":"^(%{SPACE}%{LOGLEVEL:level}%{CUSTOM_SEPARATOR}%{CUSTOM_DATESTAMP:logtime})",      "message_pattern":"(?m)^%{SPACE}%{LOGLEVEL:level}%{CUSTOM_SEPARATOR}%{CUSTOM_DATESTAMP:logtime}%{CUSTOM_SEPARATOR}%{JAVACLASS:file}%{CUSTOM_SEPARATOR}%{GREEDYDATA:log_message}",      "post_map_values":{        "logtime":{          "map_date":{            "target_date_pattern":"dd MMM yyyy HH:mm:ss,SSS"          }         },        "level":{           "map_fieldvalue":{             "pre_value":"WARNING",             "post_value":"WARN"            }        }       }     }   ] }",
          "service_name" : "Hive"
        }
      }
    },
    {
      "zoo.cfg" : {
        "properties_attributes" : { },
        "properties" : {
          "autopurge.purgeInterval" : "24",
          "dataDir" : "/hadoop/zookeeper",
          "autopurge.snapRetainCount" : "30",
          "clientPort" : "2181",
          "initLimit" : "10",
          "tickTime" : "3000",
          "syncLimit" : "5"
        }
      }
    },
    {
      "ams-hbase-site" : {
        "properties_attributes" : {
          "final" : {
            "hbase.zookeeper.quorum" : "true"
          }
        },
        "properties" : {
          "hfile.block.cache.size" : "0.3",
          "phoenix.query.spoolThresholdBytes" : "20971520",
          "hbase.zookeeper.property.dataDir" : "${hbase.tmp.dir}/zookeeper",
          "hbase.regionserver.thread.compaction.large" : "2",
          "hbase.master.port" : "61300",
          "zookeeper.session.timeout.localHBaseCluster" : "120000",
          "phoenix.query.keepAliveMs" : "300000",
          "hbase.local.dir" : "${hbase.tmp.dir}/local",
          "phoenix.query.timeoutMs" : "300000",
          "hbase.regionserver.thread.compaction.small" : "3",
          "hbase.zookeeper.quorum" : "{{zookeeper_quorum_hosts}}",
          "hbase.client.scanner.timeout.period" : "300000",
          "hbase.regionserver.info.port" : "61330",
          "phoenix.query.rowKeyOrderSaltedTable" : "true",
          "phoenix.mutate.batchSize" : "10000",
          "zookeeper.znode.parent" : "/ams-hbase-unsecure",
          "hbase.master.info.port" : "61310",
          "hbase.rootdir" : "file:///var/lib/ambari-metrics-collector/hbase",
          "hbase.cluster.distributed" : "false",
          "hbase.hregion.majorcompaction" : "0",
          "hbase.hstore.flusher.count" : "2",
          "hbase.master.normalizer.class" : "org.apache.hadoop.hbase.master.normalizer.SimpleRegionNormalizer",
          "hbase.snapshot.enabled" : "false",
          "phoenix.spool.directory" : "${hbase.tmp.dir}/phoenix-spool",
          "phoenix.coprocessor.maxMetaDataCacheSize" : "20480000",
          "hbase.zookeeper.property.tickTime" : "6000",
          "hbase.zookeeper.leaderport" : "61388",
          "phoenix.sequence.saltBuckets" : "2",
          "hbase.hstore.blockingStoreFiles" : "200",
          "zookeeper.session.timeout" : "120000",
          "phoenix.coprocessor.maxServerCacheTimeToLiveMs" : "60000",
          "hbase.master.info.bindAddress" : "0.0.0.0",
          "hbase.regionserver.global.memstore.lowerLimit" : "0.3",
          "dfs.client.read.shortcircuit" : "true",
          "phoenix.query.maxGlobalMemoryPercentage" : "15",
          "hbase.hregion.memstore.flush.size" : "134217728",
          "hbase.hregion.max.filesize" : "4294967296",
          "phoenix.groupby.maxCacheSize" : "307200000",
          "hbase.master.wait.on.regionservers.mintostart" : "1",
          "hbase.regionserver.global.memstore.upperLimit" : "0.35",
          "hbase.normalizer.period" : "600000",
          "hbase.tmp.dir" : "/var/lib/ambari-metrics-collector/hbase-tmp",
          "hbase.client.scanner.caching" : "10000",
          "hbase.replication" : "false",
          "hbase.rpc.timeout" : "300000",
          "hbase.superuser" : "activity_explorer,activity_analyzer",
          "hbase.zookeeper.peerport" : "61288",
          "hbase.regionserver.port" : "61320",
          "hbase.zookeeper.property.clientPort" : "{{zookeeper_clientPort}}",
          "hbase.hregion.memstore.block.multiplier" : "4",
          "hbase.normalizer.enabled" : "false"
        }
      }
    },
    {
      "zookeeper-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "zookeeper_log_max_backup_size" : "10",
          "zookeeper_log_number_of_backup_files" : "10",
          "content" : "### Licensed to the Apache Software Foundation (ASF) under one# or more contributor license agreements.  See the NOTICE file# distributed with this work for additional information# regarding copyright ownership.  The ASF licenses this file# to you under the Apache License, Version 2.0 (the# "License"); you may not use this file except in compliance# with the License.  You may obtain a copy of the License at##   http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing,# software distributed under the License is distributed on an# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY# KIND, either express or implied.  See the License for the# specific language governing permissions and limitations# under the License.##### ZooKeeper Logging Configuration## DEFAULT: console appender onlylog4j.rootLogger=INFO, CONSOLE, ROLLINGFILE# Example with rolling log file#log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE# Example with rolling log file and tracing#log4j.rootLogger=TRACE, CONSOLE, ROLLINGFILE, TRACEFILE## Log INFO level and above messages to the console#log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppenderlog4j.appender.CONSOLE.Threshold=INFOlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayoutlog4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n## Add ROLLINGFILE to rootLogger to get log file output#    Log DEBUG level and above messages to a log filelog4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppenderlog4j.appender.ROLLINGFILE.Threshold=DEBUGlog4j.appender.ROLLINGFILE.File={{zk_log_dir}}/zookeeper.log# Max log file size of 10MBlog4j.appender.ROLLINGFILE.MaxFileSize={{zookeeper_log_max_backup_size}}MB# uncomment the next line to limit number of backup files#log4j.appender.ROLLINGFILE.MaxBackupIndex={{zookeeper_log_number_of_backup_files}}log4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayoutlog4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n## Add TRACEFILE to rootLogger to get log file output#    Log DEBUG level and above messages to a log filelog4j.appender.TRACEFILE=org.apache.log4j.FileAppenderlog4j.appender.TRACEFILE.Threshold=TRACElog4j.appender.TRACEFILE.File=zookeeper_trace.loglog4j.appender.TRACEFILE.layout=org.apache.log4j.PatternLayout### Notice we are including log4j's NDC here (%x)log4j.appender.TRACEFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L][%x] - %m%n"
        }
      }
    },
    {
      "pig-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "JAVA_HOME={{java64_home}}HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}if [ -d "/usr/lib/tez" ]; then  PIG_OPTS="$PIG_OPTS -Dmapreduce.framework.name=yarn"fi"
        }
      }
    },
    {
      "ranger-hdfs-policymgr-ssl" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "activity-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "activity_max_file_size" : "30",
          "activity-log4j-content" : "# Copyright (c) 2011-2017, Hortonworks Inc.  All rights reserved.# Except as expressly permitted in a written agreement between you# or your company and Hortonworks, Inc, any use, reproduction,# modification, redistribution, sharing, lending or other exploitation# of all or any part of the contents of this file is strictly prohibited.# Define some default values that can be overridden by system properties# Root logger optionlog4j.rootLogger=INFO,filelog4j.appender.file=org.apache.log4j.RollingFileAppenderlog4j.appender.file.File={{activity_log_dir}}/${log.file.name}log4j.appender.file.MaxFileSize={{activity_max_file_size}}MBlog4j.appender.file.MaxBackupIndex={{activity_max_backup_index}}log4j.appender.file.layout=org.apache.log4j.PatternLayoutlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} %5p [%t] %c{1}:%L - %m%n",
          "activity_log_dir" : "/var/log/smartsense-activity",
          "activity_max_backup_index" : "10"
        }
      }
    },
    {
      "ams-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "METRICS_COLLECTOR:ams_collector,ams_hbase_master,ams_hbase_regionserver;METRICS_MONITOR:ams_monitor;METRICS_GRAFANA:ams_grafana",
          "content" : "{  "input":[    {      "type":"ams_hbase_master",      "rowtype":"service",      "path":"{{default('/configurations/ams-env/metrics_collector_log_dir', '/var/log/ambari-metrics-collector')}}/hbase-ams-master-*.log"    },    {      "type":"ams_hbase_regionserver",      "rowtype":"service",      "path":"{{default('/configurations/ams-env/metrics_collector_log_dir', '/var/log/ambari-metrics-collector')}}/hbase-ams-regionserver-*.log"    },    {      "type":"ams_collector",      "rowtype":"service",      "path":"{{default('/configurations/ams-env/metrics_collector_log_dir', '/var/log/ambari-metrics-collector')}}/ambari-metrics-collector.log"    },    {      "type":"ams_monitor",      "rowtype":"service",      "path":"{{default('/configurations/ams-env/metrics_monitor_log_dir', '/var/log/ambari-metrics-monitor')}}/ambari-metrics-monitor.out"    },    {      "type":"ams_grafana",      "rowtype":"service",      "path":"{{default('/configurations/ams-grafana-env/metrics_grafana_log_dir', '/var/log/ambari-metrics-grafana')}}/grafana.log"    }  ],  "filter":[    {      "filter":"grok",      "conditions":{        "fields":{          "type":[            "ams_collector"          ]         }       },      "log4j_format":"%d{ISO8601} %p %c: %m%n",      "multiline_pattern":"^(%{TIMESTAMP_ISO8601:logtime})",      "message_pattern":"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}%{JAVACLASS:logger_name}:%{SPACE}%{GREEDYDATA:log_message}",      "post_map_values":{        "logtime":{          "map_date":{            "target_date_pattern":"yyyy-MM-dd HH:mm:ss,SSS"          }         }       }     },    {      "filter":"grok",      "conditions":{        "fields":{          "type":[            "ams_hbase_master",            "ams_hbase_regionserver"          ]         }       },      "log4j_format":"%d{ISO8601} %-5p [%t] %c{2}: %m%n",      "multiline_pattern":"^(%{TIMESTAMP_ISO8601:logtime})",      "message_pattern":"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}\\\\[%{DATA:thread_name}\\\\]%{SPACE}%{JAVACLASS:logger_name}:%{SPACE}%{GREEDYDATA:log_message}",      "post_map_values":{        "logtime":{          "map_date":{            "target_date_pattern":"yyyy-MM-dd HH:mm:ss,SSS"          }         }       }     },    {      "filter":"grok",      "conditions":{        "fields":{          "type":[            "ams_grafana"          ]         }       },      "log4j_format":"%d{ISO8601} %-5p [%t] %c{2}: %m%n",      "multiline_pattern":"^(%{DATESTAMP:logtime})",      "message_pattern":"(?m)^%{DATESTAMP:logtime}%{SPACE}\\\\[%{WORD:level}\\\\]%{SPACE}%{GREEDYDATA:log_message}",      "post_map_values":{        "logtime":{          "map_date":{            "target_date_pattern":"yyyy/MM/dd HH:mm:ss"          }         },        "level":[          {            "map_fieldvalue":{              "pre_value":"I",              "post_value":"INFO"            }          },          {            "map_fieldvalue":{              "pre_value":"W",              "post_value":"WARN"            }          },          {            "map_fieldvalue":{              "pre_value":"D",              "post_value":"DEBUG"             }           },           {             "map_fieldvalue":{               "pre_value":"E",               "post_value":"ERROR"             }           },           {             "map_fieldvalue":{               "pre_value":"F",               "post_value":"FATAL"             }           }         ]       }     },    {      "filter":"grok",      "conditions":{        "fields":{          "type":[            "ams_monitor"          ]        }      },      "log4j_format":"",      "multiline_pattern":"^(%{TIMESTAMP_ISO8601:logtime})",      "message_pattern":"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}\\\\[%{LOGLEVEL:level}\\\\]%{SPACE}%{JAVAFILE:file}:%{INT:line_number}%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}",      "post_map_values":{        "logtime":{          "map_date":{            "target_date_pattern":"yyyy-MM-dd HH:mm:ss,SSS"          }         }       },      "level":[        {          "map_fieldvalue":{            "pre_value":"WARNING",            "post_value":"WARN"          }        }      ]     }   ] }",
          "service_name" : "AMS"
        }
      }
    },
    {
      "ranger-yarn-policymgr-ssl" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "hive-log4j2" : {
        "properties_attributes" : { },
        "properties" : {
          "hive2_log_maxfilesize" : "256",
          "hive2_log_maxbackupindex" : "30",
          "content" : "# Licensed to the Apache Software Foundation (ASF) under one# or more contributor license agreements.  See the NOTICE file# distributed with this work for additional information# regarding copyright ownership.  The ASF licenses this file# to you under the Apache License, Version 2.0 (the# "License"); you may not use this file except in compliance# with the License.  You may obtain a copy of the License at##     http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing, software# distributed under the License is distributed on an "AS IS" BASIS,# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.# See the License for the specific language governing permissions and# limitations under the License.status = INFOname = HiveLog4j2packages = org.apache.hadoop.hive.ql.log# list of propertiesproperty.hive.log.level = {{hive_log_level}}property.hive.root.logger = DRFAproperty.hive.log.dir = ${sys:java.io.tmpdir}/${sys:user.name}property.hive.log.file = hive.log# list of all appendersappenders = console, DRFA# console appenderappender.console.type = Consoleappender.console.name = consoleappender.console.target = SYSTEM_ERRappender.console.layout.type = PatternLayoutappender.console.layout.pattern = %d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n# daily rolling file appenderappender.DRFA.type = RollingFileappender.DRFA.name = DRFAappender.DRFA.fileName = ${sys:hive.log.dir}/${sys:hive.log.file}# Use %pid in the filePattern to append process-id@host-name to the filename if you want separate log files for different CLI sessionappender.DRFA.filePattern = ${sys:hive.log.dir}/${sys:hive.log.file}.%d{yyyy-MM-dd}_%i.gzappender.DRFA.layout.type = PatternLayoutappender.DRFA.layout.pattern = %d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%nappender.DRFA.policies.type = Policiesappender.DRFA.policies.time.type = TimeBasedTriggeringPolicyappender.DRFA.policies.time.interval = 1appender.DRFA.policies.time.modulate = trueappender.DRFA.strategy.type = DefaultRolloverStrategyappender.DRFA.strategy.max = {{hive2_log_maxbackupindex}}appender.DRFA.policies.fsize.type = SizeBasedTriggeringPolicyappender.DRFA.policies.fsize.size = {{hive2_log_maxfilesize}}MB# list of all loggersloggers = NIOServerCnxn, ClientCnxnSocketNIO, DataNucleus, Datastore, JPOXlogger.NIOServerCnxn.name = org.apache.zookeeper.server.NIOServerCnxnlogger.NIOServerCnxn.level = WARNlogger.ClientCnxnSocketNIO.name = org.apache.zookeeper.ClientCnxnSocketNIOlogger.ClientCnxnSocketNIO.level = WARNlogger.DataNucleus.name = DataNucleuslogger.DataNucleus.level = ERRORlogger.Datastore.name = Datastorelogger.Datastore.level = ERRORlogger.JPOX.name = JPOXlogger.JPOX.level = ERROR# root loggerrootLogger.level = ${sys:hive.log.level}rootLogger.appenderRefs = rootrootLogger.appenderRef.root.ref = ${sys:hive.root.logger}"
        }
      }
    },
    {
      "mapred-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "HISTORYSERVER:mapred_historyserver",
          "content" : "{  "input":[    {      "type" : "mapred_historyserver",      "rowtype":"service",      "path":"{{default('/configurations/mapred-env/mapred_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/mapred-env/mapred_user', 'mapred')}}/mapred-{{default('configurations/mapred-env/mapred_user', 'mapred')}}-historyserver*.log"    }   ],  "filter":[    {      "filter":"grok",      "conditions":{        "fields":{          "type":[            "mapred_historyserver"          ]         }       },      "log4j_format":"%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n",      "multiline_pattern":"^(%{TIMESTAMP_ISO8601:logtime})",      "message_pattern":"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}%{JAVACLASS:logger_name}%{SPACE}\\\\(%{JAVAFILE:file}:%{JAVAMETHOD:method}\\\\(%{INT:line_number}\\\\)\\\\)%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}",      "post_map_values":{        "logtime":{          "map_date":{            "target_date_pattern":"yyyy-MM-dd HH:mm:ss,SSS"          }         }       }     }   ] }",
          "service_name" : "MapReduce"
        }
      }
    },
    {
      "oozie-env" : {
        "properties_attributes" : { },
        "properties" : {
          "oozie_user_nproc_limit" : "16000",
          "oozie_pid_dir" : "/var/run/oozie",
          "oozie_user_nofile_limit" : "32000",
          "oozie_log_dir" : "/var/log/oozie",
          "content" : "#!/bin/bash if [ -d "/usr/lib/bigtop-tomcat" ]; then  export OOZIE_CONFIG=${OOZIE_CONFIG:-{{conf_dir}}}  export CATALINA_BASE=${CATALINA_BASE:-{{oozie_server_dir}}}  export CATALINA_TMPDIR=${CATALINA_TMPDIR:-/var/tmp/oozie}  export OOZIE_CATALINA_HOME=/usr/lib/bigtop-tomcatfi#Set JAVA HOMEexport JAVA_HOME={{java_home}}export JRE_HOME=${JAVA_HOME}# Set Oozie specific environment variables here.# Settings for the Embedded Tomcat that runs Oozie# Java System properties for Oozie should be specified in this variable#{% if java_version < 8 %}export CATALINA_OPTS="$CATALINA_OPTS -Xmx{{oozie_heapsize}} -XX:MaxPermSize={{oozie_permsize}}"{% else %}export CATALINA_OPTS="$CATALINA_OPTS -Xmx{{oozie_heapsize}}"{% endif %}# Oozie configuration file to load from Oozie configuration directory## export OOZIE_CONFIG_FILE=oozie-site.xml# Oozie logs directory#export OOZIE_LOG={{oozie_log_dir}}# Oozie pid directory#export CATALINA_PID={{pid_file}}#Location of the data for oozieexport OOZIE_DATA={{oozie_data_dir}}# Oozie Log4J configuration file to load from Oozie configuration directory## export OOZIE_LOG4J_FILE=oozie-log4j.properties# Reload interval of the Log4J configuration file, in seconds## export OOZIE_LOG4J_RELOAD=10# The port Oozie server runs#export OOZIE_HTTP_PORT={{oozie_server_port}}# The admin port Oozie server runs#export OOZIE_ADMIN_PORT={{oozie_server_admin_port}}# The host name Oozie server runs on## export OOZIE_HTTP_HOSTNAME=`hostname -f`# The base URL for callback URLs to Oozie## export OOZIE_BASE_URL="http://${OOZIE_HTTP_HOSTNAME}:${OOZIE_HTTP_PORT}/oozie"export JAVA_LIBRARY_PATH={{hadoop_lib_home}}/native/Linux-{{architecture}}-64# At least 1 minute of retry time to account for server downtime during# upgrade/downgradeexport OOZIE_CLIENT_OPTS="${OOZIE_CLIENT_OPTS} -Doozie.connection.retry.count=5 "{% if sqla_db_used or lib_dir_available %}export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:{{jdbc_libs_dir}}"export JAVA_LIBRARY_PATH="$JAVA_LIBRARY_PATH:{{jdbc_libs_dir}}"{% endif %}",
          "oozie_tmp_dir" : "/var/tmp/oozie",
          "oozie_admin_port" : "11001",
          "oozie_heapsize" : "2048m",
          "service_check_job_name" : "no-op",
          "oozie_data_dir" : "/hadoop/oozie/data",
          "oozie_user" : "oozie",
          "oozie_admin_users" : "{oozie_user}, oozie-admin",
          "oozie_database" : "New Derby Database",
          "oozie_permsize" : "256m"
        }
      }
    },
    {
      "ranger-hive-policymgr-ssl" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "zookeeper-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "ZOOKEEPER_SERVER:zookeeper",
          "content" : "{  "input":[    {     "type":"zookeeper",     "rowtype":"service",     "path":"{{default('/configurations/zookeeper-env/zk_log_dir', '/var/log/zookeeper')}}/zookeeper*.log"    }  ],  "filter":[   {      "filter":"grok",      "conditions":{        "fields":{"type":["zookeeper"]}      },     "log4j_format":"%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n",     "multiline_pattern":"^(%{TIMESTAMP_ISO8601:logtime})",     "message_pattern":"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}-%{SPACE}%{LOGLEVEL:level}%{SPACE}\\\\[%{DATA:thread_name}\\\\@%{INT:line_number}\\\\]%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}",     "post_map_values": {       "logtime": {         "map_date":{           "target_date_pattern":"yyyy-MM-dd HH:mm:ss,SSS"         }       }     }    }   ]}",
          "service_name" : "Zookeeper"
        }
      }
    },
    {
      "hcat-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "      # Licensed to the Apache Software Foundation (ASF) under one      # or more contributor license agreements. See the NOTICE file      # distributed with this work for additional information      # regarding copyright ownership. The ASF licenses this file      # to you under the Apache License, Version 2.0 (the      # "License"); you may not use this file except in compliance      # with the License. You may obtain a copy of the License at      #      # http://www.apache.org/licenses/LICENSE-2.0      #      # Unless required by applicable law or agreed to in writing, software      # distributed under the License is distributed on an "AS IS" BASIS,      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.      # See the License for the specific language governing permissions and      # limitations under the License.      JAVA_HOME={{java64_home}}      HCAT_PID_DIR={{hcat_pid_dir}}/      HCAT_LOG_DIR={{hcat_log_dir}}/      HCAT_CONF_DIR={{hcat_conf_dir}}      HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}      #DBROOT is the path where the connector jars are downloaded      DBROOT={{hcat_dbroot}}      USER={{hcat_user}}      METASTORE_PORT={{hive_metastore_port}}"
        }
      }
    },
    {
      "ssl-server" : {
        "properties_attributes" : { },
        "properties" : {
          "ssl.server.truststore.location" : "/etc/security/serverKeys/all.jks",
          "ssl.server.truststore.reload.interval" : "10000",
          "ssl.server.truststore.type" : "jks",
          "ssl.server.keystore.location" : "/etc/security/serverKeys/keystore.jks",
          "ssl.server.keystore.type" : "jks"
        }
      }
    },
    {
      "pig-properties" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "# Licensed to the Apache Software Foundation (ASF) under one# or more contributor license agreements.  See the NOTICE file# distributed with this work for additional information# regarding copyright ownership.  The ASF licenses this file# to you under the Apache License, Version 2.0 (the# "License"); you may not use this file except in compliance# with the License.  You may obtain a copy of the License at##   http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing,# software distributed under the License is distributed on an# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY# KIND, either express or implied.  See the License for the# specific language governing permissions and limitations# under the License.# Pig default configuration file. All values can be overwritten by pig.properties and command line arguments.# see bin/pig -help# brief logging (no timestamps)brief=false# debug level, INFO is defaultdebug=INFO# verbose print all log messages to screen (default to print only INFO and above to screen)verbose=false# exectype local|mapreduce|tez, mapreduce is defaultexectype=tez# Enable insertion of information about script into hadoop job conf pig.script.info.enabled=true# Do not spill temp files smaller than this size (bytes)pig.spill.size.threshold=5000000# EXPERIMENT: Activate garbage collection when spilling a file bigger than this size (bytes)# This should help reduce the number of files being spilled.pig.spill.gc.activation.size=40000000# the following two parameters are to help estimate the reducer numberpig.exec.reducers.bytes.per.reducer=1000000000pig.exec.reducers.max=999# Temporary location to store the intermediate data.pig.temp.dir=/tmp/# Threshold for merging FRJoin fragment filespig.files.concatenation.threshold=100pig.optimistic.files.concatenation=false;pig.disable.counter=falsehcat.bin=/usr/bin/hcat"
        }
      }
    },
    {
      "hst-agent-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "security.anonymization.max.heap" : "2048",
          "agent.tmp_dir" : "/var/lib/smartsense/hst-agent/data/tmp",
          "upload.retry_count" : "100",
          "server.connection_retry_interval" : "10",
          "agent.version" : "1.4.0.2.5.0.3-7",
          "upload.retry_interval" : "15",
          "agent.loglevel" : "INFO",
          "bundle.logs_to_capture" : "(.*).log$,(.*).out$",
          "server.connection_retry_count" : "100"
        }
      }
    },
    {
      "ranger-hive-plugin-properties" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "ranger-yarn-security" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "oozie-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "OOZIE_SERVER:oozie_app",
          "content" : "{  "input":[    {      "type":"oozie_app",      "rowtype":"service",      "path":"{{default('/configurations/oozie-env/oozie_log_dir', '/var/log/oozie')}}/oozie.log"    }   ],  "filter":[    {      "filter":"grok",      "conditions":{        "fields":{          "type":[            "oozie_app"          ]         }       },      "log4j_format":"%d{ISO8601} %5p %c{1}:%L - SERVER[${oozie.instance.id}] %m%n",      "multiline_pattern":"^(%{TIMESTAMP_ISO8601:logtime})",      "message_pattern":"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}%{DATA:logger_name}:%{INT:line_number}%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}",      "post_map_values":{        "logtime":{          "map_date":{            "target_date_pattern":"yyyy-MM-dd HH:mm:ss,SSS"          }         }       }     }   ] }",
          "service_name" : "Oozie"
        }
      }
    },
    {
      "hadoop-policy" : {
        "properties_attributes" : { },
        "properties" : {
          "security.inter.datanode.protocol.acl" : "*",
          "security.refresh.usertogroups.mappings.protocol.acl" : "hadoop",
          "security.admin.operations.protocol.acl" : "hadoop",
          "security.client.datanode.protocol.acl" : "*",
          "security.datanode.protocol.acl" : "*",
          "security.inter.tracker.protocol.acl" : "*",
          "security.job.client.protocol.acl" : "*",
          "security.client.protocol.acl" : "*",
          "security.job.task.protocol.acl" : "*",
          "security.refresh.policy.protocol.acl" : "hadoop",
          "security.namenode.protocol.acl" : "*"
        }
      }
    },
    {
      "ranger-yarn-audit" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "tez-interactive-site" : {
        "properties_attributes" : { },
        "properties" : {
          "tez.runtime.pipelined.sorter.lazy-allocate.memory" : "true",
          "tez.runtime.report.partition.stats" : "true",
          "tez.runtime.shuffle.fetch.buffer.percent" : "0.6",
          "tez.am.client.heartbeat.timeout.secs" : "90",
          "tez.task.timeout-ms" : "90000",
          "tez.am.node-blacklisting.enabled" : "false",
          "tez.history.logging.taskattempt-filters" : "SERVICE_BUSY,EXTERNAL_PREEMPTION",
          "tez.am.client.heartbeat.poll.interval.millis" : "6000",
          "tez.container.max.java.heap.fraction" : "-1",
          "tez.runtime.unordered.output.buffer.size-mb" : "100",
          "tez.runtime.shuffle.memory.limit.percent" : "0.25",
          "tez.runtime.pipelined-shuffle.enabled" : "false",
          "tez.runtime.shuffle.fetch.verify-disk-checksum" : "false",
          "tez.runtime.shuffle.parallel.copies" : "8",
          "tez.session.am.dag.submit.timeout.secs" : "1209600",
          "tez.dag.recovery.enabled" : "false",
          "tez.task.heartbeat.timeout.check-ms" : "15000",
          "tez.am.resource.memory.mb" : "1536",
          "tez.lib.uris" : "/hdp/apps/${hdp.version}/tez_hive2/tez.tar.gz",
          "tez.am.task.listener.thread-count" : "1",
          "tez.history.logging.timeline.num-dags-per-group" : "5",
          "tez.grouping.node.local.only" : "true",
          "tez.runtime.io.sort.mb" : "512"
        }
      }
    },
    {
      "anonymization-rules" : {
        "properties_attributes" : { },
        "properties" : {
          "anonymization-rules-content" : "{"rules":[    {      "name": "IP",      "rule_id": "Pattern",      "patterns": ["(?<![a-z0-9\\\\.])[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}(?![a-z0-9\\\\.\\\\-])(?!\\\\.[0-9])"],      "exclude_files": ["hdp-select*.*", "*version.txt"]    },    {      "name": "DOMAIN_NAME",      "rule_id": "Domain"    },    {      "name": "SSN",      "rule_id": "Pattern",      "patterns": ["(?<![0-9x])([0-9x]{3}-[0-9x]{2}-[0-9]{4})(?![0-9x])"],      "include_files": ["*.log*", "*.out*"],      "exclude_files" : ["hst.log*", "hst.out*"],      "shared": false    },    {      "name": "CCN",      "rule_id": "Pattern",      "patterns": ["(?<![0-9x])(18|21|3[04678]|4[0-9x]|5[1-5]|60|65)[0-9x]{2}[- ]([0-9x]{4}[- ]){2}[0-9]{0,4}(?![0-9x])"],      "extract": "(?<![0-9x])([0-9x -]+)(?![0-9x])",      "include_files": ["*.log*", "*.out*"],      "exclude_files" : ["hst.log.*", "hst.out"],      "shared": false    },    {      "name": "EMAIL",      "rule_id": "Pattern",      "patterns": ["(?<![a-z0-9._%+-])[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,6}(?![a-z0-9._%+-])$?"],      "shared": false    },    {      "name": "CORE_SITE_S3A",      "rule_id": "Property",      "properties": ["fs.s3a.session.token","fs.s3a.proxy.host","fs.s3a.proxy.username","fs.s3a.proxy.password"],      "include_files": ["core-site.xml"],      "action" : "REPLACE",      "replace_value": "Hidden"    },    {      "name": "PASSWORDS",      "rule_id": "Property",      "properties": [".*password.*", ".*awsAccessKeyId.*",  ".*awsSecretAccessKey.*", ".*awsAccessKeyId.*", "fs.azure.account.key.*", "ranger.service.https.attrib.keystore.pass"],      "include_files": ["*.xml", "*.properties", "*.yaml", "*.ini"],      "exclude_files" : ["capacity-scheduler.xml"],      "action" : "REPLACE",      "replace_value": "Hidden"    },    {      "name": "KNOX LDAP Password",      "rule_id": "Property",      "properties": ["main.ldapRealm.contextFactory.systemPassword"],      "include_files": ["topologies/*.xml"],      "action" : "REPLACE",      "parentNode": "param",      "replace_value": "Hidden"    },    {      "name": "KEYSTORE_PASSWORD_LOGGED",      "rule_id": "Pattern",      "patterns": ["oozie.https.keystore.pass=([^\\\\s]*)", "OOZIE_HTTPS_KEYSTORE_PASS=([^\\\\s]*)", "ganglia_password=([^\\\\s]*)", "javax.jdo.option.ConnectionPassword=([^\\\\s]*)"],      "extract": "=([^\\\\s]*)",      "include_files": ["java_process.txt", "pid.txt", "ambari-agent.log", "java_process.txt", "oozie-env.cmd", "hive_set_v.txt", "beeline_set_v.txt"],      "shared": false    },    {      "name": "KEYSTORE_CONFIG",      "rule_id": "Property",      "properties": ["https.attrib.keystorePass", "HTTPS_KEYSTORE_PASS"],      "include_files": ["ranger_webserver.properties"],      "action" : "REPLACE"    },    {      "name": "KMS_KEYSTORE_PASSWORD",      "rule_id": "Pattern",      "patterns": ["KMS_SSL_KEYSTORE_PASS=([^\\\\s]*)"],      "extract": "=([^\\\\s]*)",      "include_files": ["kms-env.sh"],      "shared": false    }]}"
        }
      }
    },
    {
      "core-site" : {
        "properties_attributes" : {
          "final" : {
            "fs.defaultFS" : "true"
          }
        },
        "properties" : {
          "fs.defaultFS" : "hdfs://%HOSTGROUP::host_group_4%:8020",
          "ipc.server.tcpnodelay" : "true",
          "mapreduce.jobtracker.webinterface.trusted" : "false",
          "hadoop.security.auth_to_local" : "DEFAULT",
          "hadoop.proxyuser.root.groups" : "*",
          "ipc.client.idlethreshold" : "8000",
          "hadoop.proxyuser.hdfs.groups" : "*",
          "fs.trash.interval" : "360",
          "hadoop.http.authentication.simple.anonymous.allowed" : "true",
          "hadoop.security.authorization" : "false",
          "ipc.client.connection.maxidletime" : "30000",
          "hadoop.proxyuser.hcat.groups" : "*",
          "hadoop.proxyuser.hive.hosts" : "%HOSTGROUP::host_group_3%",
          "hadoop.proxyuser.root.hosts" : "ambari-1.localdomain",
          "ha.failover-controller.active-standby-elector.zk.op.retries" : "120",
          "hadoop.security.authentication" : "simple",
          "hadoop.proxyuser.hdfs.hosts" : "*",
          "ipc.client.connect.max.retries" : "50",
          "io.file.buffer.size" : "131072",
          "hadoop.proxyuser.oozie.hosts" : "%HOSTGROUP::host_group_3%",
          "hadoop.proxyuser.hcat.hosts" : "%HOSTGROUP::host_group_3%",
          "hadoop.proxyuser.oozie.groups" : "*",
          "net.topology.script.file.name" : "/etc/hadoop/conf/topology_script.py",
          "io.compression.codecs" : "org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.SnappyCodec",
          "hadoop.proxyuser.hive.groups" : "*",
          "io.serializations" : "org.apache.hadoop.io.serializer.WritableSerialization"
        }
      }
    },
    {
      "oozie-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "oozie_log_maxhistory" : "720",
          "content" : "## Licensed to the Apache Software Foundation (ASF) under one# or more contributor license agreements.  See the NOTICE file# distributed with this work for additional information# regarding copyright ownership.  The ASF licenses this file# to you under the Apache License, Version 2.0 (the# "License"); you may not use this file except in compliance# with the License.  You may obtain a copy of the License at##    http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing, software# distributed under the License is distributed on an "AS IS" BASIS,# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.# See the License for the specific language governing permissions and# limitations under the License. See accompanying LICENSE file.## If the Java System property 'oozie.log.dir' is not defined at Oozie start up time# XLogService sets its value to '${oozie.home}/logs'# The appender that Oozie uses must be named 'oozie' (i.e. log4j.appender.oozie)# Using the RollingFileAppender with the OozieRollingPolicy will roll the log file every hour and retain up to MaxHistory number of# log files. If FileNamePattern ends with ".gz" it will create gzip files.log4j.appender.oozie=org.apache.log4j.rolling.RollingFileAppenderlog4j.appender.oozie.RollingPolicy=org.apache.oozie.util.OozieRollingPolicylog4j.appender.oozie.File=${oozie.log.dir}/oozie.loglog4j.appender.oozie.Append=truelog4j.appender.oozie.layout=org.apache.log4j.PatternLayoutlog4j.appender.oozie.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - SERVER[${oozie.instance.id}] %m%n# The FileNamePattern must end with "-%d{yyyy-MM-dd-HH}.gz" or "-%d{yyyy-MM-dd-HH}" and also start with the# value of log4j.appender.oozie.Filelog4j.appender.oozie.RollingPolicy.FileNamePattern=${log4j.appender.oozie.File}-%d{yyyy-MM-dd-HH}# The MaxHistory controls how many log files will be retained (720 hours / 24 hours per day = 30 days); -1 to disablelog4j.appender.oozie.RollingPolicy.MaxHistory={{oozie_log_maxhistory}}log4j.appender.oozieError=org.apache.log4j.rolling.RollingFileAppenderlog4j.appender.oozieError.RollingPolicy=org.apache.oozie.util.OozieRollingPolicylog4j.appender.oozieError.File=${oozie.log.dir}/oozie-error.loglog4j.appender.oozieError.Append=truelog4j.appender.oozieError.layout=org.apache.log4j.PatternLayoutlog4j.appender.oozieError.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - SERVER[${oozie.instance.id}] %m%n# The FileNamePattern must end with "-%d{yyyy-MM-dd-HH}.gz" or "-%d{yyyy-MM-dd-HH}" and also start with the# value of log4j.appender.oozieError.Filelog4j.appender.oozieError.RollingPolicy.FileNamePattern=${log4j.appender.oozieError.File}-%d{yyyy-MM-dd-HH}# The MaxHistory controls how many log files will be retained (720 hours / 24 hours per day = 30 days); -1 to disablelog4j.appender.oozieError.RollingPolicy.MaxHistory=720log4j.appender.oozieError.filter.1 = org.apache.log4j.varia.LevelMatchFilterlog4j.appender.oozieError.filter.1.levelToMatch = WARNlog4j.appender.oozieError.filter.2 = org.apache.log4j.varia.LevelMatchFilterlog4j.appender.oozieError.filter.2.levelToMatch = ERRORlog4j.appender.oozieError.filter.3 = org.apache.log4j.varia.LevelMatchFilterlog4j.appender.oozieError.filter.3.levelToMatch = FATALlog4j.appender.oozieError.filter.4 = org.apache.log4j.varia.DenyAllFilter# Uncomment the below two lines to use the DailyRollingFileAppender instead# The DatePattern must end with either "dd" or "HH"#log4j.appender.oozie=org.apache.log4j.DailyRollingFileAppender#log4j.appender.oozie.DatePattern='.'yyyy-MM-dd-HHlog4j.appender.oozieops=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.oozieops.DatePattern='.'yyyy-MM-ddlog4j.appender.oozieops.File=${oozie.log.dir}/oozie-ops.loglog4j.appender.oozieops.Append=truelog4j.appender.oozieops.layout=org.apache.log4j.PatternLayoutlog4j.appender.oozieops.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%nlog4j.appender.oozieinstrumentation=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.oozieinstrumentation.DatePattern='.'yyyy-MM-ddlog4j.appender.oozieinstrumentation.File=${oozie.log.dir}/oozie-instrumentation.loglog4j.appender.oozieinstrumentation.Append=truelog4j.appender.oozieinstrumentation.layout=org.apache.log4j.PatternLayoutlog4j.appender.oozieinstrumentation.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%nlog4j.appender.oozieaudit=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.oozieaudit.DatePattern='.'yyyy-MM-ddlog4j.appender.oozieaudit.File=${oozie.log.dir}/oozie-audit.loglog4j.appender.oozieaudit.Append=truelog4j.appender.oozieaudit.layout=org.apache.log4j.PatternLayoutlog4j.appender.oozieaudit.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%nlog4j.appender.openjpa=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.openjpa.DatePattern='.'yyyy-MM-ddlog4j.appender.openjpa.File=${oozie.log.dir}/oozie-jpa.loglog4j.appender.openjpa.Append=truelog4j.appender.openjpa.layout=org.apache.log4j.PatternLayoutlog4j.appender.openjpa.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%nlog4j.logger.openjpa=INFO, openjpalog4j.logger.oozieops=INFO, oozieopslog4j.logger.oozieinstrumentation=ALL, oozieinstrumentationlog4j.logger.oozieaudit=ALL, oozieauditlog4j.logger.org.apache.oozie=INFO, oozie, oozieErrorlog4j.logger.org.apache.hadoop=WARN, oozielog4j.logger.org.mortbay=WARN, oozielog4j.logger.org.hsqldb=WARN, oozielog4j.logger.org.apache.hadoop.security.authentication.server=WARN, oozie"
        }
      }
    },
    {
      "hive-exec-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "# Licensed to the Apache Software Foundation (ASF) under one# or more contributor license agreements.  See the NOTICE file# distributed with this work for additional information# regarding copyright ownership.  The ASF licenses this file# to you under the Apache License, Version 2.0 (the# "License"); you may not use this file except in compliance# with the License.  You may obtain a copy of the License at##     http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing, software# distributed under the License is distributed on an "AS IS" BASIS,# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.# See the License for the specific language governing permissions and# limitations under the License.# Define some default values that can be overridden by system propertieshive.log.threshold=ALLhive.root.logger={{hive_log_level}},FAhive.log.dir=${java.io.tmpdir}/${user.name}hive.query.id=hadoophive.log.file=${hive.query.id}.log# Define the root logger to the system property "hadoop.root.logger".log4j.rootLogger=${hive.root.logger}, EventCounter# Logging Thresholdlog4j.threshhold=${hive.log.threshold}## File Appender#log4j.appender.FA=org.apache.log4j.FileAppenderlog4j.appender.FA.File=${hive.log.dir}/${hive.log.file}log4j.appender.FA.layout=org.apache.log4j.PatternLayout# Pattern format: Date LogLevel LoggerName LogMessage#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n# Debugging Pattern formatlog4j.appender.FA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n## console# Add "console" to rootlogger above if you want to use this#log4j.appender.console=org.apache.log4j.ConsoleAppenderlog4j.appender.console.target=System.errlog4j.appender.console.layout=org.apache.log4j.PatternLayoutlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n#custom logging levels#log4j.logger.xxx=DEBUG## Event Counter Appender# Sends counts of logging messages at different severity levels to Hadoop Metrics.#log4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounterlog4j.category.DataNucleus=ERROR,FAlog4j.category.Datastore=ERROR,FAlog4j.category.Datastore.Schema=ERROR,FAlog4j.category.JPOX.Datastore=ERROR,FAlog4j.category.JPOX.Plugin=ERROR,FAlog4j.category.JPOX.MetaData=ERROR,FAlog4j.category.JPOX.Query=ERROR,FAlog4j.category.JPOX.General=ERROR,FAlog4j.category.JPOX.Enhancer=ERROR,FA# Silence useless ZK logslog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,FAlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,FA"
        }
      }
    },
    {
      "webhcat-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "# The file containing the running pidPID_FILE={{webhcat_pid_file}}TEMPLETON_LOG_DIR={{templeton_log_dir}}/WEBHCAT_LOG_DIR={{templeton_log_dir}}/# The console error logERROR_LOG={{templeton_log_dir}}/webhcat-console-error.log# The console logCONSOLE_LOG={{templeton_log_dir}}/webhcat-console.log#TEMPLETON_JAR=templeton_jar_name#HADOOP_PREFIX=hadoop_prefix#HCAT_PREFIX=hive_prefix# Set HADOOP_HOME to point to a specific hadoop install directoryexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}"
        }
      }
    },
    {
      "hdfs-site" : {
        "properties_attributes" : {
          "final" : {
            "dfs.webhdfs.enabled" : "true",
            "dfs.namenode.http-address" : "true",
            "dfs.support.append" : "true",
            "dfs.namenode.name.dir" : "true",
            "dfs.datanode.failed.volumes.tolerated" : "true",
            "dfs.datanode.data.dir" : "true"
          }
        },
        "properties" : {
          "dfs.replication" : "3",
          "dfs.namenode.audit.log.async" : "true",
          "dfs.namenode.checkpoint.dir" : "/hadoop/hdfs/namesecondary",
          "dfs.namenode.avoid.read.stale.datanode" : "true",
          "dfs.journalnode.http-address" : "0.0.0.0:8480",
          "nfs.file.dump.dir" : "/tmp/.hdfs-nfs",
          "dfs.namenode.rpc-address" : "%HOSTGROUP::host_group_4%:8020",
          "dfs.namenode.https-address" : "%HOSTGROUP::host_group_4%:50470",
          "dfs.encrypt.data.transfer.cipher.suites" : "AES/CTR/NoPadding",
          "dfs.client.read.shortcircuit.streams.cache.size" : "4096",
          "dfs.hosts.exclude" : "/etc/hadoop/conf/dfs.exclude",
          "dfs.namenode.accesstime.precision" : "0",
          "dfs.namenode.fslock.fair" : "false",
          "dfs.permissions.enabled" : "true",
          "dfs.datanode.balance.bandwidthPerSec" : "6250000",
          "dfs.namenode.stale.datanode.interval" : "30000",
          "dfs.content-summary.limit" : "5000",
          "dfs.http.policy" : "HTTP_ONLY",
          "dfs.journalnode.https-address" : "0.0.0.0:8481",
          "dfs.datanode.du.reserved" : "2682519552",
          "dfs.domain.socket.path" : "/var/lib/hadoop-hdfs/dn_socket",
          "dfs.datanode.ipc.address" : "0.0.0.0:8010",
          "dfs.cluster.administrators" : " hdfs",
          "dfs.datanode.max.transfer.threads" : "4096",
          "dfs.namenode.handler.count" : "50",
          "dfs.https.port" : "50470",
          "dfs.replication.max" : "50",
          "dfs.client.read.shortcircuit" : "true",
          "dfs.webhdfs.enabled" : "true",
          "dfs.namenode.http-address" : "%HOSTGROUP::host_group_4%:50070",
          "dfs.namenode.name.dir" : "/hadoop/hdfs/namenode",
          "dfs.namenode.avoid.write.stale.datanode" : "true",
          "dfs.datanode.https.address" : "0.0.0.0:50475",
          "dfs.datanode.failed.volumes.tolerated" : "0",
          "dfs.client.retry.policy.enabled" : "false",
          "dfs.namenode.startup.delay.block.deletion.sec" : "3600",
          "dfs.block.access.token.enable" : "true",
          "dfs.datanode.data.dir" : "/hadoop/hdfs/data",
          "dfs.permissions.superusergroup" : "hdfs",
          "dfs.blocksize" : "134217728",
          "dfs.namenode.checkpoint.edits.dir" : "${dfs.namenode.checkpoint.dir}",
          "nfs.exports.allowed.hosts" : "* rw",
          "dfs.datanode.address" : "0.0.0.0:50010",
          "dfs.blockreport.initialDelay" : "120",
          "dfs.datanode.data.dir.perm" : "750",
          "dfs.namenode.write.stale.datanode.ratio" : "1.0f",
          "dfs.namenode.name.dir.restore" : "true",
          "dfs.heartbeat.interval" : "3",
          "dfs.namenode.secondary.http-address" : "s%HOSTGROUP::host_group_4%:50090",
          "dfs.namenode.checkpoint.txns" : "1000000",
          "dfs.journalnode.edits.dir" : "/hadoop/hdfs/journalnode",
          "dfs.support.append" : "true",
          "fs.permissions.umask-mode" : "022",
          "dfs.namenode.safemode.threshold-pct" : "1",
          "dfs.namenode.checkpoint.period" : "21600",
          "dfs.datanode.http.address" : "0.0.0.0:50075"
        }
      }
    },
    {
      "yarn-site" : {
        "properties_attributes" : { },
        "properties" : {
          "yarn.resourcemanager.zk-address" : "%HOSTGROUP::host_group_4%:2181,s%HOSTGROUP::host_group_4%:2181,%HOSTGROUP::host_group_3%:2181",
          "yarn.nodemanager.container-monitor.interval-ms" : "3000",
          "yarn.timeline-service.entity-group-fs-store.active-dir" : "/ats/active/",
          "yarn.log.server.web-service.url" : "http://%HOSTGROUP::host_group_1%:8188/ws/v1/applicationhistory",
          "yarn.nodemanager.linux-container-executor.group" : "hadoop",
          "yarn.client.failover-proxy-provider" : "org.apache.hadoop.yarn.client.RequestHedgingRMFailoverProxyProvider",
          "yarn.application.classpath" : "/etc/hadoop/conf,/usr/hdp/current/hadoop-client/*,/usr/hdp/current/hadoop-client/lib/*,/usr/hdp/current/hadoop-hdfs-client/*,/usr/hdp/current/hadoop-hdfs-client/lib/*,/usr/hdp/current/hadoop-yarn-client/*,/usr/hdp/current/hadoop-yarn-client/lib/*",
          "yarn.admin.acl" : "activity_analyzer,yarn",
          "yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds" : "3600",
          "yarn.nodemanager.remote-app-log-dir-suffix" : "logs",
          "yarn.nodemanager.address" : "0.0.0.0:45454",
          "yarn.resourcemanager.webapp.address" : "%HOSTGROUP::host_group_4%:8088",
          "yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms" : "300000",
          "yarn.scheduler.maximum-allocation-vcores" : "1",
          "yarn.timeline-service.address" : "%HOSTGROUP::host_group_1%:10200",
          "yarn.timeline-service.enabled" : "true",
          "yarn.nodemanager.aux-services" : "mapreduce_shuffle,spark_shuffle,spark2_shuffle",
          "yarn.nodemanager.resource.cpu-vcores" : "1",
          "yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled" : "false",
          "yarn.nodemanager.aux-services.spark_shuffle.class" : "org.apache.spark.network.yarn.YarnShuffleService",
          "yarn.nodemanager.log-aggregation.debug-enabled" : "false",
          "yarn.resourcemanager.zk-acl" : "world:anyone:rwcda",
          "yarn.client.nodemanager-connect.max-wait-ms" : "60000",
          "yarn.http.policy" : "HTTP_ONLY",
          "yarn.timeline-service.http-authentication.simple.anonymous.allowed" : "true",
          "yarn.resourcemanager.zk-state-store.parent-path" : "/rmstore",
          "yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size" : "10000",
          "yarn.resourcemanager.admin.address" : "%HOSTGROUP::host_group_4%:8141",
          "yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage" : "false",
          "yarn.resourcemanager.resource-tracker.address" : "%HOSTGROUP::host_group_4%:8025",
          "yarn.nodemanager.delete.debug-delay-sec" : "0",
          "yarn.resourcemanager.fs.state-store.retry-policy-spec" : "2000, 500",
          "yarn.timeline-service.http-authentication.type" : "simple",
          "yarn.timeline-service.ttl-enable" : "true",
          "yarn.timeline-service.entity-group-fs-store.retain-seconds" : "604800",
          "yarn.log-aggregation.retain-seconds" : "2592000",
          "yarn.nodemanager.resource.memory-mb" : "2046",
          "yarn.nodemanager.disk-health-checker.min-healthy-disks" : "0.25",
          "yarn.node-labels.enabled" : "false",
          "yarn.resourcemanager.connect.max-wait.ms" : "-1",
          "yarn.resourcemanager.zk-num-retries" : "1000",
          "yarn.scheduler.minimum-allocation-vcores" : "1",
          "yarn.nodemanager.aux-services.spark2_shuffle.classpath" : "{{stack_root}}/${hdp.version}/spark2/aux/*",
          "yarn.resourcemanager.scheduler.class" : "org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler",
          "yarn.resourcemanager.system-metrics-publisher.enabled" : "true",
          "yarn.timeline-service.client.max-retries" : "30",
          "yarn.timeline-service.client.retry-interval-ms" : "1000",
          "yarn.timeline-service.http-authentication.proxyuser.root.hosts" : "ambari-1.localdomain",
          "yarn.timeline-service.store-class" : "org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore",
          "yarn.timeline-service.bind-host" : "0.0.0.0",
          "yarn.nodemanager.container-metrics.unregister-delay-ms" : "60000",
          "yarn.timeline-service.generic-application-history.store-class" : "org.apache.hadoop.yarn.server.applicationhistoryservice.NullApplicationHistoryStore",
          "yarn.resourcemanager.fs.state-store.uri" : " ",
          "yarn.resourcemanager.recovery.enabled" : "true",
          "yarn.timeline-service.entity-group-fs-store.group-id-plugin-classpath" : "",
          "yarn.resourcemanager.scheduler.address" : "%HOSTGROUP::host_group_4%:8030",
          "yarn.timeline-service.client.fd-flush-interval-secs" : "5",
          "yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size" : "10000",
          "yarn.timeline-service.ttl-ms" : "2678400000",
          "yarn.nodemanager.health-checker.script.timeout-ms" : "60000",
          "yarn.nodemanager.aux-services.spark2_shuffle.class" : "org.apache.spark.network.yarn.YarnShuffleService",
          "yarn.log.server.url" : "http://%HOSTGROUP::host_group_1%:19888/jobhistory/logs",
          "yarn.timeline-service.entity-group-fs-store.group-id-plugin-classes" : "org.apache.tez.dag.history.logging.ats.TimelineCachePluginImpl",
          "yarn.resourcemanager.address" : "%HOSTGROUP::host_group_4%:8050",
          "yarn.timeline-service.recovery.enabled" : "true",
          "yarn.nodemanager.recovery.dir" : "{{yarn_log_dir_prefix}}/nodemanager/recovery-state",
          "yarn.resourcemanager.scheduler.monitor.enable" : "false",
          "hadoop.registry.rm.enabled" : "true",
          "yarn.resourcemanager.bind-host" : "0.0.0.0",
          "yarn.nodemanager.log-aggregation.num-log-files-per-app" : "336",
          "yarn.nodemanager.admin-env" : "MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX",
          "yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size" : "10",
          "yarn.acl.enable" : "false",
          "yarn.resourcemanager.ha.enabled" : "false",
          "yarn.timeline-service.entity-group-fs-store.app-cache-size" : "10",
          "yarn.client.nodemanager-connect.retry-interval-ms" : "10000",
          "yarn.timeline-service.version" : "1.5",
          "yarn.timeline-service.leveldb-timeline-store.read-cache-size" : "104857600",
          "yarn.nodemanager.local-dirs" : "/hadoop/yarn/local",
          "yarn.timeline-service.leveldb-timeline-store.path" : "/hadoop/yarn/timeline",
          "yarn.nodemanager.recovery.enabled" : "true",
          "yarn.resourcemanager.zk-timeout-ms" : "10000",
          "yarn.resourcemanager.am.max-attempts" : "2",
          "yarn.resourcemanager.state-store.max-completed-applications" : "${yarn.resourcemanager.max-completed-applications}",
          "yarn.node-labels.fs-store.root-dir" : "/system/yarn/node-labels",
          "yarn.node-labels.fs-store.retry-policy-spec" : "2000, 500",
          "yarn.nodemanager.aux-services.mapreduce_shuffle.class" : "org.apache.hadoop.mapred.ShuffleHandler",
          "yarn.log-aggregation-enable" : "true",
          "yarn.resourcemanager.work-preserving-recovery.enabled" : "true",
          "yarn.nodemanager.aux-services.spark_shuffle.classpath" : "{{stack_root}}/${hdp.version}/spark/aux/*",
          "yarn.resourcemanager.store.class" : "org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore",
          "yarn.timeline-service.http-authentication.proxyuser.root.groups" : "*",
          "yarn.timeline-service.leveldb-state-store.path" : "/hadoop/yarn/timeline",
          "yarn.nodemanager.log.retain-seconds" : "604800",
          "yarn.timeline-service.entity-group-fs-store.done-dir" : "/ats/done/",
          "yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage" : "90",
          "hadoop.registry.zk.quorum" : "%HOSTGROUP::host_group_4%:2181,s%HOSTGROUP::host_group_4%:2181,%HOSTGROUP::host_group_3%:2181",
          "yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds" : "3600",
          "yarn.nodemanager.container-executor.class" : "org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor",
          "yarn.resourcemanager.nodes.exclude-path" : "/etc/hadoop/conf/yarn.exclude",
          "yarn.timeline-service.state-store-class" : "org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore",
          "yarn.nodemanager.bind-host" : "0.0.0.0",
          "yarn.resourcemanager.hostname" : "%HOSTGROUP::host_group_4%",
          "yarn.resourcemanager.connect.retry-interval.ms" : "15000",
          "yarn.timeline-service.webapp.address" : "%HOSTGROUP::host_group_1%:8188",
          "yarn.scheduler.minimum-allocation-mb" : "682",
          "yarn.timeline-service.entity-group-fs-store.summary-store" : "org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore",
          "yarn.nodemanager.health-checker.interval-ms" : "135000",
          "yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb" : "1000",
          "yarn.resourcemanager.zk-retry-interval-ms" : "1000",
          "yarn.scheduler.capacity.ordering-policy.priority-utilization.underutilized-preemption.enabled" : "false",
          "yarn.nodemanager.remote-app-log-dir" : "/app-logs",
          "yarn.scheduler.maximum-allocation-mb" : "2046",
          "yarn.nodemanager.vmem-check-enabled" : "false",
          "yarn.timeline-service.entity-group-fs-store.scan-interval-seconds" : "15",
          "yarn.resourcemanager.webapp.https.address" : "%HOSTGROUP::host_group_4%:8090",
          "yarn.timeline-service.webapp.https.address" : "%HOSTGROUP::host_group_1%:8190",
          "yarn.nodemanager.resource.percentage-physical-cpu-limit" : "80",
          "yarn.nodemanager.vmem-pmem-ratio" : "2.1",
          "yarn.nodemanager.log-aggregation.compression-type" : "gz",
          "yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms" : "10000",
          "yarn.nodemanager.log-dirs" : "/hadoop/yarn/log"
        }
      }
    },
    {
      "hiveserver2-site" : {
        "properties_attributes" : { },
        "properties" : {
          "hive.service.metrics.hadoop2.component" : "hiveserver2",
          "hive.security.authorization.enabled" : "false",
          "hive.metastore.metrics.enabled" : "true",
          "hive.service.metrics.reporter" : "HADOOP2"
        }
      }
    },
    {
      "pig-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "### Licensed to the Apache Software Foundation (ASF) under one# or more contributor license agreements.  See the NOTICE file# distributed with this work for additional information# regarding copyright ownership.  The ASF licenses this file# to you under the Apache License, Version 2.0 (the# "License"); you may not use this file except in compliance# with the License.  You may obtain a copy of the License at##   http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing,# software distributed under the License is distributed on an# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY# KIND, either express or implied.  See the License for the# specific language governing permissions and limitations# under the License.#### ***** Set root logger level to DEBUG and its only appender to A.log4j.logger.org.apache.pig=info, A# ***** A is set to be a ConsoleAppender.log4j.appender.A=org.apache.log4j.ConsoleAppender# ***** A uses PatternLayout.log4j.appender.A.layout=org.apache.log4j.PatternLayoutlog4j.appender.A.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n"
        }
      }
    },
    {
      "hive-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "hive_log_maxbackupindex" : "30",
          "hive_log_maxfilesize" : "256",
          "content" : "# Licensed to the Apache Software Foundation (ASF) under one# or more contributor license agreements.  See the NOTICE file# distributed with this work for additional information# regarding copyright ownership.  The ASF licenses this file# to you under the Apache License, Version 2.0 (the# "License"); you may not use this file except in compliance# with the License.  You may obtain a copy of the License at##     http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing, software# distributed under the License is distributed on an "AS IS" BASIS,# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.# See the License for the specific language governing permissions and# limitations under the License.# Define some default values that can be overridden by system propertieshive.log.threshold=ALLhive.root.logger={{hive_log_level}},DRFAhive.log.dir=${java.io.tmpdir}/${user.name}hive.log.file=hive.log# Define the root logger to the system property "hadoop.root.logger".log4j.rootLogger=${hive.root.logger}, EventCounter# Logging Thresholdlog4j.threshold=${hive.log.threshold}## Daily Rolling File Appender## Use the PidDailyerRollingFileAppend class instead if you want to use separate log files# for different CLI session.## log4j.appender.DRFA=org.apache.hadoop.hive.ql.log.PidDailyRollingFileAppenderlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.DRFA.File=${hive.log.dir}/${hive.log.file}# Rollver at midnightlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd# 30-day backup#log4j.appender.DRFA.MaxBackupIndex= {{hive_log_maxbackupindex}}log4j.appender.DRFA.MaxFileSize = {{hive_log_maxfilesize}}MBlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout# Pattern format: Date LogLevel LoggerName LogMessage#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n# Debugging Pattern formatlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%n## console# Add "console" to rootlogger above if you want to use this#log4j.appender.console=org.apache.log4j.ConsoleAppenderlog4j.appender.console.target=System.errlog4j.appender.console.layout=org.apache.log4j.PatternLayoutlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%nlog4j.appender.console.encoding=UTF-8#custom logging levels#log4j.logger.xxx=DEBUG## Event Counter Appender# Sends counts of logging messages at different severity levels to Hadoop Metrics.#log4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounterlog4j.category.DataNucleus=ERROR,DRFAlog4j.category.Datastore=ERROR,DRFAlog4j.category.Datastore.Schema=ERROR,DRFAlog4j.category.JPOX.Datastore=ERROR,DRFAlog4j.category.JPOX.Plugin=ERROR,DRFAlog4j.category.JPOX.MetaData=ERROR,DRFAlog4j.category.JPOX.Query=ERROR,DRFAlog4j.category.JPOX.General=ERROR,DRFAlog4j.category.JPOX.Enhancer=ERROR,DRFA# Silence useless ZK logslog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,DRFAlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,DRFA"
        }
      }
    },
    {
      "slider-client" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "activity-env" : {
        "properties_attributes" : { },
        "properties" : {
          "analyzer_jvm_heap" : "8192",
          "analyzer_jvm_opts" : "-Xms128m",
          "activity-env-content" : "#!/bin/bash# Copyright (c) 2011-2017, Hortonworks Inc.  All rights reserved.# Except as expressly permitted in a written agreement between you# or your company and Hortonworks, Inc, any use, reproduction,# modification, redistribution, sharing, lending or other exploitation# of all or any part of the contents of this file is strictly prohibited.# Enable verbose shell execution#set -xv## Set HOME for various componentsexport HADOOP_HOME=/usr/hdp/current/hadoop-clientexport HDFS_HOME=/usr/hdp/current/hadoop-hdfs-clientexport MAPREDUCE_HOME=/usr/hdp/current/hadoop-mapreduce-clientexport YARN_HOME=/usr/hdp/current/hadoop-yarn-clientexport HIVE_HOME=/usr/hdp/current/hive-clientexport HCAT_HOME=/usr/hdp/current/hive-webhcatexport TEZ_HOME=/usr/hdp/current/tez-clientexport HBASE_HOME=/usr/hdp/current/hbase-clientexport PHOENIX_HOME=/usr/hdp/current/phoenix-clientexport ACTIVITY_ANALYZER_HOME=/usr/hdp/share/hst/activity-analyzerexport AMS_COLLECTOR_HOME=/usr/lib/ambari-metrics-collectorexport JAVA_HOME={{java_home}}## Set conf dir for various componentsexport HADOOP_CONF_DIR=/etc/hadoop/conf/export HIVE_CONF_DIR=/etc/hive/conf/export HBASE_CONF_DIR=/etc/hbase/conf/export TEZ_CONF_DIR=/etc/tez/conf/export ACTIVITY_ANALYZER_CONF_DIR=/etc/smartsense-activity/conf/export AMS_HBASE_CONF=/etc/ams-hbase/confexport DEBUG_ENABLED=false## Set JVM related configsexport ANALYZER_JAVA_OPTS="{{analyzer_jvm_opts}} -Xmx{{analyzer_jvm_heap}}m""
        }
      }
    },
    {
      "activity-zeppelin-env" : {
        "properties_attributes" : { },
        "properties" : {
          "activity-zeppelin-env-content" : "#!/bin/bash# Copyright (c) 2011-2017, Hortonworks Inc.  All rights reserved.# Except as expressly permitted in a written agreement between you# or your company and Hortonworks, Inc, any use, reproduction,# modification, redistribution, sharing, lending or other exploitation# of all or any part of the contents of this file is strictly prohibited.export JAVA_HOME={{java_home}}# Additional jvm options. for example, export ZEPPELIN_JAVA_OPTS="-Dspark.executor.memory=8g -Dspark.cores.max=16"export ZEPPELIN_JAVA_OPTS="-Dhdp.version={{hdp_version}} -Dlog.file.name=activity-explorer.log -DSmartSenseActivityExplorer"      \t\t# export ZEPPELIN_INTP_MEM       \t\t# zeppelin interpreter process jvm mem options. Default = ZEPPELIN_MEM# export ZEPPELIN_INTP_JAVA_OPTS \t\t# zeppelin interpreter process jvm options. Default = ZEPPELIN_JAVA_OPTSexport ZEPPELIN_MEM=" -Xms256m -Xmx1024m -XX:MaxPermSize=256m"export ZEPPELIN_LOG_DIR={{activity_log_dir}}export ZEPPELIN_PID_DIR=/var/run/smartsense-activity-explorerexport ZEPPELIN_WAR_TEMPDIR=/var/lib/smartsense/activity-explorer/webappexport ZEPPELIN_NOTEBOOK_DIR=/var/lib/smartsense/activity-explorer/notebookexport ZEPPELIN_CLASSPATH="/etc/ams-hbase/conf:${ZEPPELIN_CLASSPATH}"export CLASSPATH=${ZEPPELIN_CLASSPATH}"
        }
      }
    },
    {
      "yarn-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "RESOURCEMANAGER:yarn_resourcemanager,yarn_historyserver,yarn_jobsummary;NODEMANAGER:yarn_nodemanager;APP_TIMELINE_SERVER:yarn_timelineserver",
          "content" : "{  "input":[    {      "type":"yarn_nodemanager",      "rowtype":"service",      "path":"{{default('/configurations/yarn-env/yarn_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/yarn-env/yarn_user', 'yarn')}}/yarn-{{default('configurations/yarn-env/yarn_user', 'yarn')}}-nodemanager-*.log"    },    {      "type":"yarn_resourcemanager",      "rowtype":"service",      "path":"{{default('/configurations/yarn-env/yarn_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/yarn-env/yarn_user', 'yarn')}}/yarn-{{default('configurations/yarn-env/yarn_user', 'yarn')}}-resourcemanager-*.log"    },    {      "type":"yarn_timelineserver",      "rowtype":"service",      "path":"{{default('/configurations/yarn-env/yarn_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/yarn-env/yarn_user', 'yarn')}}/yarn-{{default('configurations/yarn-env/yarn_user', 'yarn')}}-timelineserver-*.log"    },    {      "type":"yarn_historyserver",      "rowtype":"service",      "path":"{{default('/configurations/yarn-env/yarn_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/yarn-env/yarn_user', 'yarn')}}/yarn-{{default('configurations/yarn-env/yarn_user', 'yarn')}}-historyserver-*.log"    },    {      "type":"yarn_jobsummary",      "rowtype":"service",      "path":"{{default('/configurations/yarn-env/yarn_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/yarn-env/yarn_user', 'yarn')}}/hadoop-mapreduce.jobsummary.log"    }   ],  "filter":[    {      "filter":"grok",      "conditions":{        "fields":{          "type":[            "yarn_historyserver",            "yarn_jobsummary",            "yarn_nodemanager",            "yarn_resourcemanager",            "yarn_timelineserver"          ]         }       },      "log4j_format":"%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n",      "multiline_pattern":"^(%{TIMESTAMP_ISO8601:logtime})",      "message_pattern":"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}%{JAVACLASS:logger_name}%{SPACE}\\\\(%{JAVAFILE:file}:%{JAVAMETHOD:method}\\\\(%{INT:line_number}\\\\)\\\\)%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}",      "post_map_values":{        "logtime":{          "map_date":{            "target_date_pattern":"yyyy-MM-dd HH:mm:ss,SSS"          }         }       }     }   ]}",
          "service_name" : "YARN"
        }
      }
    },
    {
      "tez-env" : {
        "properties_attributes" : { },
        "properties" : {
          "heap_dump_location" : "/tmp",
          "content" : "# Tez specific configurationexport TEZ_CONF_DIR={{config_dir}}# Set HADOOP_HOME to point to a specific hadoop install directoryexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}# The java implementation to use.export JAVA_HOME={{java64_home}}",
          "enable_heap_dump" : "false",
          "tez_user" : "tez"
        }
      }
    },
    {
      "activity-zeppelin-shiro" : {
        "properties_attributes" : { },
        "properties" : {
          "main.securityManager.sessionManager" : "$sessionManager",
          "securityManager.sessionManager.globalSessionTimeout" : "86400000",
          "main.sessionManager" : "org.apache.shiro.web.session.mgt.DefaultWebSessionManager"
        }
      }
    },
    {
      "ams-hbase-security-site" : {
        "properties_attributes" : { },
        "properties" : {
          "hbase.coprocessor.master.classes" : "",
          "hbase.myclient.keytab" : "",
          "hadoop.security.authentication" : "",
          "ams.zookeeper.keytab" : "",
          "hbase.zookeeper.property.jaasLoginRenew" : "",
          "hbase.regionserver.keytab.file" : "",
          "hbase.zookeeper.property.authProvider.1" : "",
          "hbase.zookeeper.property.kerberos.removeHostFromPrincipal" : "",
          "hbase.coprocessor.region.classes" : "",
          "hbase.security.authentication" : "",
          "hbase.master.keytab.file" : "",
          "hbase.security.authorization" : "",
          "hbase.zookeeper.property.kerberos.removeRealmFromPrincipal" : ""
        }
      }
    },
    {
      "ranger-yarn-plugin-properties" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "yarn-env" : {
        "properties_attributes" : { },
        "properties" : {
          "yarn_cgroups_enabled" : "false",
          "yarn_user_nproc_limit" : "65536",
          "yarn_log_dir_prefix" : "/var/log/hadoop-yarn",
          "apptimelineserver_heapsize" : "1024",
          "yarn_user_nofile_limit" : "32768",
          "content" : "      export HADOOP_YARN_HOME={{hadoop_yarn_home}}      export YARN_LOG_DIR={{yarn_log_dir_prefix}}/$USER      export YARN_PID_DIR={{yarn_pid_dir_prefix}}/$USER      export HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}      export JAVA_HOME={{java64_home}}      export JAVA_LIBRARY_PATH="${JAVA_LIBRARY_PATH}:{{hadoop_java_io_tmpdir}}"      # We need to add the EWMA appender for the yarn daemons only;      # however, YARN_ROOT_LOGGER is shared by the yarn client and the      # daemons. This is restrict the EWMA appender to daemons only.      INVOKER="${0##*/}"      if [ "$INVOKER" == "yarn-daemon.sh" ]; then        export YARN_ROOT_LOGGER=${YARN_ROOT_LOGGER:-INFO,EWMA,RFA}      fi      # User for YARN daemons      export HADOOP_YARN_USER=${HADOOP_YARN_USER:-yarn}      # resolve links - $0 may be a softlink      export YARN_CONF_DIR="${YARN_CONF_DIR:-$HADOOP_YARN_HOME/conf}"      # some Java parameters      # export JAVA_HOME=/home/y/libexec/jdk1.6.0/      if [ "$JAVA_HOME" != "" ]; then      #echo "run java in $JAVA_HOME"      JAVA_HOME=$JAVA_HOME      fi      if [ "$JAVA_HOME" = "" ]; then      echo "Error: JAVA_HOME is not set."      exit 1      fi      JAVA=$JAVA_HOME/bin/java      JAVA_HEAP_MAX=-Xmx1000m      # For setting YARN specific HEAP sizes please use this      # Parameter and set appropriately      YARN_HEAPSIZE={{yarn_heapsize}}      # check envvars which might override default args      if [ "$YARN_HEAPSIZE" != "" ]; then      JAVA_HEAP_MAX="-Xmx""$YARN_HEAPSIZE""m"      fi      # Resource Manager specific parameters      # Specify the max Heapsize for the ResourceManager using a numerical value      # in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set      # the value to 1000.      # This value will be overridden by an Xmx setting specified in either YARN_OPTS      # and/or YARN_RESOURCEMANAGER_OPTS.      # If not specified, the default value will be picked from either YARN_HEAPMAX      # or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.      export YARN_RESOURCEMANAGER_HEAPSIZE={{resourcemanager_heapsize}}      # Specify the JVM options to be used when starting the ResourceManager.      # These options will be appended to the options specified as YARN_OPTS      # and therefore may override any similar flags set in YARN_OPTS      #export YARN_RESOURCEMANAGER_OPTS=      # Node Manager specific parameters      # Specify the max Heapsize for the NodeManager using a numerical value      # in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set      # the value to 1000.      # This value will be overridden by an Xmx setting specified in either YARN_OPTS      # and/or YARN_NODEMANAGER_OPTS.      # If not specified, the default value will be picked from either YARN_HEAPMAX      # or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.      export YARN_NODEMANAGER_HEAPSIZE={{nodemanager_heapsize}}      # Specify the max Heapsize for the timeline server using a numerical value      # in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set      # the value to 1024.      # This value will be overridden by an Xmx setting specified in either YARN_OPTS      # and/or YARN_TIMELINESERVER_OPTS.      # If not specified, the default value will be picked from either YARN_HEAPMAX      # or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.      export YARN_TIMELINESERVER_HEAPSIZE={{apptimelineserver_heapsize}}      # Specify the JVM options to be used when starting the NodeManager.      # These options will be appended to the options specified as YARN_OPTS      # and therefore may override any similar flags set in YARN_OPTS      #export YARN_NODEMANAGER_OPTS=      # so that filenames w/ spaces are handled correctly in loops below      IFS=      # default log directory and file      if [ "$YARN_LOG_DIR" = "" ]; then      YARN_LOG_DIR="$HADOOP_YARN_HOME/logs"      fi      if [ "$YARN_LOGFILE" = "" ]; then      YARN_LOGFILE='yarn.log'      fi      # default policy file for service-level authorization      if [ "$YARN_POLICYFILE" = "" ]; then      YARN_POLICYFILE="hadoop-policy.xml"      fi      # restore ordinary behaviour      unset IFS      YARN_OPTS="$YARN_OPTS -Dhadoop.log.dir=$YARN_LOG_DIR"      YARN_OPTS="$YARN_OPTS -Dyarn.log.dir=$YARN_LOG_DIR"      YARN_OPTS="$YARN_OPTS -Dhadoop.log.file=$YARN_LOGFILE"      YARN_OPTS="$YARN_OPTS -Dyarn.log.file=$YARN_LOGFILE"      YARN_OPTS="$YARN_OPTS -Dyarn.home.dir=$YARN_COMMON_HOME"      YARN_OPTS="$YARN_OPTS -Dyarn.id.str=$YARN_IDENT_STRING"      YARN_OPTS="$YARN_OPTS -Dhadoop.root.logger=${YARN_ROOT_LOGGER:-INFO,console}"      YARN_OPTS="$YARN_OPTS -Dyarn.root.logger=${YARN_ROOT_LOGGER:-INFO,console}"      export YARN_NODEMANAGER_OPTS="$YARN_NODEMANAGER_OPTS -Dnm.audit.logger=INFO,NMAUDIT"      export YARN_RESOURCEMANAGER_OPTS="$YARN_RESOURCEMANAGER_OPTS -Drm.audit.logger=INFO,RMAUDIT"      if [ "x$JAVA_LIBRARY_PATH" != "x" ]; then      YARN_OPTS="$YARN_OPTS -Djava.library.path=$JAVA_LIBRARY_PATH"      fi      YARN_OPTS="$YARN_OPTS -Dyarn.policy.file=$YARN_POLICYFILE"      YARN_OPTS="$YARN_OPTS -Djava.io.tmpdir={{hadoop_java_io_tmpdir}}"      {% if rm_security_opts is defined %}      YARN_OPTS="{{rm_security_opts}} $YARN_OPTS"      {% endif %}",
          "is_supported_yarn_ranger" : "true",
          "service_check.queue.name" : "default",
          "resourcemanager_heapsize" : "1024",
          "yarn_pid_dir_prefix" : "/var/run/hadoop-yarn",
          "yarn_user" : "yarn",
          "min_user_id" : "1000",
          "yarn_heapsize" : "1024",
          "nodemanager_heapsize" : "1024"
        }
      }
    },
    {
      "hst-server-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "customer.account.name" : "unspecified",
          "server.ssl_enabled" : "false",
          "agent.request.processing.timeout" : "7200",
          "client.threadpool.size.max" : "40",
          "server.max.heap" : "2048",
          "server.storage.dir" : "/var/lib/smartsense/hst-server/data",
          "customer.enable.flex.subscription" : "false",
          "gateway.registration.port" : "9450",
          "gateway.port" : "9451",
          "customer.flex.subscription.id" : "",
          "customer.notification.email" : "unspecified",
          "agent.request.syncup.interval" : "180",
          "gateway.host" : "embedded",
          "server.port" : "9000",
          "server.tmp.dir" : "/var/lib/smartsense/hst-server/tmp",
          "server.url" : "http://edgenode-1.localdomain:9000",
          "customer.smartsense.id" : "unspecified"
        }
      }
    },
    {
      "ranger-hdfs-audit" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "ranger-hdfs-plugin-properties" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "oozie-site" : {
        "properties_attributes" : { },
        "properties" : {
          "oozie.base.url" : "http://%HOSTGROUP::host_group_3%:11000/oozie",
          "oozie.service.URIHandlerService.uri.handlers" : "org.apache.oozie.dependency.FSURIHandler,org.apache.oozie.dependency.HCatURIHandler",
          "oozie.service.HadoopAccessorService.kerberos.enabled" : "false",
          "oozie.action.retry.interval" : "30",
          "oozie.authentication.simple.anonymous.allowed" : "true",
          "oozie.service.HadoopAccessorService.hadoop.configurations" : "*={{hadoop_conf_dir}}",
          "oozie.service.JPAService.jdbc.username" : "oozie",
          "oozie.credentials.credentialclasses" : "hcat=org.apache.oozie.action.hadoop.HCatCredentials,hive2=org.apache.oozie.action.hadoop.Hive2Credentials",
          "oozie.services.ext" : "      org.apache.oozie.service.JMSAccessorService,org.apache.oozie.service.PartitionDependencyManagerService,org.apache.oozie.service.HCatAccessorService",
          "oozie.service.JPAService.jdbc.driver" : "org.apache.derby.jdbc.EmbeddedDriver",
          "oozie.authentication.type" : "simple",
          "oozie.service.AuthorizationService.security.enabled" : "true",
          "oozie.service.SparkConfigurationService.spark.configurations" : "*=spark-conf",
          "oozie.db.schema.name" : "oozie"
        }
      }
    },
    {
      "beeline-log4j2" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "# Licensed to the Apache Software Foundation (ASF) under one# or more contributor license agreements.  See the NOTICE file# distributed with this work for additional information# regarding copyright ownership.  The ASF licenses this file# to you under the Apache License, Version 2.0 (the# "License"); you may not use this file except in compliance# with the License.  You may obtain a copy of the License at##     http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing, software# distributed under the License is distributed on an "AS IS" BASIS,# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.# See the License for the specific language governing permissions and# limitations under the License.status = INFOname = BeelineLog4j2packages = org.apache.hadoop.hive.ql.log# list of propertiesproperty.hive.log.level = {{hive_log_level}}property.hive.root.logger = console# list of all appendersappenders = console# console appenderappender.console.type = Consoleappender.console.name = consoleappender.console.target = SYSTEM_ERRappender.console.layout.type = PatternLayoutappender.console.layout.pattern = %d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n# list of all loggersloggers = HiveConnection# HiveConnection logs useful info for dynamic service discoverylogger.HiveConnection.name = org.apache.hive.jdbc.HiveConnectionlogger.HiveConnection.level = INFO# root loggerrootLogger.level = ${sys:hive.log.level}rootLogger.appenderRefs = rootrootLogger.appenderRef.root.ref = ${sys:hive.root.logger}"
        }
      }
    },
    {
      "ams-env" : {
        "properties_attributes" : { },
        "properties" : {
          "timeline.metrics.skip.disk.metrics.patterns" : "true",
          "ambari_metrics_user" : "ams",
          "metrics_monitor_log_dir" : "/var/log/ambari-metrics-monitor",
          "metrics_collector_heapsize" : "512",
          "failover_strategy_blacklisted_interval" : "300",
          "metrics_collector_pid_dir" : "/var/run/ambari-metrics-collector",
          "metrics_collector_log_dir" : "/var/log/ambari-metrics-collector",
          "metrics_monitor_pid_dir" : "/var/run/ambari-metrics-monitor",
          "content" : "# Set environment variables here.# AMS instance nameexport AMS_INSTANCE_NAME={{hostname}}# The java implementation to use. Java 1.6 required.export JAVA_HOME={{java64_home}}# Collector Log directory for log4jexport AMS_COLLECTOR_LOG_DIR={{ams_collector_log_dir}}# Monitor Log directory for outfileexport AMS_MONITOR_LOG_DIR={{ams_monitor_log_dir}}# Collector pid directoryexport AMS_COLLECTOR_PID_DIR={{ams_collector_pid_dir}}# Monitor pid directoryexport AMS_MONITOR_PID_DIR={{ams_monitor_pid_dir}}# AMS HBase pid directoryexport AMS_HBASE_PID_DIR={{hbase_pid_dir}}# AMS Collector heapsizeexport AMS_COLLECTOR_HEAPSIZE={{metrics_collector_heapsize}}# HBase Tables Initialization check enabledexport AMS_HBASE_INIT_CHECK_ENABLED={{ams_hbase_init_check_enabled}}# AMS Collector optionsexport AMS_COLLECTOR_OPTS="-Djava.library.path=/usr/lib/ams-hbase/lib/hadoop-native"{% if security_enabled %}export AMS_COLLECTOR_OPTS="$AMS_COLLECTOR_OPTS -Djava.security.auth.login.config={{ams_collector_jaas_config_file}}"{% endif %}# AMS Collector GC optionsexport AMS_COLLECTOR_GC_OPTS="-XX:+UseConcMarkSweepGC -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{ams_collector_log_dir}}/collector-gc.log-`date +'%Y%m%d%H%M'`"export AMS_COLLECTOR_OPTS="$AMS_COLLECTOR_OPTS $AMS_COLLECTOR_GC_OPTS"# Metrics collector host will be blacklisted for specified number of seconds if metric monitor failed to connect to it.export AMS_FAILOVER_STRATEGY_BLACKLISTED_INTERVAL={{failover_strategy_blacklisted_interval}}"
        }
      }
    },
    {
      "llap-cli-log4j2" : {
        "properties_attributes" : { },
        "properties" : {
          "llap_cli_log_maxfilesize" : "256",
          "content" : "# Licensed to the Apache Software Foundation (ASF) under one# or more contributor license agreements.  See the NOTICE file# distributed with this work for additional information# regarding copyright ownership.  The ASF licenses this file# to you under the Apache License, Version 2.0 (the# "License"); you may not use this file except in compliance# with the License.  You may obtain a copy of the License at##     http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing, software# distributed under the License is distributed on an "AS IS" BASIS,# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.# See the License for the specific language governing permissions and# limitations under the License.status = WARNname = LlapCliLog4j2packages = org.apache.hadoop.hive.ql.log# list of propertiesproperty.hive.log.level = WARNproperty.hive.root.logger = consoleproperty.hive.log.dir = ${sys:java.io.tmpdir}/${sys:user.name}property.hive.log.file = llap-cli.logproperty.hive.llapstatus.consolelogger.level = INFO# list of all appendersappenders = console, DRFA, llapstatusconsole# console appenderappender.console.type = Consoleappender.console.name = consoleappender.console.target = SYSTEM_ERRappender.console.layout.type = PatternLayoutappender.console.layout.pattern = %p %c{2}: %m%n# llapstatusconsole appenderappender.llapstatusconsole.type = Consoleappender.llapstatusconsole.name = llapstatusconsoleappender.llapstatusconsole.target = SYSTEM_OUTappender.llapstatusconsole.layout.type = PatternLayoutappender.llapstatusconsole.layout.pattern = %m%n# daily rolling file appenderappender.DRFA.type = RollingRandomAccessFileappender.DRFA.name = DRFAappender.DRFA.fileName = ${sys:hive.log.dir}/${sys:hive.log.file}# Use %pid in the filePattern to append process-id@host-name to the filename if you want separate log files for different CLI sessionappender.DRFA.filePattern = ${sys:hive.log.dir}/${sys:hive.log.file}.%d{yyyy-MM-dd}_%iappender.DRFA.layout.type = PatternLayoutappender.DRFA.layout.pattern = %d{ISO8601} %5p [%t] %c{2}: %m%nappender.DRFA.policies.type = Policiesappender.DRFA.policies.time.type = TimeBasedTriggeringPolicyappender.DRFA.policies.time.interval = 1appender.DRFA.policies.time.modulate = trueappender.DRFA.strategy.type = DefaultRolloverStrategyappender.DRFA.strategy.max = {{llap_cli_log_maxbackupindex}}appender.DRFA.policies.fsize.type = SizeBasedTriggeringPolicyappender.DRFA.policies.fsize.size = {{llap_cli_log_maxfilesize}}MB# list of all loggersloggers = ZooKeeper, DataNucleus, Datastore, JPOX, HadoopConf, LlapStatusServiceDriverConsolelogger.ZooKeeper.name = org.apache.zookeeperlogger.ZooKeeper.level = WARNlogger.DataNucleus.name = DataNucleuslogger.DataNucleus.level = ERRORlogger.Datastore.name = Datastorelogger.Datastore.level = ERRORlogger.JPOX.name = JPOXlogger.JPOX.level = ERRORlogger.HadoopConf.name = org.apache.hadoop.conf.Configurationlogger.HadoopConf.level = ERRORlogger.LlapStatusServiceDriverConsole.name = LlapStatusServiceDriverConsolelogger.LlapStatusServiceDriverConsole.additivity = falselogger.LlapStatusServiceDriverConsole.level = ${sys:hive.llapstatus.consolelogger.level}# root loggerrootLogger.level = ${sys:hive.log.level}rootLogger.appenderRefs = root, DRFArootLogger.appenderRef.root.ref = ${sys:hive.root.logger}rootLogger.appenderRef.DRFA.ref = DRFAlogger.LlapStatusServiceDriverConsole.appenderRefs = llapstatusconsole, DRFAlogger.LlapStatusServiceDriverConsole.appenderRef.llapstatusconsole.ref = llapstatusconsolelogger.LlapStatusServiceDriverConsole.appenderRef.DRFA.ref = DRFA",
          "llap_cli_log_maxbackupindex" : "30"
        }
      }
    },
    {
      "llap-daemon-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "hive_llap_log_maxfilesize" : "256",
          "content" : "# Licensed to the Apache Software Foundation (ASF) under one# or more contributor license agreements.  See the NOTICE file# distributed with this work for additional information# regarding copyright ownership.  The ASF licenses this file# to you under the Apache License, Version 2.0 (the# "License"); you may not use this file except in compliance# with the License.  You may obtain a copy of the License at##     http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing, software# distributed under the License is distributed on an "AS IS" BASIS,# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.# See the License for the specific language governing permissions and# limitations under the License.# This is the log4j2 properties file used by llap-daemons. There's several loggers defined, which# can be selected while configuring LLAP.# Based on the one selected - UI links etc need to be manipulated in the system.# Note: Some names and logic is common to this file and llap LogHelpers. Make sure to change that# as well, if changing this file.status = INFOname = LlapDaemonLog4j2packages = org.apache.hadoop.hive.ql.log# list of propertiesproperty.llap.daemon.log.level = {{hive_log_level}}property.llap.daemon.root.logger = consoleproperty.llap.daemon.log.dir = .property.llap.daemon.log.file = llapdaemon.logproperty.llap.daemon.historylog.file = llapdaemon_history.logproperty.llap.daemon.log.maxfilesize = {{hive_llap_log_maxfilesize}}MBproperty.llap.daemon.log.maxbackupindex = {{hive_llap_log_maxbackupindex}}# list of all appendersappenders = console, RFA, HISTORYAPPENDER, query-routing# console appenderappender.console.type = Consoleappender.console.name = consoleappender.console.target = SYSTEM_ERRappender.console.layout.type = PatternLayoutappender.console.layout.pattern = %d{ISO8601} %5p [%t (%X{fragmentId})] %c{2}: %m%n# rolling file appenderappender.RFA.type = RollingRandomAccessFileappender.RFA.name = RFAappender.RFA.fileName = ${sys:llap.daemon.log.dir}/${sys:llap.daemon.log.file}appender.RFA.filePattern = ${sys:llap.daemon.log.dir}/${sys:llap.daemon.log.file}_%d{yyyy-MM-dd-HH}_%i.doneappender.RFA.layout.type = PatternLayoutappender.RFA.layout.pattern = %d{ISO8601} %-5p [%t (%X{fragmentId})] %c: %m%nappender.RFA.policies.type = Policiesappender.RFA.policies.time.type = TimeBasedTriggeringPolicyappender.RFA.policies.time.interval = 1appender.RFA.policies.time.modulate = trueappender.RFA.policies.size.type = SizeBasedTriggeringPolicyappender.RFA.policies.size.size = ${sys:llap.daemon.log.maxfilesize}appender.RFA.strategy.type = DefaultRolloverStrategyappender.RFA.strategy.max = ${sys:llap.daemon.log.maxbackupindex}# history file appenderappender.HISTORYAPPENDER.type = RollingRandomAccessFileappender.HISTORYAPPENDER.name = HISTORYAPPENDERappender.HISTORYAPPENDER.fileName = ${sys:llap.daemon.log.dir}/${sys:llap.daemon.historylog.file}appender.HISTORYAPPENDER.filePattern = ${sys:llap.daemon.log.dir}/${sys:llap.daemon.historylog.file}_%d{yyyy-MM-dd}_%i.doneappender.HISTORYAPPENDER.layout.type = PatternLayoutappender.HISTORYAPPENDER.layout.pattern = %m%nappender.HISTORYAPPENDER.policies.type = Policiesappender.HISTORYAPPENDER.policies.size.type = SizeBasedTriggeringPolicyappender.HISTORYAPPENDER.policies.size.size = ${sys:llap.daemon.log.maxfilesize}appender.HISTORYAPPENDER.policies.time.type = TimeBasedTriggeringPolicyappender.HISTORYAPPENDER.policies.time.interval = 1appender.HISTORYAPPENDER.policies.time.modulate = trueappender.HISTORYAPPENDER.strategy.type = DefaultRolloverStrategyappender.HISTORYAPPENDER.strategy.max = ${sys:llap.daemon.log.maxbackupindex}# queryId based routing file appenderappender.query-routing.type = Routingappender.query-routing.name = query-routingappender.query-routing.routes.type = Routesappender.query-routing.routes.pattern = $${ctx:queryId}#Purge polciy for query-based Routing Appenderappender.query-routing.purgePolicy.type = LlapRoutingAppenderPurgePolicy# Note: Do not change this name without changing the corresponding entry in LlapConstantsappender.query-routing.purgePolicy.name = llapLogPurgerQueryRouting# default routeappender.query-routing.routes.route-default.type = Routeappender.query-routing.routes.route-default.key = $${ctx:queryId}appender.query-routing.routes.route-default.ref = RFA# queryId based routeappender.query-routing.routes.route-mdc.type = Routeappender.query-routing.routes.route-mdc.file-mdc.type = LlapWrappedAppenderappender.query-routing.routes.route-mdc.file-mdc.name = IrrelevantName-query-routingappender.query-routing.routes.route-mdc.file-mdc.app.type = RandomAccessFileappender.query-routing.routes.route-mdc.file-mdc.app.name = file-mdcappender.query-routing.routes.route-mdc.file-mdc.app.fileName = ${sys:llap.daemon.log.dir}/${ctx:queryId}-${ctx:dagId}.logappender.query-routing.routes.route-mdc.file-mdc.app.layout.type = PatternLayoutappender.query-routing.routes.route-mdc.file-mdc.app.layout.pattern = %d{ISO8601} %5p [%t (%X{fragmentId})] %c{2}: %m%n# list of all loggersloggers = PerfLogger, EncodedReader, NIOServerCnxn, ClientCnxnSocketNIO, DataNucleus, Datastore, JPOX, HistoryLogger, LlapIoImpl, LlapIoOrc, LlapIoCache, LlapIoLocking, TezSM, TezSS, TezHClogger.TezSM.name = org.apache.tez.runtime.library.common.shuffle.impl.ShuffleManager.fetchlogger.TezSM.level = WARNlogger.TezSS.name = org.apache.tez.runtime.library.common.shuffle.orderedgrouped.ShuffleScheduler.fetchlogger.TezSS.level = WARNlogger.TezHC.name = org.apache.tez.http.HttpConnection.urllogger.TezHC.level = WARNlogger.PerfLogger.name = org.apache.hadoop.hive.ql.log.PerfLoggerlogger.PerfLogger.level = DEBUGlogger.EncodedReader.name = org.apache.hadoop.hive.ql.io.orc.encoded.EncodedReaderImpllogger.EncodedReader.level = INFOlogger.LlapIoImpl.name = LlapIoImpllogger.LlapIoImpl.level = INFOlogger.LlapIoOrc.name = LlapIoOrclogger.LlapIoOrc.level = WARNlogger.LlapIoCache.name = LlapIoCachelogger.LlapIoCache.level = WARNlogger.LlapIoLocking.name = LlapIoLockinglogger.LlapIoLocking.level = WARNlogger.NIOServerCnxn.name = org.apache.zookeeper.server.NIOServerCnxnlogger.NIOServerCnxn.level = WARNlogger.ClientCnxnSocketNIO.name = org.apache.zookeeper.ClientCnxnSocketNIOlogger.ClientCnxnSocketNIO.level = WARNlogger.DataNucleus.name = DataNucleuslogger.DataNucleus.level = ERRORlogger.Datastore.name = Datastorelogger.Datastore.level = ERRORlogger.JPOX.name = JPOXlogger.JPOX.level = ERRORlogger.HistoryLogger.name = org.apache.hadoop.hive.llap.daemon.HistoryLoggerlogger.HistoryLogger.level = INFOlogger.HistoryLogger.additivity = falselogger.HistoryLogger.appenderRefs = HistoryAppenderlogger.HistoryLogger.appenderRef.HistoryAppender.ref = HISTORYAPPENDER# root loggerrootLogger.level = ${sys:llap.daemon.log.level}rootLogger.appenderRefs = rootrootLogger.appenderRef.root.ref = ${sys:llap.daemon.root.logger}",
          "hive_llap_log_maxbackupindex" : "240"
        }
      }
    },
    {
      "hst-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "hst_max_backup_index" : "10",
          "hst_max_file_size" : "30",
          "hst-log4j-content" : "# Copyright (c) 2011-2017, Hortonworks Inc.  All rights reserved.# Except as expressly permitted in a written agreement between you# or your company and Hortonworks, Inc, any use, reproduction,# modification, redistribution, sharing, lending or other exploitation# of all or any part of the contents of this file is strictly prohibited.# Define some default values that can be overridden by system properties# Root logger optionlog4j.rootLogger=INFO,filelog4j.appender.file=org.apache.log4j.RollingFileAppenderlog4j.appender.file.File={{hst_log_dir}}/${log.file.name}log4j.appender.file.MaxFileSize={{hst_max_file_size}}MBlog4j.appender.file.MaxBackupIndex={{hst_max_backup_index}}log4j.appender.file.layout=org.apache.log4j.PatternLayoutlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} %5p [%t] %c{1}:%L - %m%n# HST loggerlog4j.logger.com.hortonworks=INFOcom.github.oxo42.stateless4j=WARNlog4j.logger.com.sun.jersey=WARNlog4j.logger.org.eclipse.jetty.server=INFO",
          "hst_log_dir" : "/var/log/hst"
        }
      }
    },
    {
      "capacity-scheduler" : {
        "properties_attributes" : { },
        "properties" : {
          "capacity-scheduler" : "null",
          "yarn.scheduler.capacity.root.accessible-node-labels" : "*",
          "yarn.scheduler.capacity.default.minimum-user-limit-percent" : "100",
          "yarn.scheduler.capacity.maximum-am-resource-percent" : "0.2",
          "yarn.scheduler.capacity.root.acl_administer_queue" : "*",
          "yarn.scheduler.capacity.root.default.acl_administer_jobs" : "*",
          "yarn.scheduler.capacity.resource-calculator" : "org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator",
          "yarn.scheduler.capacity.root.default.capacity" : "100",
          "yarn.scheduler.capacity.root.default.user-limit-factor" : "1",
          "yarn.scheduler.capacity.root.queues" : "default",
          "yarn.scheduler.capacity.root.capacity" : "100",
          "yarn.scheduler.capacity.root.default.acl_submit_applications" : "*",
          "yarn.scheduler.capacity.root.default.maximum-capacity" : "100",
          "yarn.scheduler.capacity.node-locality-delay" : "40",
          "yarn.scheduler.capacity.maximum-applications" : "10000",
          "yarn.scheduler.capacity.root.default.state" : "RUNNING"
        }
      }
    },
    {
      "webhcat-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "webhcat_log_maxfilesize" : "256",
          "webhcat_log_maxbackupindex" : "20",
          "content" : "# Licensed to the Apache Software Foundation (ASF) under one# or more contributor license agreements.  See the NOTICE file# distributed with this work for additional information# regarding copyright ownership.  The ASF licenses this file# to you under the Apache License, Version 2.0 (the# "License"); you may not use this file except in compliance# with the License.  You may obtain a copy of the License at##     http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing,# software distributed under the License is distributed on an# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY# KIND, either express or implied.  See the License for the# specific language governing permissions and limitations# under the License.# Define some default values that can be overridden by system propertieswebhcat.root.logger = {{hive_log_level}}, standardwebhcat.log.dir = .webhcat.log.file = webhcat.loglog4j.rootLogger = ${webhcat.root.logger}# Logging Thresholdlog4j.threshhold = DEBUGlog4j.appender.standard  =  org.apache.log4j.DailyRollingFileAppenderlog4j.appender.standard.File = ${webhcat.log.dir}/${webhcat.log.file}log4j.appender.standard.MaxFileSize = {{webhcat_log_maxfilesize}}MBlog4j.appender.standard.MaxBackupIndex = {{webhcat_log_maxbackupindex}}# Rollver at midnightlog4j.appender.DRFA.DatePattern = .yyyy-MM-ddlog4j.appender.DRFA.layout = org.apache.log4j.PatternLayoutlog4j.appender.standard.layout = org.apache.log4j.PatternLayoutlog4j.appender.standard.layout.conversionPattern = %-5p | %d{DATE} | %c | %m%n# Class logging settingslog4j.logger.com.sun.jersey = DEBUGlog4j.logger.com.sun.jersey.spi.container.servlet.WebComponent = ERRORlog4j.logger.org.apache.hadoop = INFOlog4j.logger.org.apache.hadoop.conf = WARNlog4j.logger.org.apache.zookeeper = WARNlog4j.logger.org.eclipse.jetty = INFO"
        }
      }
    },
    {
      "hadoop-metrics2.properties" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "# Licensed to the Apache Software Foundation (ASF) under one or more# contributor license agreements. See the NOTICE file distributed with# this work for additional information regarding copyright ownership.# The ASF licenses this file to You under the Apache License, Version 2.0# (the "License"); you may not use this file except in compliance with# the License. You may obtain a copy of the License at## http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing, software# distributed under the License is distributed on an "AS IS" BASIS,# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.# See the License for the specific language governing permissions and# limitations under the License.# syntax: [prefix].[source|sink|jmx].[instance].[options]# See package.html for org.apache.hadoop.metrics2 for details{% if has_ganglia_server %}*.period=60*.sink.ganglia.class=org.apache.hadoop.metrics2.sink.ganglia.GangliaSink31*.sink.ganglia.period=10# default for supportsparse is false*.sink.ganglia.supportsparse=true.sink.ganglia.slope=jvm.metrics.gcCount=zero,jvm.metrics.memHeapUsedM=both.sink.ganglia.dmax=jvm.metrics.threadsBlocked=70,jvm.metrics.memHeapUsedM=40# Hook up to the servernamenode.sink.ganglia.servers={{ganglia_server_host}}:8661datanode.sink.ganglia.servers={{ganglia_server_host}}:8659jobtracker.sink.ganglia.servers={{ganglia_server_host}}:8662tasktracker.sink.ganglia.servers={{ganglia_server_host}}:8658maptask.sink.ganglia.servers={{ganglia_server_host}}:8660reducetask.sink.ganglia.servers={{ganglia_server_host}}:8660resourcemanager.sink.ganglia.servers={{ganglia_server_host}}:8664nodemanager.sink.ganglia.servers={{ganglia_server_host}}:8657historyserver.sink.ganglia.servers={{ganglia_server_host}}:8666journalnode.sink.ganglia.servers={{ganglia_server_host}}:8654nimbus.sink.ganglia.servers={{ganglia_server_host}}:8649supervisor.sink.ganglia.servers={{ganglia_server_host}}:8650resourcemanager.sink.ganglia.tagsForPrefix.yarn=Queue{% endif %}{% if has_metric_collector %}*.period={{metrics_collection_period}}*.sink.timeline.plugin.urls=file:///usr/lib/ambari-metrics-hadoop-sink/ambari-metrics-hadoop-sink.jar*.sink.timeline.class=org.apache.hadoop.metrics2.sink.timeline.HadoopTimelineMetricsSink*.sink.timeline.period={{metrics_collection_period}}*.sink.timeline.sendInterval={{metrics_report_interval}}000*.sink.timeline.slave.host.name={{hostname}}*.sink.timeline.zookeeper.quorum={{zookeeper_quorum}}*.sink.timeline.protocol={{metric_collector_protocol}}*.sink.timeline.port={{metric_collector_port}}# HTTPS properties*.sink.timeline.truststore.path = {{metric_truststore_path}}*.sink.timeline.truststore.type = {{metric_truststore_type}}*.sink.timeline.truststore.password = {{metric_truststore_password}}datanode.sink.timeline.collector.hosts={{ams_collector_hosts}}namenode.sink.timeline.collector.hosts={{ams_collector_hosts}}resourcemanager.sink.timeline.collector.hosts={{ams_collector_hosts}}nodemanager.sink.timeline.collector.hosts={{ams_collector_hosts}}jobhistoryserver.sink.timeline.collector.hosts={{ams_collector_hosts}}journalnode.sink.timeline.collector.hosts={{ams_collector_hosts}}maptask.sink.timeline.collector.hosts={{ams_collector_hosts}}reducetask.sink.timeline.collector.hosts={{ams_collector_hosts}}applicationhistoryserver.sink.timeline.collector.hosts={{ams_collector_hosts}}resourcemanager.sink.timeline.tagsForPrefix.yarn=Queue{% if is_nn_client_port_configured %}# Namenode rpc ports customizationnamenode.sink.timeline.metric.rpc.client.port={{nn_rpc_client_port}}{% endif %}{% if is_nn_dn_port_configured %}namenode.sink.timeline.metric.rpc.datanode.port={{nn_rpc_dn_port}}{% endif %}{% if is_nn_healthcheck_port_configured %}namenode.sink.timeline.metric.rpc.healthcheck.port={{nn_rpc_healthcheck_port}}{% endif %}{% endif %}"
        }
      }
    },
    {
      "hive-interactive-env" : {
        "properties_attributes" : { },
        "properties" : {
          "enable_hive_interactive" : "false",
          "llap_heap_size" : "0",
          "llap_app_name" : "llap0",
          "num_retries_for_checking_llap_status" : "20",
          "hive_heapsize" : "512",
          "content" : "      if [ "$SERVICE" = "cli" ]; then      if [ -z "$DEBUG" ]; then      export HADOOP_OPTS="$HADOOP_OPTS -XX:NewRatio=12 -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:+UseParNewGC -XX:-UseGCOverheadLimit"      else      export HADOOP_OPTS="$HADOOP_OPTS -XX:NewRatio=12 -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:-UseGCOverheadLimit"      fi      fi      # The heap size of the jvm stared by hive shell script can be controlled via:      if [ "$SERVICE" = "metastore" ]; then      export HADOOP_HEAPSIZE={{hive_metastore_heapsize}} # Setting for HiveMetastore      else      export HADOOP_HEAPSIZE={{hive_interactive_heapsize}} # Setting for HiveServer2 and Client      fi      export HADOOP_CLIENT_OPTS="$HADOOP_CLIENT_OPTS  -Xmx${HADOOP_HEAPSIZE}m"      export HADOOP_CLIENT_OPTS="$HADOOP_CLIENT_OPTS{{heap_dump_opts}}"      # Larger heap size may be required when running queries over large number of files or partitions.      # By default hive shell scripts use a heap size of 256 (MB).  Larger heap size would also be      # appropriate for hive server (hwi etc).      # Set HADOOP_HOME to point to a specific hadoop install directory      HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}      # Hive Configuration Directory can be controlled by:      export HIVE_CONF_DIR={{hive_server_interactive_conf_dir}}      # Add additional hcatalog jars      if [ "${HIVE_AUX_JARS_PATH}" != "" ]; then        export HIVE_AUX_JARS_PATH=${HIVE_AUX_JARS_PATH}      else        export HIVE_AUX_JARS_PATH=/usr/hdp/current/hive-server2-hive2/lib/hive-hcatalog-core.jar      fi      export METASTORE_PORT={{hive_metastore_port}}      # Spark assembly contains a conflicting copy of HiveConf from hive-1.2      export HIVE_SKIP_SPARK_ASSEMBLY=true",
          "llap_log_level" : "INFO",
          "num_llap_nodes_for_llap_daemons" : "1",
          "num_llap_nodes" : "1",
          "llap_headroom_space" : "12288",
          "llap_extra_slider_opts" : "",
          "slider_am_container_mb" : "341",
          "hive_aux_jars" : "",
          "llap_java_opts" : "-XX:+AlwaysPreTouch {% if java_version > 7 %}-Xss512k -XX:+UseG1GC -XX:TLABSize=8m -XX:+ResizeTLAB -XX:+UseNUMA -XX:+AggressiveOpts -XX:InitiatingHeapOccupancyPercent=40 -XX:G1ReservePercent=20 -XX:MaxGCPauseMillis=200{% else %}-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseParallelGC{% endif %}{{heap_dump_opts}}"
        }
      }
    },
    {
      "hiveserver2-interactive-site" : {
        "properties_attributes" : { },
        "properties" : {
          "hive.async.log.enabled" : "false",
          "hive.service.metrics.hadoop2.component" : "hiveserver2",
          "hive.metastore.metrics.enabled" : "true",
          "hive.service.metrics.reporter" : "HADOOP2"
        }
      }
    },
    {
      "ams-site" : {
        "properties_attributes" : { },
        "properties" : {
          "timeline.metrics.cluster.aggregator.hourly.interval" : "3600",
          "timeline.metrics.cluster.aggregator.minute.checkpointCutOffMultiplier" : "2",
          "timeline.metrics.cluster.aggregator.daily.checkpointCutOffMultiplier" : "2",
          "timeline.metrics.host.aggregator.hourly.interval" : "3600",
          "timeline.metrics.aggregators.skip.blockcache.enabled" : "false",
          "timeline.metrics.service.rpc.address" : "0.0.0.0:60200",
          "timeline.metrics.service.operation.mode" : "embedded",
          "timeline.metrics.aggregator.checkpoint.dir" : "/var/lib/ambari-metrics-collector/checkpoint",
          "failover.strategy" : "round-robin",
          "timeline.metrics.cluster.aggregator.second.checkpointCutOffMultiplier" : "2",
          "timeline.metrics.service.http.policy" : "HTTP_ONLY",
          "timeline.metrics.downsampler.topn.value" : "10",
          "timeline.metrics.host.aggregator.minute.checkpointCutOffMultiplier" : "2",
          "timeline.metrics.service.watcher.timeout" : "30",
          "timeline.metrics.service.checkpointDelay" : "60",
          "timeline.metrics.cluster.aggregator.second.interval" : "120",
          "timeline.metrics.service.webapp.address" : "0.0.0.0:6188",
          "timeline.metrics.host.aggregator.daily.ttl" : "31536000",
          "timeline.metrics.service.watcher.delay" : "30",
          "timeline.metrics.service.watcher.disabled" : "false",
          "timeline.metrics.hbase.init.check.enabled" : "true",
          "timeline.metrics.host.aggregator.hourly.disabled" : "false",
          "timeline.metrics.service.cluster.aggregator.appIds" : "datanode,nodemanager,hbase",
          "timeline.metrics.cluster.aggregator.hourly.checkpointCutOffMultiplier" : "2",
          "timeline.metrics.host.aggregator.daily.checkpointCutOffMultiplier" : "2",
          "timeline.metrics.service.resultset.fetchSize" : "2000",
          "timeline.metrics.cluster.aggregator.hourly.ttl" : "31536000",
          "cluster.zookeeper.quorum" : "{{cluster_zookeeper_quorum_hosts}}",
          "timeline.metrics.downsampler.topn.function" : "max",
          "timeline.metrics.host.aggregator.ttl" : "86400",
          "phoenix.spool.directory" : "/tmp",
          "timeline.metrics.host.aggregate.splitpoints" : "load_fifteen",
          "timeline.metrics.service.handler.thread.count" : "20",
          "timeline.metrics.cache.size" : "200",
          "timeline.metrics.cluster.aggregator.minute.interval" : "300",
          "timeline.metrics.cluster.aggregator.minute.ttl" : "2592000",
          "timeline.metrics.host.aggregator.minute.interval" : "300",
          "timeline.metrics.cluster.aggregator.interpolation.enabled" : "true",
          "timeline.metrics.cache.commit.interval" : "10",
          "timeline.metrics.host.aggregator.minute.disabled" : "false",
          "timeline.metrics.service.metadata.filters" : "ContainerResource",
          "timeline.metrics.cache.enabled" : "true",
          "timeline.metrics.cluster.aggregate.splitpoints" : "load_fifteen",
          "timeline.metrics.cluster.aggregator.minute.disabled" : "false",
          "timeline.metrics.service.use.groupBy.aggregators" : "true",
          "phoenix.query.maxGlobalMemoryPercentage" : "25",
          "timeline.metrics.service.default.result.limit" : "15840",
          "timeline.metrics.hbase.compression.scheme" : "SNAPPY",
          "timeline.metrics.cluster.aggregator.daily.ttl" : "63072000",
          "cluster.zookeeper.property.clientPort" : "{{cluster_zookeeper_clientPort}}",
          "timeline.metrics.sink.report.interval" : "60",
          "timeline.metrics.cluster.aggregator.second.timeslice.interval" : "30",
          "timeline.metrics.cluster.aggregation.sql.filters" : "sdisk\\_%,boottime",
          "timeline.metrics.downsampler.topn.metric.patterns" : "dfs.NNTopUserOpCounts.windowMs=60000.op=__%.user=%,dfs.NNTopUserOpCounts.windowMs=300000.op=__%.user=%,dfs.NNTopUserOpCounts.windowMs=1500000.op=__%.user=%",
          "timeline.metrics.host.aggregator.hourly.ttl" : "2592000",
          "timeline.metrics.cluster.aggregator.daily.interval" : "86400",
          "timeline.metrics.host.aggregator.daily.disabled" : "false",
          "timeline.metrics.cluster.aggregator.daily.disabled" : "false",
          "timeline.metrics.cluster.aggregator.hourly.disabled" : "false",
          "timeline.metrics.service.watcher.initial.delay" : "600",
          "timeline.metrics.host.aggregator.minute.ttl" : "604800",
          "timeline.metrics.hbase.data.block.encoding" : "FAST_DIFF",
          "timeline.metrics.cluster.aggregator.second.disabled" : "false",
          "timeline.metrics.sink.collection.period" : "10",
          "timeline.metrics.host.aggregator.hourly.checkpointCutOffMultiplier" : "2",
          "timeline.metrics.daily.aggregator.minute.interval" : "86400",
          "timeline.metrics.cluster.aggregator.second.ttl" : "259200"
        }
      }
    },
    {
      "mapred-site" : {
        "properties_attributes" : { },
        "properties" : {
          "mapreduce.map.speculative" : "false",
          "mapreduce.jobhistory.recovery.store.class" : "org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService",
          "mapreduce.job.counters.max" : "130",
          "mapreduce.reduce.log.level" : "INFO",
          "mapreduce.shuffle.port" : "13562",
          "yarn.app.mapreduce.am.admin-command-opts" : "-Dhdp.version=${hdp.version}",
          "mapreduce.job.emit-timeline-data" : "false",
          "mapreduce.jobhistory.recovery.enable" : "true",
          "mapreduce.map.log.level" : "INFO",
          "yarn.app.mapreduce.am.staging-dir" : "/user",
          "mapreduce.reduce.shuffle.merge.percent" : "0.66",
          "mapreduce.output.fileoutputformat.compress" : "false",
          "mapreduce.admin.map.child.java.opts" : "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
          "mapreduce.job.reduce.slowstart.completedmaps" : "0.05",
          "mapreduce.jobhistory.http.policy" : "HTTP_ONLY",
          "mapreduce.job.queuename" : "default",
          "mapreduce.application.framework.path" : "/hdp/apps/${hdp.version}/mapreduce/mapreduce.tar.gz#mr-framework",
          "mapreduce.application.classpath" : "$PWD/mr-framework/hadoop/share/hadoop/mapreduce/*:$PWD/mr-framework/hadoop/share/hadoop/mapreduce/lib/*:$PWD/mr-framework/hadoop/share/hadoop/common/*:$PWD/mr-framework/hadoop/share/hadoop/common/lib/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/lib/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/lib/*:$PWD/mr-framework/hadoop/share/hadoop/tools/lib/*:/usr/hdp/${hdp.version}/hadoop/lib/hadoop-lzo-0.6.0.${hdp.version}.jar:/etc/hadoop/conf/secure",
          "mapreduce.reduce.java.opts" : "-Xmx1091m",
          "mapreduce.map.output.compress" : "false",
          "mapreduce.reduce.input.buffer.percent" : "0.0",
          "mapreduce.jobhistory.intermediate-done-dir" : "/mr-history/tmp",
          "yarn.app.mapreduce.am.log.level" : "INFO",
          "mapreduce.reduce.shuffle.fetch.retry.interval-ms" : "1000",
          "mapreduce.reduce.shuffle.input.buffer.percent" : "0.7",
          "mapreduce.reduce.speculative" : "false",
          "mapreduce.output.fileoutputformat.compress.type" : "BLOCK",
          "mapreduce.task.io.sort.mb" : "381",
          "mapreduce.cluster.administrators" : " hadoop",
          "mapreduce.reduce.shuffle.fetch.retry.timeout-ms" : "30000",
          "mapreduce.jobhistory.address" : "%HOSTGROUP::host_group_1%:10020",
          "mapreduce.map.sort.spill.percent" : "0.7",
          "mapreduce.map.memory.mb" : "682",
          "mapreduce.admin.reduce.child.java.opts" : "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
          "mapreduce.jobhistory.bind-host" : "0.0.0.0",
          "mapreduce.task.timeout" : "300000",
          "mapreduce.admin.user.env" : "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-{{architecture}}-64",
          "mapreduce.am.max-attempts" : "2",
          "mapreduce.reduce.memory.mb" : "1364",
          "mapreduce.framework.name" : "yarn",
          "mapreduce.reduce.shuffle.parallelcopies" : "30",
          "mapreduce.jobhistory.done-dir" : "/mr-history/done",
          "mapreduce.jobhistory.webapp.address" : "%HOSTGROUP::host_group_1%:19888",
          "mapreduce.reduce.shuffle.fetch.retry.enabled" : "1",
          "mapreduce.task.io.sort.factor" : "100",
          "mapreduce.jobhistory.recovery.store.leveldb.path" : "/hadoop/mapreduce/jhs",
          "yarn.app.mapreduce.client.job.max-retries" : "30",
          "yarn.app.mapreduce.am.command-opts" : "-Xmx545m -Dhdp.version=${hdp.version}",
          "mapreduce.map.java.opts" : "-Xmx545m",
          "yarn.app.mapreduce.am.resource.mb" : "682"
        }
      }
    },
    {
      "hdfs-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "hadoop_security_log_max_backup_size" : "256",
          "hadoop_security_log_number_of_backup_files" : "20",
          "hadoop_log_number_of_backup_files" : "10",
          "content" : "## Licensed to the Apache Software Foundation (ASF) under one# or more contributor license agreements.  See the NOTICE file# distributed with this work for additional information# regarding copyright ownership.  The ASF licenses this file# to you under the Apache License, Version 2.0 (the# "License"); you may not use this file except in compliance# with the License.  You may obtain a copy of the License at##  http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing,# software distributed under the License is distributed on an# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY# KIND, either express or implied.  See the License for the# specific language governing permissions and limitations# under the License.## Define some default values that can be overridden by system properties# To change daemon root logger use hadoop_root_logger in hadoop-envhadoop.root.logger=INFO,consolehadoop.log.dir=.hadoop.log.file=hadoop.log# Define the root logger to the system property "hadoop.root.logger".log4j.rootLogger=${hadoop.root.logger}, EventCounter# Logging Thresholdlog4j.threshhold=ALL## Daily Rolling File Appender#log4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.DRFA.File=${hadoop.log.dir}/${hadoop.log.file}# Rollver at midnightlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd# 30-day backup#log4j.appender.DRFA.MaxBackupIndex=30log4j.appender.DRFA.layout=org.apache.log4j.PatternLayout# Pattern format: Date LogLevel LoggerName LogMessagelog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n# Debugging Pattern format#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n## console# Add "console" to rootlogger above if you want to use this#log4j.appender.console=org.apache.log4j.ConsoleAppenderlog4j.appender.console.target=System.errlog4j.appender.console.layout=org.apache.log4j.PatternLayoutlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n## TaskLog Appender##Default valueshadoop.tasklog.taskid=nullhadoop.tasklog.iscleanup=falsehadoop.tasklog.noKeepSplits=4hadoop.tasklog.totalLogFileSize=100hadoop.tasklog.purgeLogSplits=truehadoop.tasklog.logsRetainHours=12log4j.appender.TLA=org.apache.hadoop.mapred.TaskLogAppenderlog4j.appender.TLA.taskId=${hadoop.tasklog.taskid}log4j.appender.TLA.isCleanup=${hadoop.tasklog.iscleanup}log4j.appender.TLA.totalLogFileSize=${hadoop.tasklog.totalLogFileSize}log4j.appender.TLA.layout=org.apache.log4j.PatternLayoutlog4j.appender.TLA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n##Security audit appender#hadoop.security.logger=INFO,consolehadoop.security.log.maxfilesize={{hadoop_security_log_max_backup_size}}MBhadoop.security.log.maxbackupindex={{hadoop_security_log_number_of_backup_files}}log4j.category.SecurityLogger=${hadoop.security.logger}hadoop.security.log.file=SecurityAuth.auditlog4j.additivity.SecurityLogger=falselog4j.appender.DRFAS=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.DRFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}log4j.appender.DRFAS.layout=org.apache.log4j.PatternLayoutlog4j.appender.DRFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%nlog4j.appender.DRFAS.DatePattern=.yyyy-MM-ddlog4j.appender.RFAS=org.apache.log4j.RollingFileAppenderlog4j.appender.RFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}log4j.appender.RFAS.layout=org.apache.log4j.PatternLayoutlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%nlog4j.appender.RFAS.MaxFileSize=${hadoop.security.log.maxfilesize}log4j.appender.RFAS.MaxBackupIndex=${hadoop.security.log.maxbackupindex}## hdfs audit logging#hdfs.audit.logger=INFO,consolelog4j.logger.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=${hdfs.audit.logger}log4j.additivity.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=falselog4j.appender.DRFAAUDIT=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.DRFAAUDIT.File=${hadoop.log.dir}/hdfs-audit.loglog4j.appender.DRFAAUDIT.layout=org.apache.log4j.PatternLayoutlog4j.appender.DRFAAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%nlog4j.appender.DRFAAUDIT.DatePattern=.yyyy-MM-dd## NameNode metrics logging.# The default is to retain two namenode-metrics.log files up to 64MB each.#namenode.metrics.logger=INFO,NullAppenderlog4j.logger.NameNodeMetricsLog=${namenode.metrics.logger}log4j.additivity.NameNodeMetricsLog=falselog4j.appender.NNMETRICSRFA=org.apache.log4j.RollingFileAppenderlog4j.appender.NNMETRICSRFA.File=${hadoop.log.dir}/namenode-metrics.loglog4j.appender.NNMETRICSRFA.layout=org.apache.log4j.PatternLayoutlog4j.appender.NNMETRICSRFA.layout.ConversionPattern=%d{ISO8601} %m%nlog4j.appender.NNMETRICSRFA.MaxBackupIndex=1log4j.appender.NNMETRICSRFA.MaxFileSize=64MB## mapred audit logging#mapred.audit.logger=INFO,consolelog4j.logger.org.apache.hadoop.mapred.AuditLogger=${mapred.audit.logger}log4j.additivity.org.apache.hadoop.mapred.AuditLogger=falselog4j.appender.MRAUDIT=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.MRAUDIT.File=${hadoop.log.dir}/mapred-audit.loglog4j.appender.MRAUDIT.layout=org.apache.log4j.PatternLayoutlog4j.appender.MRAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%nlog4j.appender.MRAUDIT.DatePattern=.yyyy-MM-dd## Rolling File Appender#log4j.appender.RFA=org.apache.log4j.RollingFileAppenderlog4j.appender.RFA.File=${hadoop.log.dir}/${hadoop.log.file}# Logfile size and and 30-day backupslog4j.appender.RFA.MaxFileSize={{hadoop_log_max_backup_size}}MBlog4j.appender.RFA.MaxBackupIndex={{hadoop_log_number_of_backup_files}}log4j.appender.RFA.layout=org.apache.log4j.PatternLayoutlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} - %m%nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n# Custom Logging levelshadoop.metrics.log.level=INFO#log4j.logger.org.apache.hadoop.mapred.JobTracker=DEBUG#log4j.logger.org.apache.hadoop.mapred.TaskTracker=DEBUG#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUGlog4j.logger.org.apache.hadoop.metrics2=${hadoop.metrics.log.level}# Jets3t librarylog4j.logger.org.jets3t.service.impl.rest.httpclient.RestS3Service=ERROR## Null Appender# Trap security logger on the hadoop client side#log4j.appender.NullAppender=org.apache.log4j.varia.NullAppender## Event Counter Appender# Sends counts of logging messages at different severity levels to Hadoop Metrics.#log4j.appender.EventCounter=org.apache.hadoop.log.metrics.EventCounter# Removes "deprecated" messageslog4j.logger.org.apache.hadoop.conf.Configuration.deprecation=WARN## HDFS block state change log from block manager## Uncomment the following to suppress normal block state change# messages from BlockManager in NameNode.#log4j.logger.BlockStateChange=WARN",
          "hadoop_log_max_backup_size" : "256"
        }
      }
    },
    {
      "hive-site" : {
        "properties_attributes" : {
          "hidden" : {
            "javax.jdo.option.ConnectionPassword" : "HIVE_CLIENT,WEBHCAT_SERVER,HCAT,CONFIG_DOWNLOAD"
          }
        },
        "properties" : {
          "hive.exec.reducers.bytes.per.reducer" : "67108864",
          "hive.metastore.pre.event.listeners" : "org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener",
          "hive.optimize.reducededuplication" : "true",
          "hive.metastore.sasl.enabled" : "false",
          "hive.vectorized.execution.enabled" : "true",
          "hive.security.authorization.manager" : "org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdConfOnlyAuthorizerFactory",
          "hive.auto.convert.join.noconditionaltask" : "true",
          "hive.exec.orc.compression.strategy" : "SPEED",
          "hive.server2.allow.user.substitution" : "true",
          "hive.limit.pushdown.memory.usage" : "0.04",
          "hive.merge.rcfile.block.level" : "true",
          "hive.stats.fetch.column.stats" : "true",
          "hive.tez.dynamic.partition.pruning" : "true",
          "hive.exec.max.dynamic.partitions.pernode" : "2000",
          "hive.exec.orc.default.compress" : "ZLIB",
          "hive.merge.mapredfiles" : "false",
          "hive.compactor.abortedtxn.threshold" : "1000",
          "hive.map.aggr" : "true",
          "hive.tez.dynamic.partition.pruning.max.data.size" : "104857600",
          "hive.compactor.initiator.on" : "false",
          "hive.smbjoin.cache.rows" : "10000",
          "hive.exec.max.dynamic.partitions" : "5000",
          "hive.auto.convert.join" : "true",
          "hive.server2.support.dynamic.service.discovery" : "true",
          "hive.tez.log.level" : "INFO",
          "hive.compactor.worker.timeout" : "86400L",
          "hive.metastore.authorization.storage.checks" : "false",
          "hive.merge.mapfiles" : "true",
          "hive.exec.post.hooks" : "org.apache.hadoop.hive.ql.hooks.ATSHook",
          "hive.server2.transport.mode" : "binary",
          "hive.server2.thrift.http.path" : "cliservice",
          "hive.enforce.sortmergebucketmapjoin" : "true",
          "hive.metastore.execute.setugi" : "true",
          "hive.tez.smb.number.waves" : "0.5",
          "hive.server2.authentication.spnego.keytab" : "HTTP/_HOST@EXAMPLE.COM",
          "hive.zookeeper.quorum" : "%HOSTGROUP::host_group_4%:2181,s%HOSTGROUP::host_group_4%:2181,%HOSTGROUP::host_group_3%:2181",
          "hive.mapjoin.bucket.cache.size" : "10000",
          "hive.metastore.kerberos.principal" : "hive/_HOST@EXAMPLE.COM",
          "hive.tez.auto.reducer.parallelism" : "true",
          "hive.security.metastore.authorization.manager" : "org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider",
          "datanucleus.autoCreateSchema" : "false",
          "datanucleus.fixedDatastore" : "true",
          "hive.compute.query.using.stats" : "true",
          "hive.security.authorization.enabled" : "false",
          "hive.server2.thrift.sasl.qop" : "auth",
          "hive.merge.orcfile.stripe.level" : "true",
          "hive.orc.splits.include.file.footer" : "false",
          "hive.exec.compress.output" : "false",
          "hive.user.install.directory" : "/user/",
          "hive.prewarm.enabled" : "false",
          "hive.compactor.delta.num.threshold" : "10",
          "hive.orc.compute.splits.num.threads" : "10",
          "hive.vectorized.groupby.checkinterval" : "4096",
          "hive.txn.manager" : "org.apache.hadoop.hive.ql.lockmgr.DummyTxnManager",
          "datanucleus.cache.level2.type" : "none",
          "hive.map.aggr.hash.percentmemory" : "0.5",
          "hive.optimize.bucketmapjoin" : "true",
          "hive.tez.max.partition.factor" : "2.0",
          "hive.server2.thrift.port" : "10000",
          "hive.exec.failure.hooks" : "org.apache.hadoop.hive.ql.hooks.ATSHook",
          "hive.exec.compress.intermediate" : "false",
          "hive.exec.max.created.files" : "100000",
          "hive.mapred.reduce.tasks.speculative.execution" : "false",
          "hive.vectorized.groupby.flush.percent" : "0.1",
          "hive.metastore.client.socket.timeout" : "1800s",
          "hive.server2.tez.initialize.default.sessions" : "false",
          "atlas.hook.hive.minThreads" : "1",
          "hive.stats.autogather" : "true",
          "hive.optimize.sort.dynamic.partition" : "false",
          "hive.txn.max.open.batch" : "1000",
          "hive.default.fileformat" : "TextFile",
          "hive.mapjoin.optimized.hashtable" : "true",
          "hive.vectorized.groupby.maxentries" : "100000",
          "hive.compactor.check.interval" : "300L",
          "hive.security.authenticator.manager" : "org.apache.hadoop.hive.ql.security.ProxyUserAuthenticator",
          "hive.security.metastore.authorization.auth.reads" : "true",
          "hive.compactor.delta.pct.threshold" : "0.1f",
          "hive.vectorized.execution.reduce.enabled" : "false",
          "javax.jdo.option.ConnectionDriverName" : "com.mysql.jdbc.Driver",
          "hive.stats.dbclass" : "fs",
          "hive.exec.parallel" : "false",
          "hive.compactor.worker.threads" : "0",
          "hive.exec.submitviachild" : "false",
          "hive.fetch.task.conversion" : "more",
          "hive.server2.authentication" : "NONE",
          "hive.map.aggr.hash.force.flush.memory.threshold" : "0.9",
          "hive.merge.tezfiles" : "false",
          "hive.metastore.cache.pinobjtypes" : "Table,Database,Type,FieldSchema,Order",
          "hive.optimize.index.filter" : "true",
          "hive.server2.authentication.spnego.principal" : "/etc/security/keytabs/spnego.service.keytab",
          "hive.convert.join.bucket.mapjoin.tez" : "false",
          "hive.metastore.warehouse.dir" : "/apps/hive/warehouse",
          "hive.execution.engine" : "tez",
          "atlas.hook.hive.maxThreads" : "1",
          "hive.tez.dynamic.partition.pruning.max.event.size" : "1048576",
          "hive.cbo.enable" : "true",
          "hive.exec.orc.encoding.strategy" : "SPEED",
          "hive.optimize.constant.propagation" : "true",
          "hive.tez.container.size" : "682",
          "hive.metastore.connect.retries" : "24",
          "hive.optimize.reducededuplication.min.reducer" : "4",
          "hive.tez.input.format" : "org.apache.hadoop.hive.ql.io.HiveInputFormat",
          "hive.cluster.delegation.token.store.zookeeper.connectString" : "%HOSTGROUP::host_group_4%:2181,s%HOSTGROUP::host_group_4%:2181,%HOSTGROUP::host_group_3%:2181",
          "hive.metastore.uris" : "thrift://%HOSTGROUP::host_group_3%:9083",
          "hive.server2.max.start.attempts" : "5",
          "hive.exec.dynamic.partition.mode" : "strict",
          "hive.server2.thrift.max.worker.threads" : "500",
          "hive.server2.use.SSL" : "false",
          "hive.tez.java.opts" : "-server -Djava.net.preferIPv4Stack=true -XX:NewRatio=8 -XX:+UseNUMA -XX:+UseG1GC -XX:+ResizeTLAB -XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps",
          "hive.exec.submit.local.task.via.child" : "true",
          "hive.optimize.null.scan" : "true",
          "hive.exec.orc.default.stripe.size" : "67108864",
          "hive.limit.optimize.enable" : "true",
          "hive.cluster.delegation.token.store.zookeeper.znode" : "/hive/cluster/delegation",
          "hive.exec.pre.hooks" : "org.apache.hadoop.hive.ql.hooks.ATSHook",
          "hive.cluster.delegation.token.store.class" : "org.apache.hadoop.hive.thrift.ZooKeeperTokenStore",
          "ambari.hive.db.schema.name" : "hive",
          "hive.zookeeper.client.port" : "2181",
          "hive.enforce.sorting" : "true",
          "hive.tez.cpu.vcores" : "-1",
          "hive.metastore.client.connect.retry.delay" : "5s",
          "hive.server2.tez.default.queues" : "default",
          "hive.server2.tez.sessions.per.default.queue" : "1",
          "hive.server2.thrift.http.port" : "10001",
          "hive.server2.logging.operation.log.location" : "/tmp/hive/operation_logs",
          "javax.jdo.option.ConnectionURL" : "jdbc:mysql://%HOSTGROUP::host_group_3%/hive?createDatabaseIfNotExist=true",
          "hive.map.aggr.hash.min.reduction" : "0.5",
          "hive.merge.size.per.task" : "256000000",
          "hive.merge.smallfiles.avgsize" : "16000000",
          "hive.exec.reducers.max" : "1009",
          "hive.optimize.metadataonly" : "true",
          "hive.fetch.task.conversion.threshold" : "1073741824",
          "hive.prewarm.numcontainers" : "3",
          "hive.tez.min.partition.factor" : "0.25",
          "hive.auto.convert.join.noconditionaltask.size" : "190701021",
          "hive.server2.logging.operation.enabled" : "true",
          "hive.metastore.kerberos.keytab.file" : "/etc/security/keytabs/hive.service.keytab",
          "hive.exec.parallel.thread.number" : "8",
          "hive.support.concurrency" : "false",
          "javax.jdo.option.ConnectionUserName" : "hive",
          "hive.conf.restricted.list" : "hive.security.authenticator.manager,hive.security.authorization.manager,hive.users.in.admin.role",
          "hive.auto.convert.sortmerge.join.to.mapjoin" : "false",
          "hive.fetch.task.aggr" : "false",
          "hive.cli.print.header" : "false",
          "hive.server2.table.type.mapping" : "CLASSIC",
          "hive.txn.timeout" : "300",
          "hive.stats.fetch.partition.stats" : "true",
          "hive.optimize.bucketmapjoin.sortedmerge" : "false",
          "hive.security.metastore.authenticator.manager" : "org.apache.hadoop.hive.ql.security.HadoopDefaultMetastoreAuthenticator",
          "hive.server2.enable.doAs" : "true",
          "hive.server2.zookeeper.namespace" : "hiveserver2",
          "hive.default.fileformat.managed" : "TextFile",
          "hive.enforce.bucketing" : "true",
          "hive.exec.scratchdir" : "/tmp/hive",
          "hive.exec.dynamic.partition" : "true",
          "hive.metastore.server.max.threads" : "100000",
          "hive.metastore.failure.retries" : "24",
          "hive.auto.convert.sortmerge.join" : "true",
          "hive.zookeeper.namespace" : "hive_zookeeper_namespace"
        }
      }
    },
    {
      "activity-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "global.activity.processing.parallelism" : "8",
          "yarn_app.activity.watcher.enabled" : "true",
          "mr_job.max.job.size.mb.for.parallel.execution" : "500",
          "global.activity.processor.pool.max.wait.seconds" : "60",
          "phoenix.sink.batch.size" : "100",
          "phoenix.sink.flush.interval.seconds" : "30",
          "hdfs.activity.watcher.enabled" : "true",
          "global.activity.analyzer.user" : "activity_analyzer",
          "tez_job.activity.watcher.enabled" : "true",
          "activity.explorer.user" : "activity_explorer",
          "mr_job.activity.watcher.enabled" : "true",
          "tez_job.tmp.dir" : "/var/lib/smartsense/activity-analyzer/tez/tmp/"
        }
      }
    },
    {
      "tez-site" : {
        "properties_attributes" : { },
        "properties" : {
          "tez.am.launch.cmd-opts" : "-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseG1GC -XX:+ResizeTLAB{{heap_dump_opts}}",
          "tez.runtime.sorter.class" : "PIPELINED",
          "tez.counters.max.groups" : "3000",
          "tez.am.view-acls" : "*",
          "tez.runtime.shuffle.memory.limit.percent" : "0.25",
          "tez.staging-dir" : "/tmp/${user.name}/staging",
          "tez.am.container.reuse.locality.delay-allocation-millis" : "250",
          "tez.runtime.compress" : "true",
          "tez.am.am-rm.heartbeat.interval-ms.max" : "250",
          "tez.am.container.idle.release-timeout-min.millis" : "10000",
          "tez.task.launch.cmd-opts" : "-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseG1GC -XX:+ResizeTLAB{{heap_dump_opts}}",
          "tez.lib.uris" : "/hdp/apps/${hdp.version}/tez/tez.tar.gz",
          "tez.counters.max" : "10000",
          "tez.generate.debug.artifacts" : "false",
          "tez.runtime.convert.user-payload.to.history-text" : "false",
          "tez.shuffle-vertex-manager.max-src-fraction" : "0.4",
          "tez.am.log.level" : "INFO",
          "tez.task.am.heartbeat.counter.interval-ms.max" : "4000",
          "tez.am.container.idle.release-timeout-max.millis" : "20000",
          "tez.am.resource.memory.mb" : "1364",
          "tez.am.max.app.attempts" : "2",
          "tez.cluster.additional.classpath.prefix" : "/usr/hdp/${hdp.version}/hadoop/lib/hadoop-lzo-0.6.0.${hdp.version}.jar:/etc/hadoop/conf/secure",
          "tez.am.container.reuse.non-local-fallback.enabled" : "false",
          "tez.am.container.reuse.rack-fallback.enabled" : "true",
          "tez.task.get-task.sleep.interval-ms.max" : "200",
          "tez.runtime.io.sort.mb" : "180",
          "tez.task.resource.memory.mb" : "682",
          "tez.runtime.optimize.local.fetch" : "true",
          "tez.runtime.pipelined.sorter.sort.threads" : "2",
          "tez.shuffle-vertex-manager.min-src-fraction" : "0.2",
          "tez.session.am.dag.submit.timeout.secs" : "600",
          "tez.session.client.timeout.secs" : "-1",
          "tez.am.launch.cluster-default.cmd-opts" : "-server -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
          "tez.am.maxtaskfailures.per.node" : "10",
          "tez.am.tez-ui.history-url.template" : "__HISTORY_URL_BASE__?viewPath=%2F%23%2Ftez-app%2F__APPLICATION_ID__",
          "tez.history.logging.timeline-cache-plugin.old-num-dags-per-group" : "5",
          "tez.runtime.shuffle.fetch.buffer.percent" : "0.6",
          "tez.task.launch.env" : "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-{{architecture}}-64",
          "tez.use.cluster.hadoop-libs" : "false",
          "tez.queue.name" : "default",
          "tez.runtime.unordered.output.buffer.size-mb" : "51",
          "tez.am.container.reuse.enabled" : "true",
          "tez.grouping.split-waves" : "1.7",
          "tez.grouping.max-size" : "1073741824",
          "tez.task.launch.cluster-default.cmd-opts" : "-server -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
          "tez.task.max-events-per-heartbeat" : "500",
          "tez.history.logging.service.class" : "org.apache.tez.dag.history.logging.ats.ATSV15HistoryLoggingService",
          "tez.grouping.min-size" : "16777216",
          "tez.task.generate.counters.per.io" : "true",
          "tez.am.launch.env" : "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-{{architecture}}-64",
          "tez.runtime.compress.codec" : "org.apache.hadoop.io.compress.SnappyCodec"
        }
      }
    },
    {
      "activity-zeppelin-site" : {
        "properties_attributes" : { },
        "properties" : {
          "zeppelin.notebook.dir" : "/var/lib/smartsense/activity-explorer/notebook",
          "zeppelin.server.context.path" : "/",
          "zeppelin.ssl.keystore.type" : "JKS",
          "zeppelin.ssl.truststore.path" : "/var/lib/smartsense/activity-explorer/truststore",
          "zeppelin.war.tempdir" : "/var/lib/smartsense/activity-explorer/webapp",
          "zeppelin.websocket.max.text.message.size" : "1024000",
          "zeppelin.notebook.homescreen.hide" : "false",
          "zeppelin.interpreters" : "org.apache.zeppelin.phoenix.PhoenixInterpreter",
          "zeppelin.server.port" : "9060",
          "zeppelin.ssl" : "false",
          "zeppelin.notebook.storage" : "org.apache.zeppelin.notebook.repo.VFSNotebookRepo",
          "zeppelin.interpreter.connect.timeout" : "30000",
          "zeppelin.anonymous.allowed" : "false",
          "zeppelin.interpreter.dir" : "/usr/hdp/share/hst/activity-explorer/interpreter",
          "zeppelin.ssl.truststore.type" : "JKS",
          "zeppelin.ssl.keystore.path" : "/var/lib/smartsense/activity-explorer/keystore",
          "zeppelin.server.allowed.origins" : "*",
          "zeppelin.server.addr" : "0.0.0.0",
          "zeppelin.ssl.client.auth" : "false"
        }
      }
    },
    {
      "webhcat-site" : {
        "properties_attributes" : { },
        "properties" : {
          "templeton.zookeeper.hosts" : "%HOSTGROUP::host_group_4%:2181,s%HOSTGROUP::host_group_4%:2181,%HOSTGROUP::host_group_3%:2181",
          "webhcat.proxyuser.root.groups" : "*",
          "webhcat.proxyuser.root.hosts" : "ambari-1.localdomain",
          "templeton.hadoop.queue.name" : "default",
          "templeton.hadoop" : "/usr/hdp/${hdp.version}/hadoop/bin/hadoop",
          "templeton.hive.extra.files" : "/usr/hdp/${hdp.version}/tez/conf/tez-site.xml,/usr/hdp/${hdp.version}/tez,/usr/hdp/${hdp.version}/tez/lib",
          "templeton.hcat.home" : "hive.tar.gz/hive/hcatalog",
          "templeton.override.enabled" : "false",
          "templeton.hive.properties" : "hive.metastore.local=false,hive.metastore.uris=thrift://%HOSTGROUP::host_group_3%:9083,hive.metastore.sasl.enabled=false,hive.metastore.execute.setugi=true",
          "templeton.python" : "${env.PYTHON_CMD}",
          "templeton.storage.class" : "org.apache.hive.hcatalog.templeton.tool.ZooKeeperStorage",
          "templeton.streaming.jar" : "hdfs:///hdp/apps/${hdp.version}/mapreduce/hadoop-streaming.jar",
          "templeton.hadoop.conf.dir" : "/etc/hadoop/conf",
          "templeton.hcat" : "/usr/hdp/${hdp.version}/hive/bin/hcat",
          "templeton.jar" : "/usr/hdp/${hdp.version}/hive/share/webhcat/svr/lib/hive-webhcat-*.jar",
          "templeton.port" : "50111",
          "templeton.libjars" : "/usr/hdp/${hdp.version}/zookeeper/zookeeper.jar,/usr/hdp/${hdp.version}/hive/lib/hive-common.jar",
          "templeton.hive.path" : "hive.tar.gz/hive/bin/hive",
          "templeton.exec.timeout" : "60000",
          "templeton.sqoop.home" : "sqoop.tar.gz/sqoop",
          "templeton.sqoop.archive" : "hdfs:///hdp/apps/${hdp.version}/sqoop/sqoop.tar.gz",
          "templeton.hive.archive" : "hdfs:///hdp/apps/${hdp.version}/hive/hive.tar.gz",
          "templeton.hive.home" : "hive.tar.gz/hive",
          "templeton.pig.archive" : "hdfs:///hdp/apps/${hdp.version}/pig/pig.tar.gz",
          "templeton.pig.path" : "pig.tar.gz/pig/bin/pig",
          "templeton.sqoop.path" : "sqoop.tar.gz/sqoop/bin/sqoop"
        }
      }
    },
    {
      "slider-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "# Set Slider-specific environment variables here.# The only required environment variable is JAVA_HOME.  All others are# optional.  When running a distributed configuration it is best to# set JAVA_HOME in this file, so that it is correctly defined on# remote nodes.# The java implementation to use.  Required.export JAVA_HOME={{java64_home}}# The hadoop conf directory.  Optional as slider-client.xml can be edited to add properties.export HADOOP_CONF_DIR={{hadoop_conf_dir}}"
        }
      }
    },
    {
      "ams-hbase-env" : {
        "properties_attributes" : { },
        "properties" : {
          "hbase_master_maxperm_size" : "128",
          "max_open_files_limit" : "32768",
          "regionserver_xmn_size" : "128",
          "hbase_master_heapsize" : "640",
          "hbase_regionserver_xmn_ratio" : "0.2",
          "hbase_master_xmn_size" : "192",
          "content" : "# Set environment variables here.# The java implementation to use. Java 1.6+ required.export JAVA_HOME={{java64_home}}# HBase Configuration directoryexport HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{hbase_conf_dir}}}# Extra Java CLASSPATH elements. Optional.additional_cp={{hbase_classpath_additional}}if [  -n "$additional_cp" ];then  export HBASE_CLASSPATH=${HBASE_CLASSPATH}:$additional_cpelse  export HBASE_CLASSPATH=${HBASE_CLASSPATH}fi# The maximum amount of heap to use for hbase shell.export HBASE_SHELL_OPTS="-Xmx256m"# Extra Java runtime options.# Below are what we set by default. May only work with SUN JVM.# For more on why as well as other possible settings,# see http://wiki.apache.org/hadoop/PerformanceTuningexport HBASE_OPTS="-XX:+UseConcMarkSweepGC -XX:ErrorFile={{hbase_log_dir}}/hs_err_pid%p.log -Djava.io.tmpdir={{hbase_tmp_dir}}"export SERVER_GC_OPTS="-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{hbase_log_dir}}/gc.log-`date +'%Y%m%d%H%M'`"# Uncomment below to enable java garbage collection logging.# export HBASE_OPTS="$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log"# Uncomment and adjust to enable JMX exporting# See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.# More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html## export HBASE_JMX_BASE="-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false"{% if java_version < 8 %}export HBASE_MASTER_OPTS=" -XX:PermSize=64m -XX:MaxPermSize={{hbase_master_maxperm_size}} -Xms{{hbase_heapsize}} -Xmx{{hbase_heapsize}} -Xmn{{hbase_master_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly"export HBASE_REGIONSERVER_OPTS="-XX:MaxPermSize=128m -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}"{% else %}export HBASE_MASTER_OPTS=" -Xms{{hbase_heapsize}} -Xmx{{hbase_heapsize}} -Xmn{{hbase_master_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly"export HBASE_REGIONSERVER_OPTS=" -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}"{% endif %}# export HBASE_THRIFT_OPTS="$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103"# export HBASE_ZOOKEEPER_OPTS="$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104"# File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.export HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers# Extra ssh options. Empty by default.# export HBASE_SSH_OPTS="-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR"# Where log files are stored. $HBASE_HOME/logs by default.export HBASE_LOG_DIR={{hbase_log_dir}}# A string representing this instance of hbase. $USER by default.# export HBASE_IDENT_STRING=$USER# The scheduling priority for daemon processes. See 'man nice'.# export HBASE_NICENESS=10# The directory where pid files are stored. /tmp by default.export HBASE_PID_DIR={{hbase_pid_dir}}# Seconds to sleep between slave commands. Unset by default. This# can be useful in large clusters, where, e.g., slave rsyncs can# otherwise arrive faster than the master can service them.# export HBASE_SLAVE_SLEEP=0.1# Tell HBase whether it should manage it's own instance of Zookeeper or not.export HBASE_MANAGES_ZK=false{% if security_enabled %}export HBASE_OPTS="$HBASE_OPTS -Djava.security.auth.login.config={{client_jaas_config_file}}"export HBASE_MASTER_OPTS="$HBASE_MASTER_OPTS -Djava.security.auth.login.config={{master_jaas_config_file}}"export HBASE_REGIONSERVER_OPTS="$HBASE_REGIONSERVER_OPTS -Djava.security.auth.login.config={{regionserver_jaas_config_file}}"export HBASE_ZOOKEEPER_OPTS="$HBASE_ZOOKEEPER_OPTS -Djava.security.auth.login.config={{ams_zookeeper_jaas_config_file}}"{% endif %}# use embedded native libs_HADOOP_NATIVE_LIB="/usr/lib/ams-hbase/lib/hadoop-native/"export HBASE_OPTS="$HBASE_OPTS -Djava.library.path=${_HADOOP_NATIVE_LIB}"# Unset HADOOP_HOME to avoid importing HADOOP installed cluster related configs like: /usr/hdp/2.2.0.0-2041/hadoop/conf/export HADOOP_HOME={{ams_hbase_home_dir}}# Explicitly Setting HBASE_HOME for AMS HBase so that there is no conflictexport HBASE_HOME={{ams_hbase_home_dir}}",
          "hbase_pid_dir" : "/var/run/ambari-metrics-collector/",
          "hbase_regionserver_shutdown_timeout" : "30",
          "hbase_log_dir" : "/var/log/ambari-metrics-collector",
          "hbase_regionserver_heapsize" : "768",
          "hbase_classpath_additional" : ""
        }
      }
    },
    {
      "ams-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "ams_log_number_of_backup_files" : "60",
          "ams_log_max_backup_size" : "80",
          "content" : "## Licensed to the Apache Software Foundation (ASF) under one# or more contributor license agreements.  See the NOTICE file# distributed with this work for additional information# regarding copyright ownership.  The ASF licenses this file# to you under the Apache License, Version 2.0 (the# "License"); you may not use this file except in compliance# with the License.  You may obtain a copy of the License at##     http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing, software# distributed under the License is distributed on an "AS IS" BASIS,# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.# See the License for the specific language governing permissions and# limitations under the License.## Define some default values that can be overridden by system propertiesams.log.dir=.ams.log.file=ambari-metrics-collector.log# Root logger optionlog4j.rootLogger=INFO,file# Direct log messages to a log filelog4j.appender.file=org.apache.log4j.RollingFileAppenderlog4j.appender.file.File=${ams.log.dir}/${ams.log.file}log4j.appender.file.MaxFileSize={{ams_log_max_backup_size}}MBlog4j.appender.file.MaxBackupIndex={{ams_log_number_of_backup_files}}log4j.appender.file.layout=org.apache.log4j.PatternLayoutlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n"
        }
      }
    },
    {
      "hivemetastore-site" : {
        "properties_attributes" : { },
        "properties" : {
          "hive.service.metrics.hadoop2.component" : "hivemetastore",
          "hive.metastore.metrics.enabled" : "true",
          "hive.service.metrics.reporter" : "HADOOP2"
        }
      }
    },
    {
      "ams-ssl-server" : {
        "properties_attributes" : { },
        "properties" : {
          "ssl.server.truststore.location" : "/etc/security/serverKeys/all.jks",
          "ssl.server.truststore.reload.interval" : "10000",
          "ssl.server.truststore.type" : "jks",
          "ssl.server.keystore.location" : "/etc/security/serverKeys/keystore.jks",
          "ssl.server.keystore.type" : "jks"
        }
      }
    },
    {
      "hive-exec-log4j2" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "# Licensed to the Apache Software Foundation (ASF) under one# or more contributor license agreements.  See the NOTICE file# distributed with this work for additional information# regarding copyright ownership.  The ASF licenses this file# to you under the Apache License, Version 2.0 (the# "License"); you may not use this file except in compliance# with the License.  You may obtain a copy of the License at##     http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing, software# distributed under the License is distributed on an "AS IS" BASIS,# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.# See the License for the specific language governing permissions and# limitations under the License.status = INFOname = HiveExecLog4j2packages = org.apache.hadoop.hive.ql.log# list of propertiesproperty.hive.log.level = {{hive_log_level}}property.hive.root.logger = FAproperty.hive.query.id = hadoopproperty.hive.log.dir = ${sys:java.io.tmpdir}/${sys:user.name}property.hive.log.file = ${sys:hive.query.id}.log# list of all appendersappenders = console, FA# console appenderappender.console.type = Consoleappender.console.name = consoleappender.console.target = SYSTEM_ERRappender.console.layout.type = PatternLayoutappender.console.layout.pattern = %d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n# simple file appenderappender.FA.type = Fileappender.FA.name = FAappender.FA.fileName = ${sys:hive.log.dir}/${sys:hive.log.file}appender.FA.layout.type = PatternLayoutappender.FA.layout.pattern = %d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%n# list of all loggersloggers = NIOServerCnxn, ClientCnxnSocketNIO, DataNucleus, Datastore, JPOXlogger.NIOServerCnxn.name = org.apache.zookeeper.server.NIOServerCnxnlogger.NIOServerCnxn.level = WARNlogger.ClientCnxnSocketNIO.name = org.apache.zookeeper.ClientCnxnSocketNIOlogger.ClientCnxnSocketNIO.level = WARNlogger.DataNucleus.name = DataNucleuslogger.DataNucleus.level = ERRORlogger.Datastore.name = Datastorelogger.Datastore.level = ERRORlogger.JPOX.name = JPOXlogger.JPOX.level = ERROR# root loggerrootLogger.level = ${sys:hive.log.level}rootLogger.appenderRefs = rootrootLogger.appenderRef.root.ref = ${sys:hive.root.logger}"
        }
      }
    },
    {
      "ams-hbase-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "ams_hbase_log_maxfilesize" : "256",
          "content" : "# Licensed to the Apache Software Foundation (ASF) under one# or more contributor license agreements.  See the NOTICE file# distributed with this work for additional information# regarding copyright ownership.  The ASF licenses this file# to you under the Apache License, Version 2.0 (the# "License"); you may not use this file except in compliance# with the License.  You may obtain a copy of the License at##     http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing, software# distributed under the License is distributed on an "AS IS" BASIS,# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.# See the License for the specific language governing permissions and# limitations under the License.# Define some default values that can be overridden by system propertieshbase.root.logger=INFO,consolehbase.security.logger=INFO,consolehbase.log.dir=.hbase.log.file=hbase.log# Define the root logger to the system property "hbase.root.logger".log4j.rootLogger=${hbase.root.logger}# Logging Thresholdlog4j.threshold=ALL## Daily Rolling File Appender#log4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}# Rollver at midnightlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd# 30-day backup#log4j.appender.DRFA.MaxBackupIndex=30log4j.appender.DRFA.layout=org.apache.log4j.PatternLayout# Pattern format: Date LogLevel LoggerName LogMessagelog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n# Rolling File Appender propertieshbase.log.maxfilesize={{ams_hbase_log_maxfilesize}}MBhbase.log.maxbackupindex={{ams_hbase_log_maxbackupindex}}# Rolling File Appenderlog4j.appender.RFA=org.apache.log4j.RollingFileAppenderlog4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}log4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}log4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}log4j.appender.RFA.layout=org.apache.log4j.PatternLayoutlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n## Security audit appender#hbase.security.log.file=SecurityAuth.audithbase.security.log.maxfilesize={{ams_hbase_security_log_maxfilesize}}MBhbase.security.log.maxbackupindex={{ams_hbase_security_log_maxbackupindex}}log4j.appender.RFAS=org.apache.log4j.RollingFileAppenderlog4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}log4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}log4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}log4j.appender.RFAS.layout=org.apache.log4j.PatternLayoutlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%nlog4j.category.SecurityLogger=${hbase.security.logger}log4j.additivity.SecurityLogger=false#log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE## Null Appender#log4j.appender.NullAppender=org.apache.log4j.varia.NullAppender## console# Add "console" to rootlogger above if you want to use this#log4j.appender.console=org.apache.log4j.ConsoleAppenderlog4j.appender.console.target=System.errlog4j.appender.console.layout=org.apache.log4j.PatternLayoutlog4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n# Custom Logging levelslog4j.logger.org.apache.zookeeper=INFO#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUGlog4j.logger.org.apache.hadoop.hbase=INFO# Make these two classes INFO-level. Make them DEBUG to see more zk debug.log4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFOlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO#log4j.logger.org.apache.hadoop.dfs=DEBUG# Set this class to log INFO only otherwise its OTT# Enable this to get detailed connection error/retry logging.# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE# Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)#log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG# Uncomment the below if you want to remove logging of client region caching'# and scan of .META. messages# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO# log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO",
          "ams_hbase_log_maxbackupindex" : "20",
          "ams_hbase_security_log_maxbackupindex" : "20",
          "ams_hbase_security_log_maxfilesize" : "256"
        }
      }
    },
    {
      "ssl-client" : {
        "properties_attributes" : { },
        "properties" : {
          "ssl.client.truststore.reload.interval" : "10000",
          "ssl.client.keystore.location" : "/etc/security/clientKeys/keystore.jks",
          "ssl.client.truststore.location" : "/etc/security/clientKeys/all.jks",
          "ssl.client.truststore.type" : "jks",
          "ssl.client.keystore.type" : "jks"
        }
      }
    },
    {
      "ams-ssl-client" : {
        "properties_attributes" : { },
        "properties" : {
          "ssl.client.truststore.location" : "/etc/security/clientKeys/all.jks",
          "ssl.client.truststore.type" : "jks",
          "ssl.client.truststore.alias" : ""
        }
      }
    },
    {
      "hive-atlas-application.properties" : {
        "properties_attributes" : { },
        "properties" : {
          "atlas.hook.hive.maxThreads" : "5",
          "atlas.hook.hive.keepAliveTime" : "10",
          "atlas.hook.hive.synchronous" : "false",
          "atlas.hook.hive.minThreads" : "5",
          "atlas.hook.hive.numRetries" : "3",
          "atlas.hook.hive.queueSize" : "1000"
        }
      }
    },
    {
      "ams-hbase-policy" : {
        "properties_attributes" : { },
        "properties" : {
          "security.masterregion.protocol.acl" : "*",
          "security.admin.protocol.acl" : "*",
          "security.client.protocol.acl" : "*"
        }
      }
    },
    {
      "ranger-hdfs-security" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "ams-grafana-ini" : {
        "properties_attributes" : { },
        "properties" : {
          "protocol" : "http",
          "cert_key" : "/etc/ambari-metrics-grafana/conf/ams-grafana.key",
          "port" : "3000",
          "cert_file" : "/etc/ambari-metrics-grafana/conf/ams-grafana.crt",
          "ca_cert" : "",
          "content" : "##################### Grafana Configuration Example ####################### Everything has defaults so you only need to uncomment things you want to# change# possible values : production, development; app_mode = production#################################### Paths ####################################[paths]# Path to where grafana can store temp files, sessions, and the sqlite3 db (if that is used)#;data = /var/lib/grafanadata = {{ams_grafana_data_dir}}## Directory where grafana can store logs#;logs = /var/log/grafanalogs = {{ams_grafana_log_dir}}#################################### Server ####################################[server]# Protocol (http or https);protocol = httpprotocol = {{ams_grafana_protocol}}# The ip address to bind to, empty will bind to all interfaces;http_addr =# The http port  to use;http_port = 3000http_port = {{ams_grafana_port}}# The public facing domain name used to access grafana from a browser;domain = localhost# Redirect to correct domain if host header does not match domain# Prevents DNS rebinding attacks;enforce_domain = false# The full public facing url;root_url = %(protocol)s://%(domain)s:%(http_port)s/# Log web requests;router_logging = false# the path relative working path;static_root_path = publicstatic_root_path = /usr/lib/ambari-metrics-grafana/public# enable gzip;enable_gzip = false# https certs & key file;cert_file =;cert_key =cert_file = {{ams_grafana_cert_file}}cert_key = {{ams_grafana_cert_key}}#################################### Database ####################################[database]# Either "mysql", "postgres" or "sqlite3", it's your choice;type = sqlite3;host = 127.0.0.1:3306;name = grafana;user = root;password =# For "postgres" only, either "disable", "require" or "verify-full";ssl_mode = disable# For "sqlite3" only, path relative to data_path setting;path = grafana.db#################################### Session ####################################[session]# Either "memory", "file", "redis", "mysql", "postgres", default is "file";provider = file# Provider config options# memory: not have any config yet# file: session dir path, is relative to grafana data_path# redis: config like redis server e.g. `addr=127.0.0.1:6379,pool_size=100,db=grafana`# mysql: go-sql-driver/mysql dsn config string, e.g. `user:password@tcp(127.0.0.1:3306)/database_name`# postgres: user=a password=b host=localhost port=5432 dbname=c sslmode=disable;provider_config = sessions# Session cookie name;cookie_name = grafana_sess# If you use session in https only, default is false;cookie_secure = false# Session life time, default is 86400;session_life_time = 86400#################################### Analytics ####################################[analytics]# Server reporting, sends usage counters to stats.grafana.org every 24 hours.# No ip addresses are being tracked, only simple counters to track# running instances, dashboard and error counts. It is very helpful to us.# Change this option to false to disable reporting.;reporting_enabled = true# Google Analytics universal tracking code, only enabled if you specify an id here;google_analytics_ua_id =#################################### Security ####################################[security]# default admin user, created on startupadmin_user = {{ams_grafana_admin_user}}# default admin password, can be changed before first start of grafana,  or in profile settings;admin_password =# used for signing;secret_key = SW2YcwTIb9zpOOhoPsMm# Auto-login remember days;login_remember_days = 7;cookie_username = grafana_user;cookie_remember_name = grafana_remember# disable gravatar profile images;disable_gravatar = false# data source proxy whitelist (ip_or_domain:port seperated by spaces);data_source_proxy_whitelist =#################################### Users ####################################[users]# disable user signup / registration;allow_sign_up = true# Allow non admin users to create organizations;allow_org_create = true# Set to true to automatically assign new users to the default organization (id 1);auto_assign_org = true# Default role new users will be automatically assigned (if disabled above is set to true);auto_assign_org_role = Viewer# Background text for the user field on the login page;login_hint = email or username#################################### Anonymous Auth ##########################[auth.anonymous]# enable anonymous accessenabled = true# specify organization name that should be used for unauthenticated usersorg_name = Main Org.# specify role for unauthenticated users;org_role = Admin#################################### Github Auth ##########################[auth.github];enabled = false;allow_sign_up = false;client_id = some_id;client_secret = some_secret;scopes = user:email,read:org;auth_url = https://github.com/login/oauth/authorize;token_url = https://github.com/login/oauth/access_token;api_url = https://api.github.com/user;team_ids =;allowed_organizations =#################################### Google Auth ##########################[auth.google];enabled = false;allow_sign_up = false;client_id = some_client_id;client_secret = some_client_secret;scopes = https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email;auth_url = https://accounts.google.com/o/oauth2/auth;token_url = https://accounts.google.com/o/oauth2/token;api_url = https://www.googleapis.com/oauth2/v1/userinfo;allowed_domains =#################################### Auth Proxy ##########################[auth.proxy];enabled = false;header_name = X-WEBAUTH-USER;header_property = username;auto_sign_up = true#################################### Basic Auth ##########################[auth.basic];enabled = true#################################### Auth LDAP ##########################[auth.ldap];enabled = false;config_file = /etc/grafana/ldap.toml#################################### SMTP / Emailing ##########################[smtp];enabled = false;host = localhost:25;user =;password =;cert_file =;key_file =;skip_verify = false;from_address = admin@grafana.localhost[emails];welcome_email_on_sign_up = false#################################### Logging ##########################[log]# Either "console", "file", default is "console"# Use comma to separate multiple modes, e.g. "console, file";mode = console, file# Buffer length of channel, keep it as it is if you don't know what it is.;buffer_len = 10000# Either "Trace", "Debug", "Info", "Warn", "Error", "Critical", default is "Trace";level = Info# For "console" mode only[log.console];level =# For "file" mode only[log.file];level =# This enables automated log rotate(switch of following options), default is true;log_rotate = true# Max line number of single file, default is 1000000;max_lines = 1000000# Max size shift of single file, default is 28 means 1 << 28, 256MB;max_lines_shift = 28# Segment log daily, default is true;daily_rotate = true# Expired days of log file(delete after max days), default is 7;max_days = 7#################################### AMPQ Event Publisher ##########################[event_publisher];enabled = false;rabbitmq_url = amqp://localhost/;exchange = grafana_events;#################################### Dashboard JSON files ##########################[dashboards.json];enabled = false;path = /var/lib/grafana/dashboardspath = /usr/lib/ambari-metrics-grafana/public/dashboards"
        }
      }
    },
    {
      "hadoop-env" : {
        "properties_attributes" : { },
        "properties" : {
          "hadoop_heapsize" : "1024",
          "proxyuser_group" : "users",
          "hadoop_root_logger" : "INFO,RFA",
          "dtnode_heapsize" : "1024m",
          "namenode_backup_dir" : "/tmp/upgrades",
          "hdfs_user" : "hdfs",
          "hadoop_pid_dir_prefix" : "/var/run/hadoop",
          "content" : "      # Set Hadoop-specific environment variables here.      # The only required environment variable is JAVA_HOME.  All others are      # optional.  When running a distributed configuration it is best to      # set JAVA_HOME in this file, so that it is correctly defined on      # remote nodes.      # The java implementation to use.  Required.      export JAVA_HOME={{java_home}}      export HADOOP_HOME_WARN_SUPPRESS=1      # Hadoop home directory      export HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}      # Hadoop Configuration Directory      {# this is different for HDP1 #}      # Path to jsvc required by secure HDP 2.0 datanode      export JSVC_HOME={{jsvc_path}}      # The maximum amount of heap to use, in MB. Default is 1000.      export HADOOP_HEAPSIZE="{{hadoop_heapsize}}"      export HADOOP_NAMENODE_INIT_HEAPSIZE="-Xms{{namenode_heapsize}}"      # Extra Java runtime options.  Empty by default.      export HADOOP_OPTS="-Djava.net.preferIPv4Stack=true ${HADOOP_OPTS}"      # Command specific options appended to HADOOP_OPTS when specified      HADOOP_JOBTRACKER_OPTS="-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{jtnode_opt_newsize}} -XX:MaxNewSize={{jtnode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xmx{{jtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dmapred.audit.logger=INFO,MRAUDIT -Dhadoop.mapreduce.jobsummary.logger=INFO,JSA ${HADOOP_JOBTRACKER_OPTS}"      HADOOP_TASKTRACKER_OPTS="-server -Xmx{{ttnode_heapsize}} -Dhadoop.security.logger=ERROR,console -Dmapred.audit.logger=ERROR,console ${HADOOP_TASKTRACKER_OPTS}"      {% if java_version < 8 %}      SHARED_HADOOP_NAMENODE_OPTS="-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -XX:PermSize={{namenode_opt_permsize}} -XX:MaxPermSize={{namenode_opt_maxpermsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT"      export HADOOP_NAMENODE_OPTS="${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\"/usr/hdp/current/hadoop-hdfs-namenode/bin/kill-name-node\\" -Dorg.mortbay.jetty.Request.maxFormContentSize=-1 ${HADOOP_NAMENODE_OPTS}"      export HADOOP_DATANODE_OPTS="-server -XX:ParallelGCThreads=4 -XX:+UseConcMarkSweepGC -XX:ErrorFile=/var/log/hadoop/$USER/hs_err_pid%p.log -XX:NewSize=200m -XX:MaxNewSize=200m -XX:PermSize=128m -XX:MaxPermSize=256m -Xloggc:/var/log/hadoop/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{dtnode_heapsize}} -Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_DATANODE_OPTS} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly"      export HADOOP_SECONDARYNAMENODE_OPTS="${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\"/usr/hdp/current/hadoop-hdfs-secondarynamenode/bin/kill-secondary-name-node\\" ${HADOOP_SECONDARYNAMENODE_OPTS}"      # The following applies to multiple commands (fs, dfs, fsck, distcp etc)      export HADOOP_CLIENT_OPTS="-Xmx${HADOOP_HEAPSIZE}m -XX:MaxPermSize=512m $HADOOP_CLIENT_OPTS"      {% else %}      SHARED_HADOOP_NAMENODE_OPTS="-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT"      export HADOOP_NAMENODE_OPTS="${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\"/usr/hdp/current/hadoop-hdfs-namenode/bin/kill-name-node\\" -Dorg.mortbay.jetty.Request.maxFormContentSize=-1 ${HADOOP_NAMENODE_OPTS}"      export HADOOP_DATANODE_OPTS="-server -XX:ParallelGCThreads=4 -XX:+UseConcMarkSweepGC -XX:ErrorFile=/var/log/hadoop/$USER/hs_err_pid%p.log -XX:NewSize=200m -XX:MaxNewSize=200m -Xloggc:/var/log/hadoop/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{dtnode_heapsize}} -Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_DATANODE_OPTS} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly"      export HADOOP_SECONDARYNAMENODE_OPTS="${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\"/usr/hdp/current/hadoop-hdfs-secondarynamenode/bin/kill-secondary-name-node\\" ${HADOOP_SECONDARYNAMENODE_OPTS}"      # The following applies to multiple commands (fs, dfs, fsck, distcp etc)      export HADOOP_CLIENT_OPTS="-Xmx${HADOOP_HEAPSIZE}m $HADOOP_CLIENT_OPTS"      {% endif %}      HADOOP_NFS3_OPTS="-Xmx{{nfsgateway_heapsize}}m -Dhadoop.security.logger=ERROR,DRFAS ${HADOOP_NFS3_OPTS}"      HADOOP_BALANCER_OPTS="-server -Xmx{{hadoop_heapsize}}m ${HADOOP_BALANCER_OPTS}"      # On secure datanodes, user to run the datanode as after dropping privileges      export HADOOP_SECURE_DN_USER=${HADOOP_SECURE_DN_USER:-{{hadoop_secure_dn_user}}}      # Extra ssh options.  Empty by default.      export HADOOP_SSH_OPTS="-o ConnectTimeout=5 -o SendEnv=HADOOP_CONF_DIR"      # Where log files are stored.  $HADOOP_HOME/logs by default.      export HADOOP_LOG_DIR={{hdfs_log_dir_prefix}}/$USER      # History server logs      export HADOOP_MAPRED_LOG_DIR={{mapred_log_dir_prefix}}/$USER      # Where log files are stored in the secure data environment.      export HADOOP_SECURE_DN_LOG_DIR={{hdfs_log_dir_prefix}}/$HADOOP_SECURE_DN_USER      # File naming remote slave hosts.  $HADOOP_HOME/conf/slaves by default.      # export HADOOP_SLAVES=${HADOOP_HOME}/conf/slaves      # host:path where hadoop code should be rsync'd from.  Unset by default.      # export HADOOP_MASTER=master:/home/$USER/src/hadoop      # Seconds to sleep between slave commands.  Unset by default.  This      # can be useful in large clusters, where, e.g., slave rsyncs can      # otherwise arrive faster than the master can service them.      # export HADOOP_SLAVE_SLEEP=0.1      # The directory where pid files are stored. /tmp by default.      export HADOOP_PID_DIR={{hadoop_pid_dir_prefix}}/$USER      export HADOOP_SECURE_DN_PID_DIR={{hadoop_pid_dir_prefix}}/$HADOOP_SECURE_DN_USER      # History server pid      export HADOOP_MAPRED_PID_DIR={{mapred_pid_dir_prefix}}/$USER      YARN_RESOURCEMANAGER_OPTS="-Dyarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY"      # A string representing this instance of hadoop. $USER by default.      export HADOOP_IDENT_STRING=$USER      # The scheduling priority for daemon processes.  See 'man nice'.      # export HADOOP_NICENESS=10      # Add database libraries      JAVA_JDBC_LIBS=""      if [ -d "/usr/share/java" ]; then      for jarFile in `ls /usr/share/java | grep -E "(mysql|ojdbc|postgresql|sqljdbc)" 2>/dev/null`      do      JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile      done      fi      # Add libraries to the hadoop classpath - some may not need a colon as they already include it      export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}${JAVA_JDBC_LIBS}      # Setting path to hdfs command line      export HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}      # Mostly required for hadoop 2.0      export JAVA_LIBRARY_PATH=${JAVA_LIBRARY_PATH}:/usr/lib/hadoop/lib/native/Linux-{{architecture}}-64:/usr/hdp/current/hadoop-client/lib/native/Linux-{{architecture}}-64      export HADOOP_OPTS="-Dhdp.version=$HDP_VERSION $HADOOP_OPTS"      # Fix temporary bug, when ulimit from conf files is not picked up, without full relogin.      # Makes sense to fix only when runing DN as root      if [ "$command" == "datanode" ] && [ "$EUID" -eq 0 ] && [ -n "$HADOOP_SECURE_DN_USER" ]; then      {% if is_datanode_max_locked_memory_set %}      ulimit -l {{datanode_max_locked_memory}}      {% endif %}      ulimit -n {{hdfs_user_nofile_limit}}      fi      # Enable ACLs on zookeper znodes if required      {% if hadoop_zkfc_opts is defined %}      export HADOOP_ZKFC_OPTS="{{hadoop_zkfc_opts}} $HADOOP_ZKFC_OPTS"      {% endif %}",
          "hdfs_log_dir_prefix" : "/var/log/hadoop",
          "namenode_opt_newsize" : "128m",
          "namenode_heapsize" : "1024m",
          "hdfs_tmp_dir" : "/tmp",
          "namenode_opt_maxpermsize" : "256m",
          "nfsgateway_heapsize" : "1024",
          "hdfs_user_nofile_limit" : "128000",
          "keyserver_host" : " ",
          "keyserver_port" : "",
          "hdfs_user_nproc_limit" : "65536",
          "namenode_opt_maxnewsize" : "128m",
          "namenode_opt_permsize" : "128m"
        }
      }
    },
    {
      "zookeeper-env" : {
        "properties_attributes" : { },
        "properties" : {
          "zk_log_dir" : "/var/log/zookeeper",
          "zk_user" : "zookeeper",
          "zk_pid_dir" : "/var/run/zookeeper",
          "content" : "export JAVA_HOME={{java64_home}}export ZOOKEEPER_HOME={{zk_home}}export ZOO_LOG_DIR={{zk_log_dir}}export ZOOPIDFILE={{zk_pid_file}}export SERVER_JVMFLAGS={{zk_server_heapsize}}export JAVA=$JAVA_HOME/bin/javaexport CLASSPATH=$CLASSPATH:/usr/share/zookeeper/*{% if security_enabled %}export SERVER_JVMFLAGS="$SERVER_JVMFLAGS -Djava.security.auth.login.config={{zk_server_jaas_file}}"export CLIENT_JVMFLAGS="$CLIENT_JVMFLAGS -Djava.security.auth.login.config={{zk_client_jaas_file}}"{% endif %}"
        }
      }
    },
    {
      "yarn-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "yarn_rm_summary_log_max_backup_size" : "256",
          "yarn_rm_summary_log_number_of_backup_files" : "20",
          "content" : "#Relative to Yarn Log Dir Prefixyarn.log.dir=.## Job Summary Appender## Use following logger to send summary to separate file defined by# hadoop.mapreduce.jobsummary.log.file rolled daily:# hadoop.mapreduce.jobsummary.logger=INFO,JSA#hadoop.mapreduce.jobsummary.logger=${hadoop.root.logger}hadoop.mapreduce.jobsummary.log.file=hadoop-mapreduce.jobsummary.loglog4j.appender.JSA=org.apache.log4j.DailyRollingFileAppender# Set the ResourceManager summary log filenameyarn.server.resourcemanager.appsummary.log.file=hadoop-mapreduce.jobsummary.log# Set the ResourceManager summary log level and appenderyarn.server.resourcemanager.appsummary.logger=${hadoop.root.logger}#yarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY# To enable AppSummaryLogging for the RM,# set yarn.server.resourcemanager.appsummary.logger to# LEVEL,RMSUMMARY in hadoop-env.sh# Appender for ResourceManager Application Summary Log# Requires the following properties to be set#    - hadoop.log.dir (Hadoop Log directory)#    - yarn.server.resourcemanager.appsummary.log.file (resource manager app summary log filename)#    - yarn.server.resourcemanager.appsummary.logger (resource manager app summary log level and appender)log4j.appender.RMSUMMARY=org.apache.log4j.RollingFileAppenderlog4j.appender.RMSUMMARY.File=${yarn.log.dir}/${yarn.server.resourcemanager.appsummary.log.file}log4j.appender.RMSUMMARY.MaxFileSize={{yarn_rm_summary_log_max_backup_size}}MBlog4j.appender.RMSUMMARY.MaxBackupIndex={{yarn_rm_summary_log_number_of_backup_files}}log4j.appender.RMSUMMARY.layout=org.apache.log4j.PatternLayoutlog4j.appender.RMSUMMARY.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayoutlog4j.appender.JSA.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%nlog4j.appender.JSA.DatePattern=.yyyy-MM-ddlog4j.appender.JSA.layout=org.apache.log4j.PatternLayoutlog4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=${yarn.server.resourcemanager.appsummary.logger}log4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=false# Appender for viewing information for errors and warningsyarn.ewma.cleanupInterval=300yarn.ewma.messageAgeLimitSeconds=86400yarn.ewma.maxUniqueMessages=250log4j.appender.EWMA=org.apache.hadoop.yarn.util.Log4jWarningErrorMetricsAppenderlog4j.appender.EWMA.cleanupInterval=${yarn.ewma.cleanupInterval}log4j.appender.EWMA.messageAgeLimitSeconds=${yarn.ewma.messageAgeLimitSeconds}log4j.appender.EWMA.maxUniqueMessages=${yarn.ewma.maxUniqueMessages}# Audit logging for ResourceManagerrm.audit.logger=${hadoop.root.logger}log4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAuditLogger=${rm.audit.logger}log4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAuditLogger=falselog4j.appender.RMAUDIT=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.RMAUDIT.File=${yarn.log.dir}/rm-audit.loglog4j.appender.RMAUDIT.layout=org.apache.log4j.PatternLayoutlog4j.appender.RMAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%nlog4j.appender.RMAUDIT.DatePattern=.yyyy-MM-dd# Audit logging for NodeManagernm.audit.logger=${hadoop.root.logger}log4j.logger.org.apache.hadoop.yarn.server.nodemanager.NMAuditLogger=${nm.audit.logger}log4j.additivity.org.apache.hadoop.yarn.server.nodemanager.NMAuditLogger=falselog4j.appender.NMAUDIT=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.NMAUDIT.File=${yarn.log.dir}/nm-audit.loglog4j.appender.NMAUDIT.layout=org.apache.log4j.PatternLayoutlog4j.appender.NMAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%nlog4j.appender.NMAUDIT.DatePattern=.yyyy-MM-dd"
        }
      }
    },
    {
      "mapred-env" : {
        "properties_attributes" : { },
        "properties" : {
          "jobhistory_heapsize" : "900",
          "mapred_user_nofile_limit" : "32768",
          "mapred_user" : "mapred",
          "mapred_user_nproc_limit" : "65536",
          "mapred_pid_dir_prefix" : "/var/run/hadoop-mapreduce",
          "mapred_log_dir_prefix" : "/var/log/hadoop-mapreduce",
          "content" : "# export JAVA_HOME=/home/y/libexec/jdk1.6.0/export HADOOP_JOB_HISTORYSERVER_HEAPSIZE={{jobhistory_heapsize}}export HADOOP_MAPRED_ROOT_LOGGER=INFO,RFA#export HADOOP_JOB_HISTORYSERVER_OPTS=#export HADOOP_MAPRED_LOG_DIR="" # Where log files are stored.  $HADOOP_MAPRED_HOME/logs by default.#export HADOOP_JHS_LOGGER=INFO,RFA # Hadoop JobSummary logger.#export HADOOP_MAPRED_PID_DIR= # The pid files are stored. /tmp by default.#export HADOOP_MAPRED_IDENT_STRING= #A string representing this instance of hadoop. $USER by default#export HADOOP_MAPRED_NICENESS= #The scheduling priority for daemons. Defaults to 0.export HADOOP_OPTS="-Dhdp.version=$HDP_VERSION $HADOOP_OPTS"export HADOOP_OPTS="-Djava.io.tmpdir={{hadoop_java_io_tmpdir}} $HADOOP_OPTS"export JAVA_LIBRARY_PATH="${JAVA_LIBRARY_PATH}:{{hadoop_java_io_tmpdir}}""
        }
      }
    },
    {
      "activity-zeppelin-interpreter" : {
        "properties_attributes" : { },
        "properties" : {
          "activity-zeppelin-interpreter-content" : "{  "interpreterSettings": {    "2BJB693M8": {      "id": "2BJB693M8",      "name": "phoenix",      "group": "phoenix",      "properties": {        "phoenix.jdbc.url": "{{activity_explorer_jdbc_url}}",        "phoenix.user": "",        "phoenix.password": "",        "phoenix.max.result": "1000",        "phoenix.driver.name": "org.apache.phoenix.jdbc.PhoenixDriver"      },      "interpreterGroup": [        {          "class": "org.apache.zeppelin.phoenix.PhoenixInterpreter",          "name": "sql"        }      ],      "dependencies": [],      "option": {        "remote": true,        "perNoteSession": false      }    }  },"interpreterBindings": {    "2BNVQJUBK": [      "2BJB693M8"    ],    "2BPD7951H": [      "2BJB693M8"    ],    "2BQH91X36": [      "2BJB693M8"    ],    "2BTCVPTMH": [      "2BJB693M8"    ]  },"interpreterRepositories": [    {      "id": "central",      "type": "default",      "url": "http://repo1.maven.org/maven2/",      "releasePolicy": {        "enabled": true,        "updatePolicy": "daily",        "checksumPolicy": "warn"      },      "snapshotPolicy": {        "enabled": true,        "updatePolicy": "daily",        "checksumPolicy": "warn"      },      "mirroredRepositories": [],      "repositoryManager": false    }  ]}"
        }
      }
    },
    {
      "cluster-env" : {
        "properties_attributes" : { },
        "properties" : {
          "hide_yarn_memory_widget" : "false",
          "enable_external_ranger" : "false",
          "recovery_max_count" : "6",
          "manage_dirs_on_root" : "true",
          "managed_hdfs_resource_property_names" : "",
          "recovery_retry_interval" : "5",
          "stack_features" : "{  "stack_features": [    {      "name": "snappy",      "description": "Snappy compressor/decompressor support",      "min_version": "2.0.0.0",      "max_version": "2.2.0.0"    },    {      "name": "lzo",      "description": "LZO libraries support",      "min_version": "2.2.1.0"    },    {      "name": "express_upgrade",      "description": "Express upgrade support",      "min_version": "2.1.0.0"    },    {      "name": "rolling_upgrade",      "description": "Rolling upgrade support",      "min_version": "2.2.0.0"    },    {      "name": "kafka_acl_migration_support",      "description": "ACL migration support",      "min_version": "2.3.4.0"    },    {      "name": "secure_zookeeper",      "description": "Protect ZNodes with SASL acl in secure clusters",      "min_version": "2.6.0.0"    },    {      "name": "config_versioning",      "description": "Configurable versions support",      "min_version": "2.3.0.0"    },    {      "name": "datanode_non_root",      "description": "DataNode running as non-root support (AMBARI-7615)",      "min_version": "2.2.0.0"    },    {      "name": "remove_ranger_hdfs_plugin_env",      "description": "HDFS removes Ranger env files (AMBARI-14299)",      "min_version": "2.3.0.0"    },    {      "name": "ranger",      "description": "Ranger Service support",      "min_version": "2.2.0.0"    },    {      "name": "ranger_tagsync_component",      "description": "Ranger Tagsync component support (AMBARI-14383)",      "min_version": "2.5.0.0"    },    {      "name": "phoenix",      "description": "Phoenix Service support",      "min_version": "2.3.0.0"    },    {      "name": "nfs",      "description": "NFS support",      "min_version": "2.3.0.0"    },    {      "name": "tez_for_spark",      "description": "Tez dependency for Spark",      "min_version": "2.2.0.0",      "max_version": "2.3.0.0"    },    {      "name": "timeline_state_store",      "description": "Yarn application timeline-service supports state store property (AMBARI-11442)",      "min_version": "2.2.0.0"    },    {      "name": "copy_tarball_to_hdfs",      "description": "Copy tarball to HDFS support (AMBARI-12113)",      "min_version": "2.2.0.0"    },    {      "name": "spark_16plus",      "description": "Spark 1.6+",      "min_version": "2.4.0.0"    },    {      "name": "spark_thriftserver",      "description": "Spark Thrift Server",      "min_version": "2.3.2.0"    },    {      "name": "storm_kerberos",      "description": "Storm Kerberos support (AMBARI-7570)",      "min_version": "2.2.0.0"    },    {      "name": "storm_ams",      "description": "Storm AMS integration (AMBARI-10710)",      "min_version": "2.2.0.0"    },    {      "name": "create_kafka_broker_id",      "description": "Ambari should create Kafka Broker Id (AMBARI-12678)",      "min_version": "2.2.0.0",      "max_version": "2.3.0.0"    },    {      "name": "kafka_listeners",      "description": "Kafka listeners (AMBARI-10984)",      "min_version": "2.3.0.0"    },    {      "name": "kafka_kerberos",      "description": "Kafka Kerberos support (AMBARI-10984)",      "min_version": "2.3.0.0"    },    {      "name": "pig_on_tez",      "description": "Pig on Tez support (AMBARI-7863)",      "min_version": "2.2.0.0"    },    {      "name": "ranger_usersync_non_root",      "description": "Ranger Usersync as non-root user (AMBARI-10416)",      "min_version": "2.3.0.0"    },    {      "name": "ranger_audit_db_support",      "description": "Ranger Audit to DB support",      "min_version": "2.2.0.0",      "max_version": "2.4.99.99"    },    {      "name": "accumulo_kerberos_user_auth",      "description": "Accumulo Kerberos User Auth (AMBARI-10163)",      "min_version": "2.3.0.0"    },    {      "name": "knox_versioned_data_dir",      "description": "Use versioned data dir for Knox (AMBARI-13164)",      "min_version": "2.3.2.0"    },    {      "name": "knox_sso_topology",      "description": "Knox SSO Topology support (AMBARI-13975)",      "min_version": "2.3.8.0"    },    {      "name": "atlas_rolling_upgrade",      "description": "Rolling upgrade support for Atlas",      "min_version": "2.3.0.0"    },    {      "name": "oozie_admin_user",      "description": "Oozie install user as an Oozie admin user (AMBARI-7976)",      "min_version": "2.2.0.0"    },    {      "name": "oozie_create_hive_tez_configs",      "description": "Oozie create configs for Ambari Hive and Tez deployments (AMBARI-8074)",      "min_version": "2.2.0.0"    },    {      "name": "oozie_setup_shared_lib",      "description": "Oozie setup tools used to shared Oozie lib to HDFS (AMBARI-7240)",      "min_version": "2.2.0.0"    },    {      "name": "oozie_host_kerberos",      "description": "Oozie in secured clusters uses _HOST in Kerberos principal (AMBARI-9775)",      "min_version": "2.0.0.0"    },    {      "name": "falcon_extensions",      "description": "Falcon Extension",      "min_version": "2.5.0.0"    },    {      "name": "hive_metastore_upgrade_schema",      "description": "Hive metastore upgrade schema support (AMBARI-11176)",      "min_version": "2.3.0.0"     },    {      "name": "hive_server_interactive",      "description": "Hive server interactive support (AMBARI-15573)",      "min_version": "2.5.0.0"     },    {      "name": "hive_webhcat_specific_configs",      "description": "Hive webhcat specific configurations support (AMBARI-12364)",      "min_version": "2.3.0.0"     },    {      "name": "hive_purge_table",      "description": "Hive purge table support (AMBARI-12260)",      "min_version": "2.3.0.0"     },    {      "name": "hive_server2_kerberized_env",      "description": "Hive server2 working on kerberized environment (AMBARI-13749)",      "min_version": "2.2.3.0",      "max_version": "2.2.5.0"     },    {      "name": "hive_env_heapsize",      "description": "Hive heapsize property defined in hive-env (AMBARI-12801)",      "min_version": "2.2.0.0"    },    {      "name": "ranger_kms_hsm_support",      "description": "Ranger KMS HSM support (AMBARI-15752)",      "min_version": "2.5.0.0"    },    {      "name": "ranger_log4j_support",      "description": "Ranger supporting log-4j properties (AMBARI-15681)",      "min_version": "2.5.0.0"    },    {      "name": "ranger_kerberos_support",      "description": "Ranger Kerberos support",      "min_version": "2.5.0.0"    },    {      "name": "hive_metastore_site_support",      "description": "Hive Metastore site support",      "min_version": "2.5.0.0"    },    {      "name": "ranger_usersync_password_jceks",      "description": "Saving Ranger Usersync credentials in jceks",      "min_version": "2.5.0.0"    },    {      "name": "ranger_install_infra_client",      "description": "Ambari Infra Service support",      "min_version": "2.5.0.0"    },    {      "name": "falcon_atlas_support_2_3",      "description": "Falcon Atlas integration support for 2.3 stack",      "min_version": "2.3.99.0",      "max_version": "2.4.0.0"    },    {      "name": "falcon_atlas_support",      "description": "Falcon Atlas integration",      "min_version": "2.5.0.0"    },    {      "name": "hbase_home_directory",      "description": "Hbase home directory in HDFS needed for HBASE backup",      "min_version": "2.5.0.0"    },    {      "name": "spark_livy",      "description": "Livy as slave component of spark",      "min_version": "2.5.0.0"    },    {      "name": "spark_livy2",      "description": "Livy as slave component of spark",      "min_version": "2.6.0.0"    },    {      "name": "atlas_ranger_plugin_support",      "description": "Atlas Ranger plugin support",      "min_version": "2.5.0.0"    },    {      "name": "atlas_conf_dir_in_path",      "description": "Prepend the Atlas conf dir (/etc/atlas/conf) to the classpath of Storm and Falcon",      "min_version": "2.3.0.0",      "max_version": "2.4.99.99"    },    {      "name": "atlas_upgrade_support",      "description": "Atlas supports express and rolling upgrades",      "min_version": "2.5.0.0"    },    {      "name": "atlas_hook_support",      "description": "Atlas support for hooks in Hive, Storm, Falcon, and Sqoop",      "min_version": "2.5.0.0"    },    {      "name": "ranger_pid_support",      "description": "Ranger Service support pid generation AMBARI-16756",      "min_version": "2.5.0.0"    },    {      "name": "ranger_kms_pid_support",      "description": "Ranger KMS Service support pid generation",      "min_version": "2.5.0.0"    },    {      "name": "ranger_admin_password_change",      "description": "Allow ranger admin credentials to be specified during cluster creation (AMBARI-17000)",      "min_version": "2.5.0.0"    },    {      "name": "ranger_setup_db_on_start",      "description": "Allows setup of ranger db and java patches to be called multiple times on each START",      "min_version": "2.6.0.0"    },    {      "name": "storm_metrics_apache_classes",      "description": "Metrics sink for Storm that uses Apache class names",      "min_version": "2.5.0.0"    },    {      "name": "spark_java_opts_support",      "description": "Allow Spark to generate java-opts file",      "min_version": "2.2.0.0",      "max_version": "2.4.0.0"    },    {      "name": "atlas_hbase_setup",      "description": "Use script to create Atlas tables in Hbase and set permissions for Atlas user.",      "min_version": "2.5.0.0"    },    {      "name": "ranger_hive_plugin_jdbc_url",      "description": "Handle Ranger hive repo config jdbc url change for stack 2.5 (AMBARI-18386)",      "min_version": "2.5.0.0"    },    {      "name": "zkfc_version_advertised",      "description": "ZKFC advertise version",      "min_version": "2.5.0.0"    },    {      "name": "phoenix_core_hdfs_site_required",      "description": "HDFS and CORE site required for Phoenix",      "max_version": "2.5.9.9"    },    {      "name": "ranger_tagsync_ssl_xml_support",      "description": "Ranger Tagsync ssl xml support.",      "min_version": "2.6.0.0"    },    {      "name": "ranger_xml_configuration",      "description": "Ranger code base support xml configurations",      "min_version": "2.3.0.0"    },    {      "name": "kafka_ranger_plugin_support",      "description": "Ambari stack changes for Ranger Kafka Plugin (AMBARI-11299)",      "min_version": "2.3.0.0"    },    {      "name": "yarn_ranger_plugin_support",      "description": "Implement Stack changes for Ranger Yarn Plugin integration (AMBARI-10866)",      "min_version": "2.3.0.0"    },    {      "name": "ranger_solr_config_support",      "description": "Showing Ranger solrconfig.xml on UI",      "min_version": "2.6.0.0"    },    {      "name": "hive_interactive_atlas_hook_required",      "description": "Registering Atlas Hook for Hive Interactive.",      "min_version": "2.6.0.0"    },    {      "name": "core_site_for_ranger_plugins",      "description": "Adding core-site.xml in when Ranger plugin is enabled for Storm, Kafka, and Knox.",      "min_version": "2.6.0.0"    },    {      "name": "atlas_install_hook_package_support",      "description": "Stop installing packages from 2.6",      "max_version": "2.5.9.9"    },    {      "name": "atlas_hdfs_site_on_namenode_ha",      "description": "Need to create hdfs-site under atlas-conf dir when Namenode-HA is enabled.",      "min_version": "2.6.0.0"    },    {      "name": "hive_interactive_ga",      "description": "Hive Interactive GA support",      "min_version": "2.6.0.0"    },    {      "name": "secure_ranger_ssl_password",      "description": "Securing Ranger Admin and Usersync SSL and Trustore related passwords in jceks",      "min_version": "2.6.0.0"    },    {      "name": "ranger_kms_ssl",      "description": "Ranger KMS SSL properties in ambari stack",      "min_version": "2.6.0.0"    }  ]}",
          "stack_tools" : "{  "stack_selector": ["hdp-select", "/usr/bin/hdp-select", "hdp-select"],  "conf_selector": ["conf-select", "/usr/bin/conf-select", "conf-select"]}",
          "repo_ubuntu_template" : "{{package_type}} {{base_url}} {{components}}",
          "stack_root" : "/usr/hdp",
          "fetch_nonlocal_groups" : "true",
          "one_dir_per_partition" : "false",
          "kerberos_domain" : "EXAMPLE.COM",
          "ignore_bad_mounts" : "false",
          "user_group" : "hadoop",
          "sysprep_skip_setup_jce" : "false",
          "override_uid" : "true",
          "security_enabled" : "false",
          "sysprep_skip_copy_fast_jar_hdfs" : "false",
          "agent_mounts_ignore_list" : "",
          "recovery_lifetime_max_count" : "1024",
          "recovery_type" : "AUTO_START",
          "repo_suse_rhel_template" : "[{{repo_id}}]name={{repo_id}}{% if mirror_list %}mirrorlist={{mirror_list}}{% else %}baseurl={{base_url}}{% endif %}path=/enabled=1gpgcheck=0",
          "sysprep_skip_create_users_and_groups" : "false",
          "sysprep_skip_copy_tarballs_hdfs" : "false",
          "sysprep_skip_copy_oozie_share_lib_to_hdfs" : "false",
          "recovery_enabled" : "true",
          "smokeuser" : "ambari-qa",
          "smokeuser_keytab" : "/etc/security/keytabs/smokeuser.headless.keytab",
          "alerts_repeat_tolerance" : "1",
          "recovery_window_in_minutes" : "60",
          "ignore_groupsusers_create" : "false"
        }
      }
    },
    {
      "hive-env" : {
        "properties_attributes" : { },
        "properties" : {
          "webhcat_user" : "hcat",
          "hive_log_dir" : "/var/log/hive",
          "hive_security_authorization" : "None",
          "hive_user_nproc_limit" : "16000",
          "content" : "      export HADOOP_USER_CLASSPATH_FIRST=true  #this prevents old metrics libs from mapreduce lib from bringing in old jar deps overriding HIVE_LIB      if [ "$SERVICE" = "cli" ]; then      if [ -z "$DEBUG" ]; then      export HADOOP_OPTS="$HADOOP_OPTS -XX:NewRatio=12 -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:+UseNUMA -XX:+UseParallelGC -XX:-UseGCOverheadLimit"      else      export HADOOP_OPTS="$HADOOP_OPTS -XX:NewRatio=12 -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:-UseGCOverheadLimit"      fi      fi      # The heap size of the jvm stared by hive shell script can be controlled via:      if [ "$SERVICE" = "metastore" ]; then      export HADOOP_HEAPSIZE={{hive_metastore_heapsize}} # Setting for HiveMetastore      else      export HADOOP_HEAPSIZE={{hive_heapsize}} # Setting for HiveServer2 and Client      fi      export HADOOP_CLIENT_OPTS="$HADOOP_CLIENT_OPTS  -Xmx${HADOOP_HEAPSIZE}m"      export HADOOP_CLIENT_OPTS="$HADOOP_CLIENT_OPTS{{heap_dump_opts}}"      # Larger heap size may be required when running queries over large number of files or partitions.      # By default hive shell scripts use a heap size of 256 (MB).  Larger heap size would also be      # appropriate for hive server (hwi etc).      # Set HADOOP_HOME to point to a specific hadoop install directory      HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}      export HIVE_HOME=${HIVE_HOME:-{{hive_home_dir}}}      # Hive Configuration Directory can be controlled by:      export HIVE_CONF_DIR=${HIVE_CONF_DIR:-{{hive_config_dir}}}      # Folder containing extra libraries required for hive compilation/execution can be controlled by:      if [ "${HIVE_AUX_JARS_PATH}" != "" ]; then        if [ -f "${HIVE_AUX_JARS_PATH}" ]; then          export HIVE_AUX_JARS_PATH=${HIVE_AUX_JARS_PATH}        elif [ -d "/usr/hdp/current/hive-webhcat/share/hcatalog" ]; then          export HIVE_AUX_JARS_PATH=/usr/hdp/current/hive-webhcat/share/hcatalog/hive-hcatalog-core.jar        fi      elif [ -d "/usr/hdp/current/hive-webhcat/share/hcatalog" ]; then        export HIVE_AUX_JARS_PATH=/usr/hdp/current/hive-webhcat/share/hcatalog/hive-hcatalog-core.jar      fi      export METASTORE_PORT={{hive_metastore_port}}      {% if sqla_db_used or lib_dir_available %}      export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:{{jdbc_libs_dir}}"      export JAVA_LIBRARY_PATH="$JAVA_LIBRARY_PATH:{{jdbc_libs_dir}}"      {% endif %}",
          "hive.atlas.hook" : "false",
          "hive_txn_acid" : "off",
          "hive.client.heapsize" : "1024",
          "hive.heapsize" : "2933",
          "hive_database_type" : "mysql",
          "hive_user_nofile_limit" : "32000",
          "alert_ldap_username" : "",
          "hcat_pid_dir" : "/var/run/webhcat",
          "heap_dump_location" : "/tmp",
          "hive_database" : "New MySQL Database",
          "hcat_log_dir" : "/var/log/webhcat",
          "hive_exec_orc_storage_strategy" : "SPEED",
          "hive_user" : "hive",
          "hive.metastore.heapsize" : "977",
          "hive_timeline_logging_enabled" : "true",
          "hive.log.level" : "INFO",
          "hive_database_name" : "hive",
          "enable_heap_dump" : "false",
          "hive_pid_dir" : "/var/run/hive",
          "hcat_user" : "hcat",
          "hive_ambari_database" : "MySQL"
        }
      }
    },
    {
      "ams-grafana-env" : {
        "properties_attributes" : { },
        "properties" : {
          "metrics_grafana_log_dir" : "/var/log/ambari-metrics-grafana",
          "metrics_grafana_pid_dir" : "/var/run/ambari-metrics-grafana",
          "content" : "# Set environment variables here.# AMS UI Server Home Direxport AMS_GRAFANA_HOME_DIR={{ams_grafana_home_dir}}# AMS UI Server Data Direxport AMS_GRAFANA_DATA_DIR={{ams_grafana_data_dir}}# AMS UI Server Log Direxport AMS_GRAFANA_LOG_DIR={{ams_grafana_log_dir}}# AMS UI Server PID Direxport AMS_GRAFANA_PID_DIR={{ams_grafana_pid_dir}}",
          "metrics_grafana_data_dir" : "/var/lib/ambari-metrics-grafana",
          "metrics_grafana_username" : "admin"
        }
      }
    },
    {
      "hive-interactive-site" : {
        "properties_attributes" : { },
        "properties" : {
          "hive.vectorized.groupby.maxentries" : "1000000",
          "hive.llap.client.consistent.splits" : "true",
          "hive.llap.daemon.yarn.container.mb" : "0",
          "hive.llap.io.memory.size" : "0",
          "hive.llap.daemon.am.liveness.heartbeat.interval.ms" : "10000ms",
          "hive.llap.task.scheduler.locality.delay" : "8000",
          "hive.vectorized.execution.reduce.enabled" : "true",
          "hive.llap.daemon.rpc.port" : "0",
          "hive.execution.mode" : "llap",
          "hive.exec.orc.split.strategy" : "HYBRID",
          "hive.llap.io.enabled" : "true",
          "hive.vectorized.execution.mapjoin.native.fast.hashtable.enabled" : "true",
          "hive.optimize.dynamic.partition.hashjoin" : "true",
          "hive.mapjoin.hybridgrace.hashtable" : "true",
          "hive.execution.engine" : "tez",
          "hive.llap.object.cache.enabled" : "true",
          "hive.llap.daemon.queue.name" : "default",
          "hive.tez.container.size" : "682",
          "hive.metastore.uris" : "",
          "hive.server2.tez.sessions.restricted.configs" : "hive.execution.mode,hive.execution.engine",
          "hive.tez.cartesian-product.enabled" : "true",
          "hive.llap.auto.allow.uber" : "false",
          "hive.server2.webui.port" : "10502",
          "hive.llap.daemon.num.executors" : "1",
          "hive.llap.daemon.task.scheduler.enable.preemption" : "true",
          "hive.llap.io.use.lrfu" : "true",
          "hive.vectorized.execution.mapjoin.native.enabled" : "true",
          "hive.metastore.event.listeners" : "",
          "hive.server2.tez.default.queues" : "default",
          "hive.llap.zk.sm.connectionString" : "%HOSTGROUP::host_group_3%:2181,s%HOSTGROUP::host_group_4%:2181,%HOSTGROUP::host_group_4%:2181",
          "hive.server2.tez.sessions.custom.queue.allowed" : "ignore",
          "hive.server2.tez.sessions.per.default.queue" : "1",
          "hive.server2.webui.use.ssl" : "false",
          "hive.llap.management.rpc.port" : "15004",
          "hive.server2.thrift.http.port" : "10501",
          "hive.map.aggr.hash.min.reduction" : "0.99",
          "hive.llap.daemon.logger" : "query-routing",
          "hive.prewarm.enabled" : "false",
          "hive.auto.convert.join.noconditionaltask.size" : "1000000000",
          "llap.shuffle.connection-keep-alive.timeout" : "60",
          "hive.llap.execution.mode" : "only",
          "hive.llap.daemon.yarn.shuffle.port" : "15551",
          "hive.llap.enable.grace.join.in.llap" : "false",
          "hive.llap.daemon.vcpus.per.instance" : "${hive.llap.daemon.num.executors}",
          "hive.llap.io.memory.mode" : "",
          "hive.server2.thrift.port" : "10500",
          "hive.driver.parallel.compilation" : "true",
          "hive.tez.exec.print.summary" : "true",
          "hive.tez.input.generate.consistent.splits" : "true",
          "hive.vectorized.execution.mapjoin.minmax.enabled" : "true",
          "hive.server2.enable.doAs" : "false",
          "hive.server2.zookeeper.namespace" : "hiveserver2-hive2",
          "hive.tez.bucket.pruning" : "true",
          "hive.llap.io.threadpool.size" : "2",
          "llap.shuffle.connection-keep-alive.enable" : "true",
          "hive.llap.daemon.service.hosts" : "@llap0",
          "hive.server2.tez.initialize.default.sessions" : "true"
        }
      }
    },
    {
      "ranger-hive-audit" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "ranger-hive-security" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "slider-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "# Licensed to the Apache Software Foundation (ASF) under one# or more contributor license agreements.  See the NOTICE file# distributed with this work for additional information# regarding copyright ownership.  The ASF licenses this file# to you under the Apache License, Version 2.0 (the# "License"); you may not use this file except in compliance# with the License.  You may obtain a copy of the License at##     http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing, software# distributed under the License is distributed on an "AS IS" BASIS,# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.# See the License for the specific language governing permissions and# limitations under the License.# Define some default values that can be overridden by system propertieslog4j.rootLogger=INFO,stdoutlog4j.threshhold=ALLlog4j.appender.stdout=org.apache.log4j.ConsoleAppenderlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout# log layout skips stack-trace creation operations by avoiding line numbers and methodlog4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} [%t] %-5p %c{2} - %m%n# debug edition is much more expensive#log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} [%t] %-5p %c{2} (%F:%M(%L)) - %m%nlog4j.appender.subprocess=org.apache.log4j.ConsoleAppenderlog4j.appender.subprocess.layout=org.apache.log4j.PatternLayoutlog4j.appender.subprocess.layout.ConversionPattern=[%c{1}]: %m%n#log4j.logger.org.apache.slider.yarn.appmaster.SliderAppMasterer.master=INFO,subprocess# for debugging Slider#log4j.logger.org.apache.slider=DEBUG#log4j.logger.org.apache.slider=DEBUG# uncomment to debug service lifecycle issues#log4j.logger.org.apache.hadoop.yarn.service.launcher=DEBUG#log4j.logger.org.apache.hadoop.yarn.service=DEBUG# uncomment for YARN operations#log4j.logger.org.apache.hadoop.yarn.client=DEBUG# uncomment this to debug security problems#log4j.logger.org.apache.hadoop.security=DEBUG#crank back on some noiselog4j.logger.org.apache.hadoop.util.NativeCodeLoader=ERRORlog4j.logger.org.apache.hadoop.hdfs=WARNlog4j.logger.org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor=WARNlog4j.logger.org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl=WARNlog4j.logger.org.apache.zookeeper=WARN"
        }
      }
    }
  ],
  "host_groups" : [
    {
      "components" : [
        {
          "name" : "NODEMANAGER"
        },
        {
          "name" : "HST_AGENT"
        },
        {
          "name" : "DATANODE"
        },
        {
          "name" : "METRICS_MONITOR"
        }
      ],
      "configurations" : [ ],
      "name" : "DATANODE",
      "cardinality" : "5"
    },
    {
      "components" : [
        {
          "name" : "YARN_CLIENT"
        },
        {
          "name" : "HDFS_CLIENT"
        },
        {
          "name" : "HISTORYSERVER"
        },
        {
          "name" : "METRICS_MONITOR"
        },
        {
          "name" : "TEZ_CLIENT"
        },
        {
          "name" : "ZOOKEEPER_CLIENT"
        },
        {
          "name" : "HCAT"
        },
        {
          "name" : "PIG"
        },
        {
          "name" : "ACTIVITY_ANALYZER"
        },
        {
          "name" : "ACTIVITY_EXPLORER"
        },
        {
          "name" : "HST_AGENT"
        },
        {
          "name" : "MAPREDUCE2_CLIENT"
        },
        {
          "name" : "SLIDER"
        },
        {
          "name" : "OOZIE_CLIENT"
        },
        {
          "name" : "AMBARI_SERVER"
        },
        {
          "name" : "APP_TIMELINE_SERVER"
        },
        {
          "name" : "HIVE_CLIENT"
        },
        {
          "name" : "METRICS_COLLECTOR"
        },
        {
          "name" : "METRICS_GRAFANA"
        }
      ],
      "configurations" : [ ],
      "name" : "AMBARI",
      "cardinality" : "1"
    },
    {
      "components" : [
        {
          "name" : "HST_AGENT"
        },
        {
          "name" : "ZOOKEEPER_SERVER"
        },
        {
          "name" : "METRICS_MONITOR"
        },
        {
          "name" : "NAMENODE"
        },
        {
          "name" : "TEZ_CLIENT"
        },
        {
          "name" : "RESOURCEMANAGER"
        }
      ],
      "configurations" : [ ],
      "name" : "NAMENODE",
      "cardinality" : "1"
    },
    {
      "components" : [
        {
          "name" : "YARN_CLIENT"
        },
        {
          "name" : "HDFS_CLIENT"
        },
        {
          "name" : "HIVE_SERVER"
        },
        {
          "name" : "HST_SERVER"
        },
        {
          "name" : "MYSQL_SERVER"
        },
        {
          "name" : "METRICS_MONITOR"
        },
        {
          "name" : "HIVE_METASTORE"
        },
        {
          "name" : "TEZ_CLIENT"
        },
        {
          "name" : "ZOOKEEPER_CLIENT"
        },
        {
          "name" : "HCAT"
        },
        {
          "name" : "PIG"
        },
        {
          "name" : "WEBHCAT_SERVER"
        },
        {
          "name" : "HST_AGENT"
        },
        {
          "name" : "MAPREDUCE2_CLIENT"
        },
        {
          "name" : "SLIDER"
        },
        {
          "name" : "ZOOKEEPER_SERVER"
        },
        {
          "name" : "OOZIE_CLIENT"
        },
        {
          "name" : "OOZIE_SERVER"
        },
        {
          "name" : "HIVE_CLIENT"
        }
      ],
      "configurations" : [ ],
      "name" : "EDGENODE",
      "cardinality" : "1"
    },
    {
      "components" : [
        {
          "name" : "SECONDARY_NAMENODE"
        },
        {
          "name" : "HST_AGENT"
        },
        {
          "name" : "ZOOKEEPER_SERVER"
        },
        {
          "name" : "METRICS_MONITOR"
        }
      ],
      "configurations" : [ ],
      "name" : "SNAMENODE",
      "cardinality" : "1"
    }
  ],
  "settings" : [
    {
      "recovery_settings" : [
        {
          "recovery_enabled" : "true"
        }
      ]
    },
    {
      "service_settings" : [
        {
          "name" : "OOZIE",
          "credential_store_enabled" : "true"
        },
        {
          "name" : "HIVE",
          "credential_store_enabled" : "true"
        },
        {
          "recovery_enabled" : "true",
          "name" : "AMBARI_METRICS"
        }
      ]
    },
    {
      "component_settings" : [
        {
          "recovery_enabled" : "true",
          "name" : "METRICS_COLLECTOR"
        }
      ]
    }
  ],
  "Blueprints" : {
    "stack_name" : "HDP",
    "stack_version" : "2.6"
  }
}